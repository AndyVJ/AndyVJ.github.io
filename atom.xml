<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡文杰</title>
  
  <subtitle>专业道路上的自我修养</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.huvjie.com/"/>
  <updated>2021-06-01T12:53:13.432Z</updated>
  <id>https://blog.huvjie.com/</id>
  
  <author>
    <name>huvjie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WPF 中使用 OpenFIleDialog</title>
    <link href="https://blog.huvjie.com/2021/06/01/210601N01/"/>
    <id>https://blog.huvjie.com/2021/06/01/210601N01/</id>
    <published>2021-06-01T12:48:55.000Z</published>
    <updated>2021-06-01T12:53:13.432Z</updated>
    
    <content type="html"><![CDATA[<p>WPF 中好像没有 OpenFileDialog 的空间，只能借用其他的了。 SaveFileDialog 应该也是类似的。</p><p><img src="http://image.huvjie.com/210601N01_img01.jpg" alt="▲ 测试界面"></p><div style="font-size:13px;color:gray;text-align:center">▲ 测试界面 </div><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Grid&gt;</span><br><span class="line">    &lt;StackPanel Orientation=&quot;Vertical&quot; &gt;</span><br><span class="line">        &lt;TextBox Height=&quot;50&quot; Margin=&quot;10&quot; BorderThickness=&quot;1&quot; VerticalContentAlignment=&quot;Center&quot; BorderBrush=&quot;Black&quot; x:Name=&quot;FileNameTextBox&quot;/&gt;</span><br><span class="line">        &lt;Button x:Name=&quot;btnFileDialog&quot; Click=&quot;BtnFileDialog_Click&quot; Content=&quot;OpenFileDialog-win32&quot; FontSize=&quot;20&quot; FontWeight=&quot;Bold&quot; Margin=&quot;10&quot;/&gt;</span><br><span class="line">        &lt;Button x:Name=&quot;btnFileDialog1&quot; Click=&quot;BtnFileDialog1_Click&quot; Content=&quot;OpenFileDialog-winform&quot; FontSize=&quot;20&quot; FontWeight=&quot;Bold&quot; Margin=&quot;10&quot;/&gt;</span><br><span class="line">        &lt;Button x:Name=&quot;btnFileDialog2&quot; Click=&quot;BtnFileDialog2_Click&quot; Content=&quot;OpenFileDialog-winform&quot; FontSize=&quot;20&quot; FontWeight=&quot;Bold&quot; Margin=&quot;10&quot;/&gt;</span><br><span class="line">    &lt;/StackPanel&gt;</span><br><span class="line">&lt;/Grid&gt;</span><br></pre></td></tr></table></figure><p>直接在 button 的 click 事件中写个测试。</p><h2 id="用-win32-控件中的-OpenFileDialog"><a href="#用-win32-控件中的-OpenFileDialog" class="headerlink" title="用 win32 控件中的 OpenFileDialog"></a>用 win32 控件中的 OpenFileDialog</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create OpenFileDialog </span></span><br><span class="line">Microsoft.Win32.OpenFileDialog dlg = <span class="keyword">new</span> Microsoft.Win32.OpenFileDialog();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set filter for file extension and default file extension </span></span><br><span class="line">dlg.DefaultExt = <span class="string">".txt"</span>;</span><br><span class="line">dlg.Filter = <span class="string">"Text documents (.txt)|*.txt"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Display OpenFileDialog by calling ShowDialog method </span></span><br><span class="line">Nullable&lt;<span class="keyword">bool</span>&gt; result = dlg.ShowDialog();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get the selected file name and display in a TextBox </span></span><br><span class="line"><span class="keyword">if</span> (result == <span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Open document </span></span><br><span class="line">    <span class="keyword">string</span> filename = dlg.FileName;</span><br><span class="line">    FileNameTextBox.Text = filename;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用-Winform-中的-OpenFileDialog"><a href="#用-Winform-中的-OpenFileDialog" class="headerlink" title="用 Winform 中的 OpenFileDialog"></a>用 Winform 中的 OpenFileDialog</h2><p>项目中需要引用一下 <code>System.Windows.Forms</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.Windows.Forms.OpenFileDialog openFileDialog1 = <span class="keyword">new</span> System.Windows.Forms.OpenFileDialog();</span><br><span class="line">openFileDialog1.InitialDirectory = <span class="string">@"C:\Users\Administrator\Desktop\"</span>;</span><br><span class="line">openFileDialog1.Filter = <span class="string">"txt files (*.txt)|*.txt|All files (*.*)|*.*"</span>;</span><br><span class="line">openFileDialog1.FilterIndex = <span class="number">2</span>;</span><br><span class="line">openFileDialog1.RestoreDirectory = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//此处做你想做的事 ...</span></span><br><span class="line">    FileNameTextBox.Text = openFileDialog1.FileName; ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似的还有 FolderBrowserDialog 文件夹浏览对话框；</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">System.Windows.Forms.FolderBrowserDialog folderBrowserDialog = <span class="keyword">new</span> System.Windows.Forms.FolderBrowserDialog();</span><br><span class="line">System.Windows.Forms.DialogResult result = folderBrowserDialog.ShowDialog();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (result == System.Windows.Forms.DialogResult.OK)</span><br><span class="line">&#123;</span><br><span class="line">    FileNameTextBox.Text = folderBrowserDialog.SelectedPath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>至于 WPF 当然可以自己去实现一个，满足自己的定制需求。</p><!-- <hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span> -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WPF 中好像没有 OpenFileDialog 的空间，只能借用其他的了。 SaveFileDialog 应该也是类似的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/210601N01_img01.jpg&quot; alt=&quot;▲ 测试界面&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 测试界面 &lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>WPF 附加属性</title>
    <link href="https://blog.huvjie.com/2021/04/11/210411N04/"/>
    <id>https://blog.huvjie.com/2021/04/11/210411N04/</id>
    <published>2021-04-11T09:55:55.000Z</published>
    <updated>2021-04-11T10:34:45.105Z</updated>
    
    <content type="html"><![CDATA[<p>附加属性本质也是依赖属性，依赖属性的宿主位置不一样。</p><a id="more"></a><p>XAML：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WpfApp1.MainWindow"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">        xmlns:d=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line">        xmlns:mc=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line">        xmlns:local=<span class="string">"clr-namespace:WpfApp1"</span></span><br><span class="line">        mc:Ignorable=<span class="string">"d"</span> WindowStartupLocation=<span class="string">"CenterScreen"</span></span><br><span class="line">        Title=<span class="string">"MainWindow"</span> Height=<span class="string">"250"</span> Width=<span class="string">"350"</span>&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;Button Content=<span class="string">"Grade"</span> Width=<span class="string">"100"</span> Height=<span class="string">"50"</span> Click=<span class="string">"Button_Click"</span>/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p>C# Behind：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WpfApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Human human = <span class="keyword">new</span> Human();</span><br><span class="line">            School.SetGrade(human, <span class="number">6</span>);</span><br><span class="line">            <span class="keyword">int</span> grade = School.GetGrade(human);</span><br><span class="line">            MessageBox.Show(grade.ToString());</span><br><span class="line"></span><br><span class="line">            Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">            School.SetGrade(stu, <span class="number">6</span>);</span><br><span class="line">            <span class="keyword">int</span> g = School.GetGrade(stu);</span><br><span class="line">            MessageBox.Show(g.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">School</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetGrade</span>(<span class="params">DependencyObject obj</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>)obj.GetValue(GradeProperty);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetGrade</span>(<span class="params">DependencyObject obj, <span class="keyword">int</span> <span class="keyword">value</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            obj.SetValue(GradeProperty, <span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Using a DependencyProperty as the backing store for Grade.  This enables animation, styling, binding, etc...</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> DependencyProperty GradeProperty =</span><br><span class="line">            DependencyProperty.RegisterAttached(<span class="string">"Grade"</span>, <span class="keyword">typeof</span>(<span class="keyword">int</span>), <span class="keyword">typeof</span>(School), <span class="keyword">new</span> PropertyMetadata(<span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Human</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="http://image.huvjie.com/210411N04_img01.jpg" alt="▲ 运行结果, 两个弹窗都显示 6 没有问题"></p><div style="font-size:13px;color:gray;text-align:center">▲ 运行结果, 两个弹窗都显示 6 没有问题</div><p><strong>以上可见，附加属性和依赖属性保存值过程是一样的。只是用来检索值的依赖属性(附加属性)并不是以<code>Human</code>为宿主，而是寄宿在<code>School</code>里面，而这是没有什么关系的。因为，CLR 属性名和宿主类型只是用来生成 hash code 和 GlobalIndex 的，保证键值对唯一。</strong></p><p><strong>另外，既然附加属性和依赖属性本质是一样的，那么附加属性也是可以用来 Binding 的。</strong></p><p>XAML：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WpfApp1.MainWindow"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">        xmlns:d=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line">        xmlns:mc=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line">        xmlns:local=<span class="string">"clr-namespace:WpfApp1"</span></span><br><span class="line">        mc:Ignorable=<span class="string">"d"</span> WindowStartupLocation=<span class="string">"CenterScreen"</span></span><br><span class="line">        Title=<span class="string">"MainWindow"</span> Height=<span class="string">"250"</span> Width=<span class="string">"350"</span>&gt;</span><br><span class="line">    &lt;Canvas&gt;</span><br><span class="line">        &lt;Slider x:Name=<span class="string">"sliderX"</span> Canvas.Top=<span class="string">"10"</span> Canvas.Left=<span class="string">"10"</span> Width=<span class="string">"320"</span> Minimum=<span class="string">"50"</span> Maximum=<span class="string">"260"</span>/&gt;</span><br><span class="line">        &lt;Slider x:Name=<span class="string">"sliderY"</span> Canvas.Top=<span class="string">"50"</span> Canvas.Left=<span class="string">"10"</span> Width=<span class="string">"320"</span> Minimum=<span class="string">"50"</span> Maximum=<span class="string">"260"</span>/&gt;</span><br><span class="line">        &lt;Rectangle x:Name=<span class="string">"rect"</span> Fill=<span class="string">"Blue"</span> Width=<span class="string">"30"</span> Height=<span class="string">"30"</span> Canvas.Left=<span class="string">"&#123;Binding ElementName=sliderX, Path=Value&#125;"</span> </span><br><span class="line">                   Canvas.Top=<span class="string">"&#123;Binding Path=Value, ElementName=sliderY&#125;"</span> /&gt;</span><br><span class="line">    &lt;/Canvas&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p><img src="http://image.huvjie.com/210411N04_img02.jpg" alt="▲ 移动两个滑条，方块会移动位置"></p><div style="font-size:13px;color:gray;text-align:center">▲ 移动两个滑条，方块会移动位置 </div> <p><hr><br><span style="color:gray;font-size:12px"><br>参考： 《WPF 深入浅出》- P150<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;附加属性本质也是依赖属性，依赖属性的宿主位置不一样。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>WPF 依赖属性</title>
    <link href="https://blog.huvjie.com/2021/04/11/210411N03/"/>
    <id>https://blog.huvjie.com/2021/04/11/210411N03/</id>
    <published>2021-04-11T09:01:01.000Z</published>
    <updated>2021-04-11T12:29:13.710Z</updated>
    
    <content type="html"><![CDATA[<p>依赖属性，它是注册到 Hastable 里面去了。<strong>依赖属性默认属性变更通知功能。</strong></p><p><img src="http://image.huvjie.com/210411N03_img01.jpg" alt="▲ 点击按钮 Traget 显示"></p><div style="font-size:13px;color:gray;text-align:center">▲ 点击按钮 Traget 显示</div><a id="more"></a><p>XAML：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WPF_P128.MainWindow"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">        xmlns:d=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line">        xmlns:mc=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line">        xmlns:local=<span class="string">"clr-namespace:WPF_P128"</span></span><br><span class="line">        mc:Ignorable=<span class="string">"d"</span></span><br><span class="line">        Title=<span class="string">"DependencyProperty"</span> Height=<span class="string">"160"</span> Width=<span class="string">"260"</span>&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">"Source:"</span> Margin=<span class="string">"5 5 5 0"</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">"textBox1"</span> BorderBrush=<span class="string">"Black"</span> Margin=<span class="string">"5 0 5 0"</span>/&gt;</span><br><span class="line">            &lt;TextBlock Text=<span class="string">"Target:"</span> Margin=<span class="string">"5 5 5 0"</span>/&gt;</span><br><span class="line">            &lt;TextBox x:Name=<span class="string">"textBox2"</span> BorderBrush=<span class="string">"Black"</span> Margin=<span class="string">"5 0 5 0"</span>/&gt;</span><br><span class="line">            &lt;Button Content=<span class="string">"OK"</span> Margin=<span class="string">"5"</span> Click=<span class="string">"Button_Click"</span>/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p><code>DependencyObject</code> 类内有两个方法：<code>object GetValue(DependencyProperty dp)</code><br> 和 <code>Void SetValue(DependencyProperty dp, object o)</code></p><p>C# Behind：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WPF_P128</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">            stu.SetValue(Student.NameProperty, textBox1.Text);</span><br><span class="line">            textBox2.Text = (<span class="keyword">string</span>)stu.GetValue(Student.NameProperty);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> DependencyProperty NameProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">"Name"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>), <span class="keyword">typeof</span>(Student));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>增加绑定功能：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WPF_P128</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 增加绑定方式</span></span><br><span class="line">            stu = <span class="keyword">new</span> Student();</span><br><span class="line">            Binding binding = <span class="keyword">new</span> Binding(<span class="string">"Text"</span>) &#123; Source = textBox1 &#125;;</span><br><span class="line">            BindingOperations.SetBinding(stu, Student.NameProperty, binding);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Student stu = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 直接赋值，取值</span></span><br><span class="line">            <span class="comment">//Student stu = new Student();</span></span><br><span class="line">            stu.SetValue(Student.NameProperty, textBox1.Text);</span><br><span class="line">            textBox2.Text = (<span class="keyword">string</span>)stu.GetValue(Student.NameProperty);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 弹窗显示绑定属性值</span></span><br><span class="line">            MessageBox.Show(stu.GetValue(Student.NameProperty).ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 依赖属性</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> DependencyProperty NameProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">"Name"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>), <span class="keyword">typeof</span>(Student));</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://image.huvjie.com/210411N03_img02.jpg" alt="▲ 运行效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 运行效果</div><p><strong>再包装一下：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WPF_P128</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 增加绑定方式</span></span><br><span class="line">            stu = <span class="keyword">new</span> Student();</span><br><span class="line">            Binding binding = <span class="keyword">new</span> Binding(<span class="string">"Text"</span>) &#123; Source = textBox1, UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged &#125;;</span><br><span class="line">            <span class="comment">//BindingOperations.SetBinding(stu, Student.NameProperty, binding);</span></span><br><span class="line">            stu.SetBinding(Student.NameProperty, binding);</span><br><span class="line">            textBox2.SetBinding(TextBox.TextProperty, <span class="keyword">new</span> Binding(<span class="keyword">nameof</span>(stu.Name)) &#123; Source = stu &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Student stu = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 直接赋值，取值</span></span><br><span class="line">            <span class="comment">//Student stu = new Student();</span></span><br><span class="line">            <span class="comment">//stu.SetValue(Student.NameProperty, textBox1.Text);</span></span><br><span class="line">            <span class="comment">//textBox2.Text = (string)stu.GetValue(Student.NameProperty);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 弹窗显示绑定属性值</span></span><br><span class="line">            MessageBox.Show(stu.GetValue(Student.NameProperty).ToString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">DependencyObject</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 依赖属性</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> DependencyProperty NameProperty =</span><br><span class="line">            DependencyProperty.Register(<span class="string">"Name"</span>, <span class="keyword">typeof</span>(<span class="keyword">string</span>), <span class="keyword">typeof</span>(Student));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// CLR 属性包装</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> (<span class="keyword">string</span>)GetValue(NameProperty); &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetValue(NameProperty, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// SetBinding 包装</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> BindingExpressionBase <span class="title">SetBinding</span>(<span class="params">DependencyProperty dp, BindingBase binding</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> BindingOperations.SetBinding(<span class="keyword">this</span>, dp, binding);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果：</p><p><img src="http://image.huvjie.com/210411N03_img03.jpg" alt="▲ 运行效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 运行效果</div><p><hr><br><span style="color:gray;font-size:12px"><br>参考： 《WPF 深入浅出》 - P138<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;依赖属性，它是注册到 Hastable 里面去了。&lt;strong&gt;依赖属性默认属性变更通知功能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/210411N03_img01.jpg&quot; alt=&quot;▲ 点击按钮 Traget 显示&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 点击按钮 Traget 显示&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>WPF 附加事件</title>
    <link href="https://blog.huvjie.com/2021/04/11/210411N02/"/>
    <id>https://blog.huvjie.com/2021/04/11/210411N02/</id>
    <published>2021-04-11T06:47:53.000Z</published>
    <updated>2021-04-11T07:20:02.546Z</updated>
    
    <content type="html"><![CDATA[<p>路由事件的宿主是那些有 UI 显示功能的界面元素，而<em>附加事件</em>是那些没有 UI 显示功能的元素，其本质还是路由事件，只是路由事件的宿主不一样。<strong>附加事件只是路由事件的一种用法而已。</strong></p><a id="more"></a><p>XAML：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WpfApp1.MainWindow"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">        xmlns:d=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line">        xmlns:mc=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line">        xmlns:local=<span class="string">"clr-namespace:WpfApp1"</span></span><br><span class="line">        mc:Ignorable=<span class="string">"d"</span></span><br><span class="line">        Title=<span class="string">"MainWindow"</span> Height=<span class="string">"300"</span> Width=<span class="string">"300"</span>&gt;</span><br><span class="line">    &lt;Grid x:Name=<span class="string">"gridMain"</span>&gt;</span><br><span class="line">        &lt;Button x:Name=<span class="string">"button1"</span> Content=<span class="string">"OK"</span> Width=<span class="string">"80"</span> Height=<span class="string">"80"</span> Click=<span class="string">"Button1_Click"</span>/&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p><img src="http://image.huvjie.com/210411N02_img01.jpg" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 只做了一个按钮触发一下</div><p>附加事件宿主，Student 类：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> RoutedEvent NameChangedEvent = EventManager.RegisterRoutedEvent</span><br><span class="line">        (<span class="string">"NameChanged"</span>, RoutingStrategy.Bubble, <span class="keyword">typeof</span>(RoutedEventHandler), <span class="keyword">typeof</span>(Student));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C# behind 代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line"></span><br><span class="line">        gridMain.AddHandler(Student.NameChangedEvent, <span class="keyword">new</span> RoutedEventHandler(StudentNameChangedHandler));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student stu = <span class="keyword">new</span> Student() &#123; Id=<span class="number">10101</span>, Name = <span class="string">"Tim"</span> &#125;;</span><br><span class="line">        stu.Name = <span class="string">"Tom"</span>;</span><br><span class="line">        <span class="comment">// 准备事件消息，并发送路由事件</span></span><br><span class="line">        RoutedEventArgs args = <span class="keyword">new</span> RoutedEventArgs(Student.NameChangedEvent, stu);</span><br><span class="line">        button1.RaiseEvent(args);  <span class="comment">// 借用下 RaiseEvent 函数，借用 gridMain 的也可以</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Grid 捕捉到 NameChangedEvent 后的处理器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StudentNameChangedHandler</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        MessageBox.Show((e.OriginalSource <span class="keyword">as</span> Student).Id.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>理论上，上面已经算一个附加事件了。</p><p><img src="http://image.huvjie.com/210411N02_img02.jpg" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 点击按钮，弹出学号</div><p><strong>因为 <code>Student</code> 不是继承 <code>UIElement</code> 类，所以，没有 <code>AddHandler</code> 和 <code>RemoveHandler</code> 两个方法，也没有哦 <code>RiaseEvent</code> 方法。</strong></p><p>根据微软规定，可以升级一下：</p><p>Student 类：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 声明并定义路由事件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> RoutedEvent NameChangedEvent = EventManager.RegisterRoutedEvent</span><br><span class="line">        (<span class="string">"NameChanged"</span>, RoutingStrategy.Bubble, <span class="keyword">typeof</span>(RoutedEventHandler), <span class="keyword">typeof</span>(Student));</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 为界面元素增加路由事件监听</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="d"&gt;</span>事件的监听者<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="h"&gt;</span>事件处理器委托类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddNameChangedHandler</span>(<span class="params">DependencyObject d, RoutedEventHandler h</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        UIElement uIElement = d <span class="keyword">as</span> UIElement;</span><br><span class="line">        <span class="keyword">if</span> (uIElement != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            uIElement.AddHandler(Student.NameChangedEvent, h);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 移除侦听</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="d"&gt;</span>事件的监听者<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="h"&gt;</span>事件处理器委托类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RemoveNameChangedHandler</span>(<span class="params">DependencyObject d, RoutedEventHandler h</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        UIElement uIElement = d <span class="keyword">as</span> UIElement;</span><br><span class="line">        <span class="keyword">if</span> (uIElement != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            uIElement.RemoveHandler(Student.NameChangedEvent, h);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C# Behind:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这个地方改一下</span></span><br><span class="line">        Student.AddNameChangedHandler(gridMain, <span class="keyword">new</span> RoutedEventHandler(StudentNameChangedHandler));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student stu = <span class="keyword">new</span> Student() &#123; Id = <span class="number">10101</span>, Name = <span class="string">"Tim"</span> &#125;;</span><br><span class="line">        stu.Name = <span class="string">"Tom"</span>;</span><br><span class="line">        <span class="comment">// 准备事件消息，并发送路由事件</span></span><br><span class="line">        RoutedEventArgs args = <span class="keyword">new</span> RoutedEventArgs(Student.NameChangedEvent, stu);</span><br><span class="line">        button1.RaiseEvent(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Grid 捕捉到 NameChangedEvent 后的处理器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StudentNameChangedHandler</span>(<span class="params"><span class="keyword">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        MessageBox.Show((e.OriginalSource <span class="keyword">as</span> Student).Id.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>附加事件，只是路由事件的一种用法，而非一个新概念。</strong></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考： 《WPF 深入浅出》 - P171<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;路由事件的宿主是那些有 UI 显示功能的界面元素，而&lt;em&gt;附加事件&lt;/em&gt;是那些没有 UI 显示功能的元素，其本质还是路由事件，只是路由事件的宿主不一样。&lt;strong&gt;附加事件只是路由事件的一种用法而已。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>WPF 自定义路由事件</title>
    <link href="https://blog.huvjie.com/2021/04/11/210411N01/"/>
    <id>https://blog.huvjie.com/2021/04/11/210411N01/</id>
    <published>2021-04-11T05:24:06.000Z</published>
    <updated>2021-04-11T05:34:26.165Z</updated>
    
    <content type="html"><![CDATA[<p>路由事件和依赖属性一样，都是注册到了 Hastable 里面去了。</p><p>路由事件的好处：不再受直接事件那种，需要一层一层往外传递的麻烦，能直接”飞来飞去”。</p><p><img src="http://image.huvjie.com/210411N01_img01.jpg" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 运行结果</div><a id="more"></a><p>XAML 代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WpfApp1.MainWindow"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">        xmlns:d=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span><br><span class="line">        xmlns:mc=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span><br><span class="line">        xmlns:local=<span class="string">"clr-namespace:WpfApp1"</span></span><br><span class="line">        mc:Ignorable=<span class="string">"d"</span></span><br><span class="line">        x:Name=<span class="string">"window_1"</span></span><br><span class="line">        local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span></span><br><span class="line">        Title=<span class="string">"MainWindow"</span> Height=<span class="string">"350"</span> Width=<span class="string">"420"</span>&gt;</span><br><span class="line">    &lt;Grid x:Name=<span class="string">"grid_1"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>&gt;</span><br><span class="line">        &lt;Grid x:Name=<span class="string">"grid_2"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>&gt;</span><br><span class="line">            &lt;Grid x:Name=<span class="string">"grid_3"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>&gt;</span><br><span class="line">                &lt;StackPanel x:Name=<span class="string">"stackPanel_1"</span> Orientation=<span class="string">"Vertical"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>&gt;</span><br><span class="line">                    &lt;ScrollViewer x:Name=<span class="string">"scrollView_1"</span> VerticalScrollBarVisibility=<span class="string">"Auto"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>&gt;</span><br><span class="line">                        &lt;ListBox x:Name=<span class="string">"listBox"</span> BorderBrush=<span class="string">"Black"</span> BorderThickness=<span class="string">"1"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span> Margin=<span class="string">"5"</span> Height=<span class="string">"240"</span>/&gt;</span><br><span class="line">                    &lt;/ScrollViewer&gt;</span><br><span class="line">                    &lt;local:TimeButton x:Name=<span class="string">"timeButton"</span> Width=<span class="string">"80"</span> Height=<span class="string">"40"</span> Content=<span class="string">"报时"</span> Margin=<span class="string">"10"</span> local:TimeButton.ReportTime=<span class="string">"ReportTimeHandler"</span>/&gt;</span><br><span class="line">                &lt;/StackPanel&gt;</span><br><span class="line">            &lt;/Grid&gt;</span><br><span class="line">        &lt;/Grid&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p>C# Behind 代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WpfApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ReportTimeHandler</span>(<span class="params"><span class="keyword">object</span> sender, ReportTimeEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FrameworkElement element = sender <span class="keyword">as</span> FrameworkElement;</span><br><span class="line">            <span class="keyword">string</span> timeStr = e.ClickTime.ToLongTimeString();</span><br><span class="line">            <span class="keyword">string</span> content = <span class="string">$"<span class="subst">&#123;timeStr&#125;</span> 到达 <span class="subst">&#123;element.Name&#125;</span>"</span>;</span><br><span class="line">            listBox.Items.Add(content);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义路由事件：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WpfApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 用于承载事件消息的时间参数</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ReportTimeEventArgs</span> : <span class="title">RoutedEventArgs</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ReportTimeEventArgs</span>(<span class="params">RoutedEvent routedEvent, <span class="keyword">object</span> source</span>) :</span></span><br><span class="line"><span class="function">            <span class="title">base</span>(<span class="params">routedEvent, source</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> DateTime ClickTime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">TimeButton</span> : <span class="title">Button</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 声明和注册路由事件</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> RoutedEvent ReportTimeEvent = EventManager.RegisterRoutedEvent</span><br><span class="line">            (<span class="string">"ReportTime"</span>, RoutingStrategy.Bubble, <span class="keyword">typeof</span>(EventHandler&lt;ReportTimeEventArgs&gt;), <span class="keyword">typeof</span>(TimeButton));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//CLR 事件包装器</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> RoutedEventHandler ReportTime</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">add</span> &#123; AddHandler(ReportTimeEvent, <span class="keyword">value</span>); &#125;</span><br><span class="line">            <span class="keyword">remove</span> &#123; RemoveHandler(ReportTimeEvent, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 激发路由事件，借用 Click 事件的激发方法</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnClick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnClick(); <span class="comment">//  保证 Button 原有的功能正常使用， CLick 事件能被激发</span></span><br><span class="line"></span><br><span class="line">            ReportTimeEventArgs args = <span class="keyword">new</span> ReportTimeEventArgs(ReportTimeEvent, <span class="keyword">this</span>);</span><br><span class="line">            args.ClickTime = DateTime.Now;</span><br><span class="line">            RaiseEvent(args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考： 《WPF 深入浅出》-P166<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;路由事件和依赖属性一样，都是注册到了 Hastable 里面去了。&lt;/p&gt;
&lt;p&gt;路由事件的好处：不再受直接事件那种，需要一层一层往外传递的麻烦，能直接”飞来飞去”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/210411N01_img01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 运行结果&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>WPF 简单的单个 CLR 对象作为绑定的 Source 源</title>
    <link href="https://blog.huvjie.com/2021/04/10/210410N01/"/>
    <id>https://blog.huvjie.com/2021/04/10/210410N01/</id>
    <published>2021-04-09T16:00:00.000Z</published>
    <updated>2021-04-10T14:25:34.492Z</updated>
    
    <content type="html"><![CDATA[<p>WPF 中如何用最直接的手段将 CLR 对象作为绑定的 Source 源？</p><a id="more"></a><p><img src="http://image.huvjie.com/210410N01_img01.png" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 简单界面</div><p>XAML代码：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window</span><br><span class="line">     &lt;!--省略一些必要的命名空间--&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;StackPanel Orientation=<span class="string">"Vertical"</span>&gt;</span><br><span class="line">        &lt;TextBlock Text=<span class="string">"姓名："</span> Width=<span class="string">"150"</span> FontSize=<span class="string">"15"</span> Margin=<span class="string">"0 10 0 0"</span>/&gt;</span><br><span class="line">        &lt;TextBox x:Name=<span class="string">"txbName"</span>   Height=<span class="string">"50"</span> Width=<span class="string">"150"</span> BorderBrush=<span class="string">"Black"</span> BorderThickness=<span class="string">"1"</span> VerticalContentAlignment=<span class="string">"Center"</span> FontSize=<span class="string">"20"</span> FontWeight=<span class="string">"Bold"</span>/&gt;</span><br><span class="line">        &lt;TextBlock Text=<span class="string">"年龄："</span> Width=<span class="string">"150"</span> FontSize=<span class="string">"15"</span> Margin=<span class="string">"0 10 0 0"</span>/&gt;</span><br><span class="line">        &lt;TextBox x:Name=<span class="string">"txbAge"</span>   Height=<span class="string">"50"</span> Width=<span class="string">"150"</span> BorderBrush=<span class="string">"Black"</span> BorderThickness=<span class="string">"1"</span> VerticalContentAlignment=<span class="string">"Center"</span> FontSize=<span class="string">"20"</span> FontWeight=<span class="string">"Bold"</span>/&gt;</span><br><span class="line">    &lt;/StackPanel&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p>C# 代码：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        InitializeComponent();</span><br><span class="line"></span><br><span class="line">        stu = <span class="keyword">new</span> Student();</span><br><span class="line">        Binding binding = <span class="keyword">new</span> Binding() &#123; Source = stu, Path = <span class="keyword">new</span> PropertyPath(<span class="keyword">nameof</span>(stu.Name)) &#125;;</span><br><span class="line">        txbName.SetBinding(TextBox.TextProperty, binding);</span><br><span class="line">        Binding binding1 = <span class="keyword">new</span> Binding(<span class="keyword">nameof</span>(stu.Age)) &#123; Source = stu &#125;;</span><br><span class="line">        BindingOperations.SetBinding(txbAge, TextBox.TextProperty, binding1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Student stu = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span>:<span class="title">INotifyPropertyChanged</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> _name = <span class="string">"小明"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> _name; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; _name = <span class="keyword">value</span>;  PropertyChanged?.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> PropertyChangedEventArgs(<span class="keyword">nameof</span>(Name))); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _age = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> _age; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; _age = <span class="keyword">value</span>;  PropertyChanged?.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> PropertyChangedEventArgs(<span class="keyword">nameof</span>(Age))); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绑定的效果： </p><p><img src="http://image.huvjie.com/210410N01_img02.png" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 绑定效果</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WPF 中如何用最直接的手段将 CLR 对象作为绑定的 Source 源？&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>目标一定要明确</title>
    <link href="https://blog.huvjie.com/2021/01/17/210117N01/"/>
    <id>https://blog.huvjie.com/2021/01/17/210117N01/</id>
    <published>2021-01-17T14:26:18.000Z</published>
    <updated>2021-04-11T05:38:40.939Z</updated>
    
    <content type="html"><![CDATA[<p>目标一定要明确，并且专注，这样才有可能在某一领域达到较高水准。切勿贪多贪大，这样会导致什么都懂，却什么都很平庸，现在已经过了这个阶段了。集中时间精力，习庖丁解牛之术，达成目标解决问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目标一定要明确，并且专注，这样才有可能在某一领域达到较高水准。切勿贪多贪大，这样会导致什么都懂，却什么都很平庸，现在已经过了这个阶段了。集中时间精力，习庖丁解牛之术，达成目标解决问题。&lt;/p&gt;

      
    
    </summary>
    
      <category term="其他" scheme="https://blog.huvjie.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="随感" scheme="https://blog.huvjie.com/tags/%E9%9A%8F%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>复杂问题要简单化</title>
    <link href="https://blog.huvjie.com/2021/01/06/210106N01/"/>
    <id>https://blog.huvjie.com/2021/01/06/210106N01/</id>
    <published>2021-01-06T14:45:54.000Z</published>
    <updated>2021-01-06T14:51:36.233Z</updated>
    
    <content type="html"><![CDATA[<p>一定要学会把<strong>复杂问题简单化</strong>。</p><a id="more"></a><p>一个复杂的问题，往往是由若干个简单的问题组合起来的，以<strong>庖丁解牛</strong>的方式将复杂问题孤立出若干个简单的问题，然后各个击破。复杂问题就得以解决。</p><p>一个复杂的软件也是由很过个单一的功能的部分组合起来的。对，功能单一的原则。若将多个功能柔和在一起考虑那就将<strong>简单问题复杂化了</strong>。切记不能这样。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一定要学会把&lt;strong&gt;复杂问题简单化&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://blog.huvjie.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://blog.huvjie.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Halcon｜创建图像窗口的几种方式</title>
    <link href="https://blog.huvjie.com/2020/12/04/201204N02/"/>
    <id>https://blog.huvjie.com/2020/12/04/201204N02/</id>
    <published>2020-12-04T12:29:47.000Z</published>
    <updated>2020-12-04T12:56:24.934Z</updated>
    
    <content type="html"><![CDATA[<p>Demo 代码如下：</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image, <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line">*打开图像窗口</span><br><span class="line">dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line"></span><br><span class="line">*打开具有给定最小和最大范围的新图形窗口，以便保留给定图像的纵横比。</span><br><span class="line">*WidthLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">500</span>,<span class="number">800</span>]。</span><br><span class="line">*HeightLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">400</span>,<span class="number">600</span>]。</span><br><span class="line">*如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">*打开具有给定最小和最大范围的新图形窗口，以便保留给定图像大小的宽高比</span><br><span class="line">*WidthLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">500</span>,<span class="number">800</span>]。</span><br><span class="line">*HeightLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">400</span>,<span class="number">600</span>]。</span><br><span class="line">*如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</span><br><span class="line">dev_open_window_fit_size (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure><h1 id="read-image"><a href="#read-image" class="headerlink" title="read_image"></a>read_image</h1><p>这个是最原始的一种方式，看不清楚图像原本的比例关系，有可能拉伸。</p><h1 id="常规的打开窗口"><a href="#常规的打开窗口" class="headerlink" title="常规的打开窗口"></a>常规的打开窗口</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*打开图像窗口</span><br><span class="line">dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">get_image_size (Image, Width, Height)</span><br></pre></td></tr></table></figure><p><code>get_image_size</code>，获取图像的尺寸。</p><h1 id="适应性的打开窗口fit-image"><a href="#适应性的打开窗口fit-image" class="headerlink" title="适应性的打开窗口fit_image"></a>适应性的打开窗口fit_image</h1><ul><li>打开具有给定最小和最大范围的新图形窗口，以便保留给定图像的纵横比。  </li><li><code>WidthLimit</code>设置为-1，则使用以下默认值：[500,800]。  </li><li><code>HeightLimit</code>设置为-1，则使用以下默认值：[400,600]。  </li><li>如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure><h1 id="适应性的打开窗口fit-size"><a href="#适应性的打开窗口fit-size" class="headerlink" title="适应性的打开窗口fit_size"></a>适应性的打开窗口fit_size</h1><ul><li>打开具有给定最小和最大范围的新图形窗口，以便保留给定图像大小的宽高比</li><li><code>WidthLimit</code>设置为-1，则使用以下默认值：[500,800]。</li><li><code>HeightLimit</code>设置为-1，则使用以下默认值：[400,600]。</li><li>如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dev_open_window_fit_size (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Demo 代码如下：&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="CV" scheme="https://blog.huvjie.com/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>winform｜ListView 控件简单使用</title>
    <link href="https://blog.huvjie.com/2020/12/04/201204N01/"/>
    <id>https://blog.huvjie.com/2020/12/04/201204N01/</id>
    <published>2020-12-04T02:22:00.000Z</published>
    <updated>2020-12-05T04:25:25.813Z</updated>
    
    <content type="html"><![CDATA[<p>ListView 控件简单使用。</p><p><img src="http://image.huvjie.com/201204N01_img01.jpg" alt="▲ 简单样式"></p><div style="font-size:13px;color:gray;text-align:center">▲ 简单样式</div><p><code>listView</code>控件名：<code>listView_SerailNum</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.listView_SerailNum.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">ColumnHeader cameraName = <span class="keyword">new</span> ColumnHeader();</span><br><span class="line">cameraName.Text = <span class="string">"相机"</span>;</span><br><span class="line">cameraName.Width = <span class="number">75</span>;</span><br><span class="line">cameraName.TextAlign = HorizontalAlignment.Center;</span><br><span class="line">ColumnHeader cameraSerialNum = <span class="keyword">new</span> ColumnHeader();</span><br><span class="line">cameraSerialNum.Text = <span class="string">"序列号"</span>;</span><br><span class="line">cameraSerialNum.Width = <span class="keyword">this</span>.listView_SerailNum.Width - cameraName.Width - <span class="number">4</span>;</span><br><span class="line">cameraSerialNum.TextAlign = HorizontalAlignment.Center;</span><br><span class="line"></span><br><span class="line">listView_SerailNum.Columns.AddRange(<span class="keyword">new</span> ColumnHeader[] &#123; cameraName, cameraSerialNum &#125;);</span><br><span class="line">listView_SerailNum.View = View.Details;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.MachineHardware != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">ListViewItem lvItem1 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.A.ToString(), <span class="keyword">this</span>.MachineHardware.CameraA.GetSerialNum() &#125;);</span><br><span class="line">ListViewItem lvItem2 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.B.ToString(), <span class="keyword">this</span>.MachineHardware.CameraB.GetSerialNum() &#125;);</span><br><span class="line">ListViewItem lvItem3 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.C.ToString(), <span class="keyword">this</span>.MachineHardware.CameraC.GetSerialNum() &#125;);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem1);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem2);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.textBox1.Text = <span class="keyword">this</span>.MachineHardware.CameraA.GetSerialNum();</span><br><span class="line"><span class="keyword">this</span>.textBox2.Text = <span class="keyword">this</span>.MachineHardware.CameraB.GetSerialNum();</span><br><span class="line"><span class="keyword">this</span>.textBox3.Text = <span class="keyword">this</span>.MachineHardware.CameraC.GetSerialNum();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要获取第二列的值是这样的，下标<code>[1]</code>直接去获取：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> serialNum = <span class="keyword">this</span>.listView_SerailNum.FocusedItem.SubItems[<span class="number">1</span>].Text;</span><br></pre></td></tr></table></figure><p><code>FocusedItem</code>是选中项。 可以对它进行判断，<code>if (this.listView_SerailNum.FocusedItem == null) {}</code>，判断有没有选中的项。</p><p>控制表头显示与否的属性是：<code>HeaderStyle = None; // 不显示表头</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ListView 控件简单使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201204N01_img01.jpg&quot; alt=&quot;▲ 简单样式&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 简单样式&lt;/div&gt;

&lt;p&gt;&lt;code&gt;listView&lt;/code&gt;控件名：&lt;code&gt;listView_SerailNum&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>XElement类的一些属性和方法</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N03/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N03/</id>
    <published>2020-12-03T12:42:32.000Z</published>
    <updated>2021-01-10T10:45:42.520Z</updated>
    
    <content type="html"><![CDATA[<p>测试一下<code>XElement</code>类和<code>XDocument</code>的一些属性和方法。<strong>自己多注意看下重载。</strong></p><p><img src="http://image.huvjie.com/201203N03_img01.jpg" alt="▲ 查询 Xml 的方法"></p><div style="font-size:13px;color:gray;text-align:center">▲ 查询 Xml 的方法</div><p>一个<code>Test.xml</code>文档如下：</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Person&gt;</span><br><span class="line">  &lt;Name&gt;孙悟空&lt;/Name&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">500</span>&lt;/Age&gt;</span><br><span class="line">  &lt;Sex&gt;男&lt;/Sex&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黑&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">9</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黄&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">10</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Good&gt;<span class="number">100</span>&lt;/Good&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小辉&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">15</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">&lt;/Person&gt;</span><br></pre></td></tr></table></figure><h1 id="Root-属性"><a href="#Root-属性" class="headerlink" title="Root 属性"></a>Root 属性</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(rootElem.ToString());</span><br></pre></td></tr></table></figure><p>直接转字符串，是按原样输出。当然，没有前面那个属性了：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以直接按下面加载<code>Root</code>属性：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XElement rootElem = XElement.Load(<span class="string">"Test.xml"</span>);</span><br></pre></td></tr></table></figure><h1 id="Nodes-方法"><a href="#Nodes-方法" class="headerlink" title="Nodes 方法"></a>Nodes 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;<span class="keyword">object</span>&gt; allNodes = rootElem.Nodes();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>返回的是<code>object</code>类型的集合，都是下一级的子节点。</p><h1 id="Elements-方法"><a href="#Elements-方法" class="headerlink" title="Elements 方法"></a>Elements 方法</h1><p>还要重载：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IEnumerable&lt;XElement&gt; <span class="title">Elements</span>(<span class="params">XName name</span>)</span>;</span><br></pre></td></tr></table></figure></p><p>因为和上面是继承关系，所以差不多。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; allNodes = rootElem.Elements();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>返回的是<code>XElement</code>类型的集合，都是下一级的子节点。</p><p>看看重载，加一个<code>XName</code>之<code>Dog</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; allNodes = rootElem.Elements(<span class="string">"Dog"</span>);</span><br><span class="line"><span class="keyword">foreach</span> (XElement item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见，能查询到所有的<code>Dog</code>节点。</p><h1 id="XElement-方法"><a href="#XElement-方法" class="headerlink" title="XElement 方法"></a>XElement 方法</h1><p>这个是返回第一个符号的节点。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElement = rootElem.Element(<span class="string">"Dog"</span>);</span><br><span class="line">Console.WriteLine(xElement.ToString());</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Descendsants-方法"><a href="#Descendsants-方法" class="headerlink" title="Descendsants 方法"></a>Descendsants 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = rootElem.Descendants();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看下效果，全部输出来了。节点，子节点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="DescendantNodes-方法"><a href="#DescendantNodes-方法" class="headerlink" title="DescendantNodes 方法"></a>DescendantNodes 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;<span class="keyword">object</span>&gt; xElements = rootElem.DescendantNodes();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果是这样的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">孙悟空</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">500</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line">男</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小黑</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">9</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小黄</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line">100</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小辉</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">15</span><br></pre></td></tr></table></figure><h1 id="DescendantsAndSelf-方法"><a href="#DescendantsAndSelf-方法" class="headerlink" title="DescendantsAndSelf 方法"></a>DescendantsAndSelf 方法</h1><p>注意看重载，还可以指定节点<code>XName</code>名称。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = rootElem.DescendantsAndSelf();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Ancestors-方法"><a href="#Ancestors-方法" class="headerlink" title="Ancestors 方法"></a>Ancestors 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = xElem.Ancestors();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="AncestorsAndSelf-方法"><a href="#AncestorsAndSelf-方法" class="headerlink" title="AncestorsAndSelf 方法"></a>AncestorsAndSelf 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = xElem.AncestorsAndSelf();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>它包含了自己。</p><h1 id="Parent-属性"><a href="#Parent-属性" class="headerlink" title="Parent 属性"></a>Parent 属性</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">XElement xElemParent = xElem.Parent;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(xElemParent.ToString());</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：《C#图解教程》P383<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试一下&lt;code&gt;XElement&lt;/code&gt;类和&lt;code&gt;XDocument&lt;/code&gt;的一些属性和方法。&lt;strong&gt;自己多注意看下重载。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201203N03_img01.jpg&quot; alt=&quot;▲ 查询 Xml 的方法&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 查询 Xml 的方法&lt;/div&gt;


&lt;p&gt;一个&lt;code&gt;Test.xml&lt;/code&gt;文档如下：&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++｜带参数的构造函数</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N02/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N02/</id>
    <published>2020-12-03T02:22:00.000Z</published>
    <updated>2020-12-03T12:41:09.074Z</updated>
    
    <content type="html"><![CDATA[<p>基础语法而已。</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Demo()</span><br><span class="line">        &#123;</span><br><span class="line">            x = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的默认构造函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Demo(<span class="keyword">int</span> i)</span><br><span class="line">        &#123;</span><br><span class="line">            x = i;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的带一个参数的构造函数!!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ~Demo()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的析构函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">get_x</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">set_x</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            x = i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Rectangle()</span><br><span class="line">        &#123;</span><br><span class="line">            x = <span class="number">1000</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的默认构造函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Rectangle(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k):x(i), width(j), length(k)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的带三个参数的构造函数!"</span> &lt;&lt;   <span class="string">"长方形的面积 b 为："</span> &lt;&lt; length.get_x() * width.get_x() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ~Rectangle()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的默认析构函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> length.get_x() * width.get_x();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        Demo length;</span><br><span class="line">        Demo width;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Rectangle <span class="title">rec</span><span class="params">(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n=========\n"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Rectangle *rec1 = <span class="keyword">new</span> Rectangle(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>);</span><br><span class="line">    <span class="keyword">delete</span> rec1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Demo 的带一个参数的构造函数!!300</span><br><span class="line">Demo 的带一个参数的构造函数!!200</span><br><span class="line">Rectangle 的带三个参数的构造函数!长方形的面积 b 为：60000</span><br><span class="line"></span><br><span class="line">=========</span><br><span class="line"></span><br><span class="line">Demo 的带一个参数的构造函数!!300</span><br><span class="line">Demo 的带一个参数的构造函数!!200</span><br><span class="line">Rectangle 的带三个参数的构造函数!长方形的面积 b 为：60000</span><br><span class="line">Rectangle 的默认析构函数!100</span><br><span class="line">Demo 的析构函数!200</span><br><span class="line">Demo 的析构函数!300</span><br><span class="line">Rectangle 的默认析构函数!100</span><br><span class="line">Demo 的析构函数!200</span><br><span class="line">Demo 的析构函数!300</span><br></pre></td></tr></table></figure><div style="font-size:12px"><br>参考：《范磊：C++》P153<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基础语法而已。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C/C+" scheme="https://blog.huvjie.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜Conditional特性的简单使用</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N01/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N01/</id>
    <published>2020-12-03T02:22:00.000Z</published>
    <updated>2020-12-03T12:40:52.880Z</updated>
    
    <content type="html"><![CDATA[<p>可以用来做条件编译。</p><p>开始定义<code>#define DEBUG</code>，然后在方法前面使用特性<code>[Conditional(&quot;DEBUG&quot;)]</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG   // 这里 <span class="meta-keyword">define</span> 了 DEBUG。</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Myclass</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Conditional(<span class="meta-string">"DEBUG"</span>)</span>] <span class="comment">// 声明特性</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Message</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Function 1."</span>);</span><br><span class="line">        function2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Function 2."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Main function."</span>);</span><br><span class="line">        function1();</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In Main function</span><br><span class="line">In Function 1</span><br><span class="line">In Function 2</span><br></pre></td></tr></table></figure><hr><div style="font-size:12px"><br>参考：<a href="https://www.runoob.com/csharp/csharp-attribute.html" target="_blank" rel="noopener">https://www.runoob.com/csharp/csharp-attribute.html</a><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以用来做条件编译。&lt;/p&gt;
&lt;p&gt;开始定义&lt;code&gt;#define DEBUG&lt;/code&gt;，然后在方法前面使用特性&lt;code&gt;[Conditional(&amp;quot;DEBUG&amp;quot;)]&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Halcon｜基础语法</title>
    <link href="https://blog.huvjie.com/2020/12/02/201202N01/"/>
    <id>https://blog.huvjie.com/2020/12/02/201202N01/</id>
    <published>2020-12-02T13:21:37.000Z</published>
    <updated>2020-12-02T14:00:09.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><p>等　号:        <code>:=</code>  </p><p>不等号:      <code>#</code>  </p><p>注释符:      <code>*</code>  </p><p>字符串赋值:  <code>str:=’halcon’</code>  </p><p>等于比较符:  <code>if(X=10)</code>  </p><p>与:          <code>if(A&gt;1  and A&lt;30)</code>  </p><p>或:             <code>if(A&gt;1  or  A&lt;30)</code>  </p><p>求反:        <code>if(not(A=10))</code>  </p><p>For 循环：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> I := <span class="number">0</span> to NumBalls - <span class="number">1</span> by <span class="number">1</span></span><br><span class="line"></span><br><span class="line">endfor</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">While 循环：</span><br><span class="line"></span><br><span class="line">```C</span><br><span class="line"><span class="keyword">while</span> (x == <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">Endwhile</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">异常获取:</span><br><span class="line"></span><br><span class="line">```C++</span><br><span class="line">Try</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line"></span><br><span class="line">Endtry</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line">Switch多分支:</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="keyword">switch</span> (Index)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">endswitch</span><br></pre></td></tr></table></figure><h1 id="数组的一些操作"><a href="#数组的一些操作" class="headerlink" title="数组的一些操作"></a>数组的一些操作</h1><ul><li>将一个Tuple数组赋值给变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1 := [<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br></pre></td></tr></table></figure><ul><li>给Tuple数组元素赋值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1[<span class="number">1</span>] := <span class="number">2</span></span><br></pre></td></tr></table></figure><p>结果变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]  <span class="comment">// 可见第二个数从 0 变成了 2</span></span><br></pre></td></tr></table></figure><ul><li>批量改变数组元素的值</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1[1,3,5] := 'abc'</span><br></pre></td></tr></table></figure><p>结果变为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 'abc', 3, 'abc', 5, 'abc', 7, 8, 9] // 下标 1， 3， 5 对应的改成了 `abc`</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值, 例如，0到10连续数值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple3 := [<span class="number">0</span>:<span class="number">10</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值,其值为3到20连续数值,步长为2。 // 中间的步长为1就成连续的了。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple4 := [<span class="number">3</span>:<span class="number">2</span>:<span class="number">20</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>]</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值,其值为100到-100连续数值,步长为-10</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple5 := [<span class="number">100</span>:<span class="number">-10</span>:<span class="number">-100</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">100</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">-10</span>, <span class="number">-20</span>, <span class="number">-30</span>, <span class="number">-40</span>, <span class="number">-50</span>, <span class="number">-60</span>, <span class="number">-70</span>, <span class="number">-80</span>, <span class="number">-90</span>, <span class="number">-100</span>]</span><br></pre></td></tr></table></figure><ul><li>对两个Tuple数组进行合并操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TupleInt1 := [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>]</span><br><span class="line">TupleInt2 := [<span class="number">10</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">tuple_union (TupleInt1, TupleInt2, UnionInt)</span><br></pre></td></tr></table></figure><p>变量<code>UnionInt</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><ul><li>对两个Tuple数组进行交集操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TupleInt3 := [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>]</span><br><span class="line">TupleInt4 := [<span class="number">10</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">tuple_intersection (TupleInt3, TupleInt4, IntersectionInt)</span><br></pre></td></tr></table></figure><p>变量<code>IntersectionInt</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><ul><li>对Tuple数组元素进行替换</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OriginalTuple := [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_replace (OriginalTuple, [<span class="number">0</span>,<span class="number">1</span>], [<span class="string">'x'</span>,<span class="string">'y'</span>], Replaced)</span><br></pre></td></tr></table></figure><p>变量<code>Replaced</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'x'</span>, <span class="string">'y'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><ul><li>向Tuple数组插入数值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OriginalTuple := [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_insert (OriginalTuple, <span class="number">3</span>, <span class="string">'x'</span>, InsertSingleValueA)</span><br></pre></td></tr></table></figure><p>变量<code>InsertSingleValueA</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">'x'</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  <span class="comment">// 在索引 3 位置插入了元素 `x`</span></span><br></pre></td></tr></table></figure><h1 id="字符数字格式化"><a href="#字符数字格式化" class="headerlink" title="字符数字格式化"></a>字符数字格式化</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">i1 := 123$'#o'  //8进制，0为前缀</span><br><span class="line">i2 := 123$'#x'  //16进制，0x为前缀，7b为赋值</span><br><span class="line">i3 := 123$'#X'  //16进制，0x为前缀，7B为赋值，7b与7B是一样的</span><br><span class="line">i4 := 123$'#f'  //double型，默认保留小数点后六位.</span><br><span class="line">i5 := 123$'#g'  //使数字始终保持六位，不足补零.</span><br><span class="line">i6 := 123$'#G'  //使数字始终保持六位，不足补零.</span><br><span class="line">i7 := 123$'#e'  //转换成科学计数</span><br><span class="line">i8 := 123$'#E'  //转换成科学计数</span><br><span class="line"></span><br><span class="line">*****************整数*****************</span><br><span class="line">d1 := <span class="number">123</span>$<span class="string">'6'</span>   <span class="comment">//小于六位时，文本右对齐，大于不影响</span></span><br><span class="line">d2 := 123$'-6'  //小于六位时，文本左对齐，大于不影响</span><br><span class="line">d3 := 123$'.6'  //小于六位时，在左边补零，大于不影响</span><br><span class="line">d4 := 12345$'10.5'  //小于10位时，文本右对齐；小于5位则在左边补零，大于不影响</span><br><span class="line"></span><br><span class="line">*****************文本*****************</span><br><span class="line"></span><br><span class="line">s1 := 'Hugo'$'10'      //文本右对齐</span><br><span class="line">s2 := 'Hugo'$'-10'     //文本左对齐</span><br></pre></td></tr></table></figure><p>对应的变量结果：</p><p><img src="http://image.huvjie.com/201202N01_img01.jpg" alt="▲ 变量结果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 变量结果</div><p><hr><br><span style="color:gray;font-size:12px"><br>参考： </span></p><p>互联网。<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础语法&quot;&gt;&lt;a href=&quot;#基础语法&quot; class=&quot;headerlink&quot; title=&quot;基础语法&quot;&gt;&lt;/a&gt;基础语法&lt;/h1&gt;&lt;p&gt;等　号:        &lt;code&gt;:=&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;不等号:      &lt;code&gt;#&lt;/code&gt; 
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="CV" scheme="https://blog.huvjie.com/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>C#｜GDI绘制折线图</title>
    <link href="https://blog.huvjie.com/2020/12/01/201201N01/"/>
    <id>https://blog.huvjie.com/2020/12/01/201201N01/</id>
    <published>2020-12-01T02:22:00.000Z</published>
    <updated>2020-12-02T12:36:20.236Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://image.huvjie.com/201201N01_img01.jpg" alt="▲ 效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 效果</div><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DrawEx</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] month = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"一月"</span>, <span class="string">"二月"</span>, <span class="string">"三月"</span>, <span class="string">"四月"</span>, <span class="string">"五月"</span>, <span class="string">"六月"</span>, <span class="string">"七月"</span>, <span class="string">"八月"</span>, <span class="string">"九月"</span>, <span class="string">"十月"</span>, <span class="string">"十一月"</span>, <span class="string">"十二月"</span> &#125;;</span><br><span class="line">            <span class="keyword">float</span>[] data = <span class="keyword">new</span> <span class="keyword">float</span>[] &#123; <span class="number">20.5F</span>, <span class="number">60</span>, <span class="number">10.8F</span>, <span class="number">15.6F</span>, <span class="number">30</span>, <span class="number">110.9F</span>, <span class="number">96.3F</span>, <span class="number">30.7F</span>, <span class="number">70</span>, <span class="number">50.4F</span>, <span class="number">30.8F</span>, <span class="number">20</span> &#125;;</span><br><span class="line"></span><br><span class="line">            Bitmap bMap = <span class="keyword">new</span> Bitmap(<span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">            Graphics gph = Graphics.FromImage(bMap);</span><br><span class="line">            gph.Clear(Color.Gray);</span><br><span class="line">            PointF cPt = <span class="keyword">new</span> PointF(<span class="number">40</span>, <span class="number">460</span>);</span><br><span class="line">            PointF xAxisEndPoint = <span class="keyword">new</span> PointF(cPt.X + <span class="number">420</span>, cPt.Y);</span><br><span class="line">            PointF yAxisEndPoint = <span class="keyword">new</span> PointF(cPt.X, cPt.Y - <span class="number">420</span>);</span><br><span class="line">            PointF[] xPt = <span class="keyword">new</span> PointF[<span class="number">3</span>] &#123; <span class="keyword">new</span> PointF(xAxisEndPoint.X + <span class="number">15</span>, xAxisEndPoint.Y), <span class="keyword">new</span> PointF(xAxisEndPoint.X, xAxisEndPoint.Y - <span class="number">5</span>), <span class="keyword">new</span> PointF(xAxisEndPoint.X, xAxisEndPoint.Y + <span class="number">5</span>) &#125;;</span><br><span class="line">            PointF[] yPt = <span class="keyword">new</span> PointF[<span class="number">3</span>] &#123; <span class="keyword">new</span> PointF(yAxisEndPoint.X, yAxisEndPoint.Y - <span class="number">15</span>), <span class="keyword">new</span> PointF(yAxisEndPoint.X - <span class="number">3</span>, yAxisEndPoint.Y), <span class="keyword">new</span> PointF(yAxisEndPoint.X + <span class="number">3</span>, yAxisEndPoint.Y) &#125;;</span><br><span class="line"></span><br><span class="line">            gph.DrawString(<span class="string">"绘制折线图练习"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">14</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">150</span>, cPt.Y - <span class="number">450</span>));</span><br><span class="line">            gph.DrawLine(Pens.Black, cPt.X, cPt.Y, cPt.X + <span class="number">420</span>, cPt.Y);</span><br><span class="line">            gph.DrawLine(Pens.Black, cPt, <span class="keyword">new</span> PointF(cPt.X, cPt.Y - <span class="number">420</span>));</span><br><span class="line">            gph.DrawPolygon(Pens.Black, xPt); <span class="comment">// 画轴三角形</span></span><br><span class="line">            gph.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.Black), xPt);</span><br><span class="line">            gph.DrawPolygon(Pens.Black, yPt); <span class="comment">// 画轴三角形</span></span><br><span class="line">            gph.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.Black), yPt);</span><br><span class="line"></span><br><span class="line">            gph.DrawString(<span class="string">"单位(万)"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(yPt[<span class="number">0</span>].X - <span class="number">26</span>, yPt[<span class="number">0</span>].Y - <span class="number">18</span>));</span><br><span class="line">            gph.DrawString(<span class="string">"月份"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(xPt[<span class="number">0</span>].X - <span class="number">26</span>, xPt[<span class="number">0</span>].Y + <span class="number">18</span>));</span><br><span class="line"></span><br><span class="line">            PointF point1;</span><br><span class="line">            PointF point2 = cPt;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= month.Length; i++) &#123;</span><br><span class="line">                <span class="comment">// 画Y轴刻度和标签</span></span><br><span class="line">                gph.DrawLine(Pens.Black, cPt.X, cPt.Y - i * <span class="number">35</span>, cPt.X - <span class="number">5</span>, cPt.Y - i * <span class="number">35</span>);</span><br><span class="line">                gph.DrawString((i * <span class="number">10</span>).ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X - <span class="number">30</span>, cPt.Y - i * <span class="number">35</span> - <span class="number">6</span>));</span><br><span class="line">                <span class="comment">// 画X轴的刻度和标签</span></span><br><span class="line">                gph.DrawLine(Pens.Black, cPt.X + i * <span class="number">32</span>, cPt.Y, cPt.X + i * <span class="number">32</span>, cPt.Y + <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">11</span>)</span><br><span class="line">                    gph.DrawString(month[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">32</span> * i - <span class="number">20</span>, cPt.Y + <span class="number">15</span>));</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    gph.DrawString(month[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">8</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">32</span> * i - <span class="number">12</span>, cPt.Y + <span class="number">15</span>));</span><br><span class="line"></span><br><span class="line">                point1 = <span class="keyword">new</span> PointF(cPt.X + i * <span class="number">32</span>, cPt.Y - data[i - <span class="number">1</span>] * <span class="number">3.5f</span>);</span><br><span class="line">                <span class="comment">// 画折线</span></span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    gph.DrawLine(Pens.Red, point1, point2);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//画没点的数值标签</span></span><br><span class="line">                gph.DrawString(data[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">11</span>), Brushes.Blue, <span class="keyword">new</span> PointF(point1.X + <span class="number">1</span>, point1.Y + <span class="number">3</span>));</span><br><span class="line">                <span class="comment">// 数值原点</span></span><br><span class="line">                gph.FillEllipse(<span class="keyword">new</span> SolidBrush(Color.Black), point1.X, point1.Y, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">                point2 = point1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pictureBox1.Image = bMap;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pictureBox1</code>的<code>Anchor</code>属性设置了：<code>Top，Bottom，Left，Right</code>。整体思路是，先画在一个图片上面，然后再把图片加载到<code>pictureBox1</code>里面去，这样不会动下窗口就消失。</p><p><strong>主要用了<code>Graphics</code>类里面的<code>DrawString</code>，<code>DrawLine</code>，<code>DrawPolygon</code>，<code>FillPolygon</code>等函数。</strong></p><div style="font-size:12px">参考：<br>《C#入门到精通》<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201201N01_img01.jpg&quot; alt=&quot;▲ 效果&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 效果&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜更改序列化节点Name名及XElement返序列化</title>
    <link href="https://blog.huvjie.com/2020/11/28/201128N01/"/>
    <id>https://blog.huvjie.com/2020/11/28/201128N01/</id>
    <published>2020-11-28T03:10:04.000Z</published>
    <updated>2021-01-10T10:52:21.153Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇<a href="https://blog.huvjie.com/2020/11/28/201128N03/">https://blog.huvjie.com/2020/11/28/201128N03/</a>可以在原有的 xml 文档里添加一个序列化对象的元素节点。接的的 Name 名字默认的是对象类型名，如何更改这个名字呢？另外将一个 XElement 节点返序列化成一个对象。</p><ol><li>直接对 XElement 的 Name 属性赋值就能改名。</li><li>将一个 XElement 节点返序列化，和从文档加载区别不大，注意将更改的 Name 属性名改回去，不然加载出错。</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="XmlSerializerHelper"><a href="#XmlSerializerHelper" class="headerlink" title="XmlSerializerHelper"></a>XmlSerializerHelper</h2><p>增加了一个，将 XElement节点返序列化成一个对象。这个<code>XmlSerializerHelper</code>序列化返序列化类应该是比较完整了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XElement <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line"></span><br><span class="line">                XDocument objElem = XDocument.Load(ms);</span><br><span class="line">                XElement rootElem = objElem.Root;</span><br><span class="line">                <span class="comment">// 可以直接加载</span></span><br><span class="line">                <span class="comment">// XElement rootElem = XElement.Load(ms);</span></span><br><span class="line">                <span class="keyword">return</span> rootElem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(<span class="keyword">string</span> xmlFile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(T));</span><br><span class="line">                <span class="keyword">return</span> (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(XElement xElem)</span><br><span class="line">    &#123;</span><br><span class="line">        xElem.Name = <span class="keyword">typeof</span>(T).Name; <span class="comment">// 如果名称不对，出错。防止改了节点名的情况</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = xElem.ToString(); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(T));</span><br><span class="line">                <span class="keyword">return</span> (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返序列化一下</span></span><br><span class="line">        Person dog_dd = xmlSerializerHelper.XmlDeserial&lt;Person&gt;(<span class="string">"Person.xml"</span>);</span><br><span class="line">        Console.WriteLine(dog_dd.Name);</span><br><span class="line">        Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加一个 Dog 类</span></span><br><span class="line">        XElement rootElem = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        rootElem.Add(xmlSerializerHelper.XmlSerial(<span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小辉"</span>, Age = <span class="number">15</span> &#125;));</span><br><span class="line">        rootElem.Save(<span class="string">"Person.xml"</span>);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">/***********下面改下Name属性测试**********/</span></span><br><span class="line"></span><br><span class="line">        XElement rootElement = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        Dog newDog = <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"狗蛋"</span>, Age = <span class="number">100</span> &#125;;</span><br><span class="line">        XElement newDogElem = xmlSerializerHelper.XmlSerial(newDog);</span><br><span class="line">        newDogElem.Name = <span class="string">"GouDan"</span>;  <span class="comment">// 直接改名字</span></span><br><span class="line">        rootElement.Add(newDogElem);</span><br><span class="line"></span><br><span class="line">        XElement gouDan = rootElement.Element(<span class="string">"GouDan"</span>); <span class="comment">// 根目录加载出来</span></span><br><span class="line">        rootElement.Save(<span class="string">"newPerson.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Dog dog = xmlSerializerHelper.XmlDeserial&lt;Dog&gt;(gouDan);</span><br><span class="line">        Console.WriteLine(<span class="string">"Name = &#123;0&#125;\nAge = &#123;1&#125;"</span>, dog.Name, dog.Age);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">孙悟空</span><br><span class="line">Name = 狗蛋</span><br><span class="line">Age = 100</span><br></pre></td></tr></table></figure><p>生成的  XMl  文档：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">GouDan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>狗蛋<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">GouDan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见，上面最后添加的<code>Dog</code>节点改成了<code>GouDan</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇&lt;a href=&quot;https://blog.huvjie.com/2020/11/28/201128N03/&quot;&gt;https://blog.huvjie.com/2020/11/28/201128N03/&lt;/a&gt;可以在原有的 xml 文档里添加一个序列化对象的元素节点。接的的 Name 名字默认的是对象类型名，如何更改这个名字呢？另外将一个 XElement 节点返序列化成一个对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接对 XElement 的 Name 属性赋值就能改名。&lt;/li&gt;
&lt;li&gt;将一个 XElement 节点返序列化，和从文档加载区别不大，注意将更改的 Name 属性名改回去，不然加载出错。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜xml 在原有文档增加一个序列化类</title>
    <link href="https://blog.huvjie.com/2020/11/28/201128N03/"/>
    <id>https://blog.huvjie.com/2020/11/28/201128N03/</id>
    <published>2020-11-27T16:22:24.000Z</published>
    <updated>2020-11-27T16:28:12.371Z</updated>
    
    <content type="html"><![CDATA[<p>在原有的<code>xml</code>基础上添加一个序列化类。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>XmlSerializerHelper</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XElement <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line">                </span><br><span class="line">                XDocument objElem = XDocument.Load(ms);</span><br><span class="line">                XElement rootElem = objElem.Root;</span><br><span class="line">                <span class="comment">// 可以直接加载</span></span><br><span class="line">                <span class="comment">// XElement rootElem = XElement.Load(ms);</span></span><br><span class="line">                <span class="keyword">return</span> rootElem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(T obj, <span class="keyword">string</span> xmlFile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                obj = (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加一个 Dog 类</span></span><br><span class="line">        XElement rootElem = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        rootElem.Add(xmlSerializerHelper.XmlSerial(<span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小辉"</span>, Age = <span class="number">15</span> &#125;));</span><br><span class="line">        rootElem.Save(<span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Person&gt;</span><br><span class="line">  &lt;Name&gt;孙悟空&lt;/Name&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">500</span>&lt;/Age&gt;</span><br><span class="line">  &lt;Sex&gt;男&lt;/Sex&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黑&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">9</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黄&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">10</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Good&gt;<span class="number">100</span>&lt;/Good&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小辉&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">15</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">&lt;/Person&gt;</span><br></pre></td></tr></table></figure><p><strong>看后面添加了一个 Dog 小辉。</strong></p><p>注意两种添加根元素的方式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line"></span><br><span class="line">XDocument objElem = XDocument.Load(ms);</span><br><span class="line">XElement rootElem = objElem.Root;</span><br><span class="line"><span class="comment">// 可以直接加载,找到根元素</span></span><br><span class="line">XElement rootElem = XElement.Load(ms);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在原有的&lt;code&gt;xml&lt;/code&gt;基础上添加一个序列化类。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Xml 简单序列化和返序列化</title>
    <link href="https://blog.huvjie.com/2020/11/27/201127N02/"/>
    <id>https://blog.huvjie.com/2020/11/27/201127N02/</id>
    <published>2020-11-27T02:22:00.000Z</published>
    <updated>2020-11-27T14:24:32.195Z</updated>
    
    <content type="html"><![CDATA[<p><code>结构体</code>和<code>类</code>都能进行 xml 的序列化和反序列化。</p><a id="more"></a><p>必须包含的命名空间：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br></pre></td></tr></table></figure><h1 id="基本的序列化"><a href="#基本的序列化" class="headerlink" title="基本的序列化"></a>基本的序列化</h1><p>这里以<code>结构体</code>类型为例 ：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> Student</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="keyword">string</span> name, <span class="keyword">int</span> age</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Name = name;</span><br><span class="line">        <span class="keyword">this</span>.Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里访问类型必须要<code>public</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">object</span> <span class="title">XmlDeserial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                obj = xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;          </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() &#123; Name = <span class="string">"毛泽东"</span>, Age = <span class="number">18</span> &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出，没什么问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>毛泽东<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="简单反序列化"><a href="#简单反序列化" class="headerlink" title="简单反序列化"></a>简单反序列化</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line"></span><br><span class="line">        Student stu;</span><br><span class="line">        stu = (Student)xmlSerializerHelper.XmlDeserial(<span class="keyword">new</span> Student(), <span class="string">"Student.xml"</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"Name = &#123;0&#125;\nAge = &#123;1&#125;"</span>, stu.Name, stu.Age);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出，没什么问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name = 毛泽东</span><br><span class="line">Age = 18</span><br></pre></td></tr></table></figure><h1 id="测试一下嵌套序列化"><a href="#测试一下嵌套序列化" class="headerlink" title="测试一下嵌套序列化"></a>测试一下嵌套序列化</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> Student</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OtherInfo OtherInfo;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> OtherInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Birth;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Alisa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        OtherInfo otherInfo = <span class="keyword">new</span> OtherInfo() &#123; Birth = <span class="number">1893</span>, Alisa = <span class="string">"毛润之"</span>&#125;;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() &#123; Name = <span class="string">"毛泽东"</span>, Age = <span class="number">18</span>, OtherInfo = otherInfo &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>毛泽东<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">OtherInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Birth</span>&gt;</span>1893<span class="tag">&lt;/<span class="name">Birth</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Alisa</span>&gt;</span>毛润之<span class="tag">&lt;/<span class="name">Alisa</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">OtherInfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="测试下如果引用变量为null的情况"><a href="#测试下如果引用变量为null的情况" class="headerlink" title="测试下如果引用变量为null的情况"></a>测试下如果引用变量为null的情况</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() ;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Student&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">0</span>&lt;/Age&gt;</span><br><span class="line">  &lt;OtherInfo&gt;</span><br><span class="line">    &lt;Birth&gt;<span class="number">0</span>&lt;/Birth&gt;</span><br><span class="line">  &lt;/OtherInfo&gt;</span><br><span class="line">&lt;/Student&gt;</span><br></pre></td></tr></table></figure><p><strong>可见，null值不进行序列化，int类型会默认为0，所以存在。</strong></p><p>把<code>struct</code>改成<code>class</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OtherInfo OtherInfo;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OtherInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Birth;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Alisa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>0<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>class</code>为引用类型，为 <code>null</code> 没输出了。</p><h1 id="数组的序列化"><a href="#数组的序列化" class="headerlink" title="数组的序列化"></a>数组的序列化</h1><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>] <span class="comment">// 不要“再包一层”</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见：</p><ol><li><strong>数组如果不要再包一层，<code>[XmlElement(&quot;Dog&quot;)] // 不要“再包一层”</code>显示的命名个节点。不然输出如下：</strong></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Dog</code> 数组外面包了一层<code>&lt;Dog&gt;</code>。</p><ol start="2"><li><code>private string valuePrivate { get; set; } = &quot;0&quot;;</code>私有成员没有被序列化。</li></ol><hr><div style="font-size:12px">参考：<br><a href="https://www.cnblogs.com/guogangj/p/7489218.html" target="_blank" rel="noopener">https://www.cnblogs.com/guogangj/p/7489218.html</a><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;结构体&lt;/code&gt;和&lt;code&gt;类&lt;/code&gt;都能进行 xml 的序列化和反序列化。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>接下来一段时间内的自我构建的步骤</title>
    <link href="https://blog.huvjie.com/2020/11/27/201127N01/"/>
    <id>https://blog.huvjie.com/2020/11/27/201127N01/</id>
    <published>2020-11-27T02:22:00.000Z</published>
    <updated>2020-11-27T12:41:10.491Z</updated>
    
    <content type="html"><![CDATA[<p>每个人关注的都是自己的利益，切勿把希望寄托于他人身上，万事得靠自己。</p><a id="more"></a><p>现在的人，大家都在说战略，说战术。我也来说下接下来自己的战术层面，如何自我构建到行业内一般水平。</p><p>对现在开发的这个机型：</p><p><strong>一、先用现成的 DLL 自己全部实现一遍软件。</strong></p><p><strong>二、自己用源码实现一遍软件。</strong></p><p><strong>三、整理好自己的类库。</strong></p><p>把这三个步骤搞下来，应该能出师了。构建起了自己的知识体系。<strong>天下无易事，无非熟能生巧罢了。</strong>方向定下来，坚持下去，反复折腾。</p><p>当软件层面达到一般水平后，再提高一把硬件到一般水平。这样应该可以算完全出师了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个人关注的都是自己的利益，切勿把希望寄托于他人身上，万事得靠自己。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://blog.huvjie.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://blog.huvjie.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C#｜匿名类初识</title>
    <link href="https://blog.huvjie.com/2020/11/26/201126N02/"/>
    <id>https://blog.huvjie.com/2020/11/26/201126N02/</id>
    <published>2020-11-26T02:22:00.000Z</published>
    <updated>2020-11-26T12:11:57.745Z</updated>
    
    <content type="html"><![CDATA[<p>之前的这篇<a href="https://blog.huvjie.com/2020/06/01/200601N01/">https://blog.huvjie.com/2020/06/01/200601N01/</a>，是不是也是匿名类？对这个知识点还没有什么认识，初识一下。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Student = <span class="keyword">new</span> &#123; Name = <span class="string">"XiaoFang"</span>, Age = <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">"Name:&#123;0&#125; Age:&#123;1&#125;"</span>, Student.Name, Student.Age);</span><br><span class="line"></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Name:XiaoFang Age:10</span><br></pre></td></tr></table></figure><p>另外，<code>投影初始化语句</code>可以查看《图解教程》P355页。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前的这篇&lt;a href=&quot;https://blog.huvjie.com/2020/06/01/200601N01/&quot;&gt;https://blog.huvjie.com/2020/06/01/200601N01/&lt;/a&gt;，是不是也是匿名类？对这个知识点还没有什么认识，初识一下。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
</feed>
