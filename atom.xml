<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡搅蛮缠</title>
  
  <subtitle>胡文杰的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.andyvj.com/"/>
  <updated>2020-05-13T07:40:23.846Z</updated>
  <id>https://www.andyvj.com/</id>
  
  <author>
    <name>AndyVJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我们终究要走向何方</title>
    <link href="https://www.andyvj.com/2020/05/13/200513N01/"/>
    <id>https://www.andyvj.com/2020/05/13/200513N01/</id>
    <published>2020-05-13T06:53:42.000Z</published>
    <updated>2020-05-13T07:40:23.846Z</updated>
    
    <content type="html"><![CDATA[<p>在这期间，老婆和我都没有工作，都没有收入，焦虑和不安总是萦绕而挥之不去。投出去的简历大都石沉大海，杳无音讯；房租房贷那可是虎视眈眈毫无仁慈可言。人生的每一步，我们终究要走向何方？</p><a id="more"></a><p>三十而立，谈何容易。自己所在的机械行业，像死胡同一样，凝望深渊，让人望而却步。要说发展前途，没有；要说钱，没有。是继续向前，坐而等死；还是破釜沉舟，拼死一搏。我是不是要去改个行？对未来做一个长期的规划。</p><p>也许，我们所有的理想最终还是要归到柴米油盐，终结到生活，这也就是普通人。理想是好，一味地追求，那是对身边人的不负责任。我们不该只为自己活着。</p><p>我去改行做一个互联网的产品经理如何，这条路可行吗，我有机会吗？</p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这期间，老婆和我都没有工作，都没有收入，焦虑和不安总是萦绕而挥之不去。投出去的简历大都石沉大海，杳无音讯；房租房贷那可是虎视眈眈毫无仁慈可言。人生的每一步，我们终究要走向何方？&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>三菱PLC流水灯</title>
    <link href="https://www.andyvj.com/2020/05/01/200501N01/"/>
    <id>https://www.andyvj.com/2020/05/01/200501N01/</id>
    <published>2020-05-01T14:27:25.000Z</published>
    <updated>2020-05-01T14:45:22.831Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://image.huvjie.com/200501N01_img01.gif" alt="流水灯"></p><div style="font-size:13px;color:gray;text-align:center">▲ 流水灯效果</div><a id="more"></a><p>ST 代码：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">M0:=X0 AND (NOT X1) OR M0;(*X0启动，X1关闭,X0和X1互锁*)</span><br><span class="line">RST(X1 AND (NOT X0),M0);</span><br><span class="line">OUT_T(M0 AND (NOT TC0),TC0,<span class="number">10</span>);</span><br><span class="line">OUT_C(TS0,CC10,<span class="number">8</span>);(*计数<span class="number">8</span>次*)</span><br><span class="line">RST(CS10,CN10);(*计时器自我复位*)</span><br><span class="line"><span class="keyword">CASE</span> CN10 OF</span><br><span class="line"><span class="number">0</span>: <span class="keyword">IF</span> M0 <span class="keyword">THEN</span> (*确保上电的时候所有灯是灭的，因为计数器默认状态为<span class="number">0</span>*)</span><br><span class="line">  Y0:=TRUE;</span><br><span class="line">  Y7:=FALSE;</span><br><span class="line">   END_IF;</span><br><span class="line"><span class="number">1</span>: Y1:=TRUE;</span><br><span class="line">   Y0:=FALSE;</span><br><span class="line"><span class="number">2</span>: Y2:=TRUE;</span><br><span class="line">   Y1:=FALSE;</span><br><span class="line">    <span class="number">3</span>: Y3:=TRUE;</span><br><span class="line">       Y2:=FALSE;</span><br><span class="line">    <span class="number">4</span>: Y4:=TRUE;</span><br><span class="line">       Y3:=FALSE;</span><br><span class="line">    <span class="number">5</span>: Y5:=TRUE;</span><br><span class="line">       Y4:=FALSE;</span><br><span class="line">    <span class="number">6</span>: Y6:=TRUE;</span><br><span class="line">       Y5:=FALSE;</span><br><span class="line">    <span class="number">7</span>: Y7:=TRUE;</span><br><span class="line">       Y6:=FALSE;       </span><br><span class="line">END_CASE;</span><br><span class="line"><span class="keyword">IF</span> NOT M0 <span class="keyword">THEN</span></span><br><span class="line">RST(NOT M0,CN10);(*确保每次都是从Y0开始*)</span><br><span class="line">Y0:=FALSE;</span><br><span class="line">Y1:=FALSE;</span><br><span class="line">Y2:=FALSE;  </span><br><span class="line">Y3:=FALSE;</span><br><span class="line">Y4:=FALSE;</span><br><span class="line">Y5:=FALSE;</span><br><span class="line">Y6:=FALSE;  </span><br><span class="line">Y7:=FALSE;</span><br><span class="line">END_IF;</span><br></pre></td></tr></table></figure></p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/200501N01_img01.gif&quot; alt=&quot;流水灯&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 流水灯效果&lt;/div&gt;
    
    </summary>
    
      <category term="电子电气" scheme="https://www.andyvj.com/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E6%B0%94/"/>
    
    
      <category term="三菱PLC" scheme="https://www.andyvj.com/tags/%E4%B8%89%E8%8F%B1PLC/"/>
    
  </entry>
  
  <entry>
    <title>杂记</title>
    <link href="https://www.andyvj.com/2020/04/05/200405N01/"/>
    <id>https://www.andyvj.com/2020/04/05/200405N01/</id>
    <published>2020-04-05T13:21:17.000Z</published>
    <updated>2020-04-05T14:06:43.159Z</updated>
    
    <content type="html"><![CDATA[<p>这几天的都是下雨天，也降了温，清明时节雨纷纷。这段时间也偶尔几次梦见过爷爷奶奶。</p><a id="more"></a><p>创业真的好艰难，一个人的力量确实也太小了，效率也不搞。时刻要告诫自己，慢可以，不要出错，不要返工。</p><p>这段时间要自己做一台雕刻机才好，直接买太贵，也只能这样了。</p><p><img src="http://image.huvjie.com/200405N01_img01.jpg" alt="键合工装"></p><div style="font-size:13px;color:gray;text-align:center">▲ 今天一天就做了一个 JK 的键合工装，加工编程也弄错了，其他也出错了几次，还是需要自己更熟练才可以。</div><p>现在也没有什么时间学软件，学习一下上位机的开发，以后还是智能化信息化的未来吧。这个是必须要学习的，还是要挤出时间才行，这个是重要的事情。</p><p>当务之急的技术提高更在于电气自动化这块，这个是急的事情。<br><img src="http://image.huvjie.com/200405N01_img02.jpg" alt="努力，奋斗"></p><div style="font-size:13px;color:gray;text-align:center">▲ 努力，奋斗。——周星驰</div><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天的都是下雨天，也降了温，清明时节雨纷纷。这段时间也偶尔几次梦见过爷爷奶奶。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>艰难时刻</title>
    <link href="https://www.andyvj.com/2020/03/22/200322N01/"/>
    <id>https://www.andyvj.com/2020/03/22/200322N01/</id>
    <published>2020-03-22T06:31:33.000Z</published>
    <updated>2020-03-22T06:40:05.430Z</updated>
    
    <content type="html"><![CDATA[<p>一定要坚定信念。<br><a id="more"></a></p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一定要坚定信念。&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C# 练习：数字转化</title>
    <link href="https://www.andyvj.com/2020/03/01/200301N04/"/>
    <id>https://www.andyvj.com/2020/03/01/200301N04/</id>
    <published>2020-03-01T14:08:38.000Z</published>
    <updated>2020-03-01T14:18:45.113Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>将普通日期格式：“2011年6月4日” 转换成汉字日期格式：“二零一一年六月四日”。暂时不考虑10日、13日、23日等“带十”的问题。</p></blockquote><a id="more"></a><p>用到<code>switch</code>方法，<code>char[] num = msg.ToCharArray();</code>字符串转字符数组，<code>return new string(num);</code>数组字符转字符串。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">string</span> <span class="title">ConvertNum</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] num = msg.ToCharArray();</span><br><span class="line">    <span class="comment">// ▲ 把字符串转化为 char 数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.Length; i++) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (num[i]) &#123; <span class="comment">// 用 switch</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">                num[i] = <span class="string">'零'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">                num[i] = <span class="string">'一'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">                num[i] = <span class="string">'二'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">                num[i] = <span class="string">'三'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">                num[i] = <span class="string">'四'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">                num[i] = <span class="string">'五'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'6'</span>:</span><br><span class="line">                num[i] = <span class="string">'六'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">                num[i] = <span class="string">'七'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">                num[i] = <span class="string">'八'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">                num[i] = <span class="string">'九'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">string</span>(num);  </span><br><span class="line">    <span class="comment">// ▲ 把字符数组转化为字符串</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?p=3" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;将普通日期格式：“2011年6月4日” 转换成汉字日期格式：“二零一一年六月四日”。暂时不考虑10日、13日、23日等“带十”的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 字符串输入名字并统计练习</title>
    <link href="https://www.andyvj.com/2020/03/01/200301N03/"/>
    <id>https://www.andyvj.com/2020/03/01/200301N03/</id>
    <published>2020-03-01T13:35:25.000Z</published>
    <updated>2020-03-01T13:45:33.015Z</updated>
    
    <content type="html"><![CDATA[<p>用到<code>List&lt;&gt;</code>泛型集合，<code>string.Empty</code>空字符串，<code>ToLower</code>小写转换，<code>Add</code>添加集合元素，<code>IndexOf</code>集合元素中包含元素的索引位置。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="keyword">string</span>&gt; names = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line">List&lt;<span class="keyword">string</span>&gt; wangNames = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line"><span class="keyword">string</span> str = <span class="keyword">string</span>.Empty ;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">"请输入姓名："</span>);</span><br><span class="line">str = Console.ReadLine();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (str.ToLower() != <span class="string">"quit"</span>) &#123;</span><br><span class="line"></span><br><span class="line">    count++;</span><br><span class="line">    names.Add(str);</span><br><span class="line">    Console.WriteLine(<span class="string">"请输入姓名："</span>);</span><br><span class="line">    str = Console.ReadLine();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">"你一共录入了：&#123;0&#125;个学生，姓名分别为:"</span>, count);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> countSpecify = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> names) &#123;</span><br><span class="line">    Console.WriteLine(item);</span><br><span class="line">    <span class="keyword">if</span> (item.IndexOf(<span class="string">'王'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        countSpecify++;</span><br><span class="line">        wangNames.Add(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">"其中姓王的同学有&#123;0&#125;个:"</span>, countSpecify);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> wangNames) &#123;</span><br><span class="line">    Console.WriteLine(item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">请输入姓名：</span><br><span class="line">你好</span><br><span class="line">请输入姓名：</span><br><span class="line">我是</span><br><span class="line">请输入姓名：</span><br><span class="line">周杰伦</span><br><span class="line">请输入姓名：</span><br><span class="line">王五</span><br><span class="line">请输入姓名：</span><br><span class="line">麻子</span><br><span class="line">请输入姓名：</span><br><span class="line">王八蛋</span><br><span class="line">请输入姓名：</span><br><span class="line">quit</span><br><span class="line">你一共录入了：6个学生，姓名分别为:</span><br><span class="line">你好</span><br><span class="line">我是</span><br><span class="line">周杰伦</span><br><span class="line">王五</span><br><span class="line">麻子</span><br><span class="line">王八蛋</span><br><span class="line">其中姓王的同学有2个:</span><br><span class="line">王五</span><br><span class="line">王八蛋</span><br></pre></td></tr></table></figure></p><hr><p><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?p=3" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用到&lt;code&gt;List&amp;lt;&amp;gt;&lt;/code&gt;泛型集合，&lt;code&gt;string.Empty&lt;/code&gt;空字符串，&lt;code&gt;ToLower&lt;/code&gt;小写转换，&lt;code&gt;Add&lt;/code&gt;添加集合元素，&lt;code&gt;IndexOf&lt;/code&gt;集合元素中包含元素的索引位置。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 去掉多余空格</title>
    <link href="https://www.andyvj.com/2020/03/01/200301N02/"/>
    <id>https://www.andyvj.com/2020/03/01/200301N02/</id>
    <published>2020-03-01T03:57:54.000Z</published>
    <updated>2020-03-01T04:15:20.180Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>将字符串”  hello      world,你  好 世界   !    “两端空格去掉，并且将其中的所有其他空格都替换成一个空格，输出结果为：”hello world,你 好 世界 !”。</p></blockquote><p>用<code>Split</code>方法，有很多的重载；然后用<code>Join</code>方法进行连接成新字符串。</p><a id="more"></a><p><code>string msgTrim = msg.Trim();</code>  <span style="color:blue">// 去掉两端的空格，返回副本。</span></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> msg = <span class="string">"  hello      world,你  好 世界   !    "</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span>[] words = msg.Split(<span class="keyword">new</span> <span class="keyword">char</span>[] &#123; <span class="string">' '</span> &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line"></span><br><span class="line">msg = String.Join(<span class="string">" "</span>, words);</span><br><span class="line">Console.WriteLine(<span class="string">"==="</span> + msg + <span class="string">"=="</span>);</span><br><span class="line"></span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">===hello world,你 好 世界 !==</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?t=1092&amp;p=2" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;将字符串”  hello      world,你  好 世界   !    “两端空格去掉，并且将其中的所有其他空格都替换成一个空格，输出结果为：”hello world,你 好 世界 !”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用&lt;code&gt;Split&lt;/code&gt;方法，有很多的重载；然后用&lt;code&gt;Join&lt;/code&gt;方法进行连接成新字符串。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 统计字符出现次数</title>
    <link href="https://www.andyvj.com/2020/03/01/200301N01/"/>
    <id>https://www.andyvj.com/2020/03/01/200301N01/</id>
    <published>2020-03-01T02:25:02.000Z</published>
    <updated>2020-03-01T02:55:00.426Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有如下字符串：【”患者：“大夫，我咳嗽得很重。”     大夫：“你多大年记？”     患者：“七十五岁。”     大夫：“二十岁咳嗽吗”患者：“不咳嗽。”     大夫：“四十岁时咳嗽吗？”     患者：“也不咳嗽。”     大夫：“那现在不咳嗽，还要等到什么时咳嗽？””】。需求：<br>①请统计出该字符中“咳嗽”二字的出现次数，以及每次“咳嗽”出现的索引位置。<br>②扩展（*）：统计出每个字符的出现次数。  </p></blockquote><p>用<code>IndexOf</code>方法， <span style="color:blue">// 搜索如果不存在，返回 -1。注意看提示重载。</span>用它的重载方法(见下面代码)，返回索引位置。</p><p><code>mLastIndexOf</code>  <span style="color:blue">// 最后出现的索引位置。   判断，当 IndexOF 和 LastIndexOf 相等的时候，可以确定这个字符串只出现了一次。</span></p><p>用<code>Dictionary&lt;char， int&gt;</code>统计字符出现次数。</p><h2 id="①"><a href="#①" class="headerlink" title="①"></a>①</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> msg = <span class="string">"患者：“大夫，我咳嗽得很重。”     大夫：“你多大年记？”     患者：“七十五岁。”     大夫：“二十岁咳嗽吗”患者：“不咳嗽。”     大夫：“四十岁时咳嗽吗？”     患者：“也不咳嗽。”     大夫：“那现在不咳嗽，还要等到什么时咳嗽？”"</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ((index = msg.IndexOf(<span class="string">"咳嗽"</span>, index)) != <span class="number">-1</span>) &#123;</span><br><span class="line">    count++;</span><br><span class="line">    Console.WriteLine(<span class="string">"\"咳嗽\"在&#123;0&#125;索引中出现第&#123;1&#125;次。"</span>, index, count);</span><br><span class="line">    index = index + <span class="string">"咳嗽"</span>.Length;</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;咳嗽&quot;在8索引中出现第1次。</span><br><span class="line">&quot;咳嗽&quot;在58索引中出现第2次。</span><br><span class="line">&quot;咳嗽&quot;在67索引中出现第3次。</span><br><span class="line">&quot;咳嗽&quot;在84索引中出现第4次。</span><br><span class="line">&quot;咳嗽&quot;在100索引中出现第5次。</span><br><span class="line">&quot;咳嗽&quot;在117索引中出现第6次。</span><br><span class="line">&quot;咳嗽&quot;在127索引中出现第7次。</span><br></pre></td></tr></table></figure></p><h2 id="②"><a href="#②" class="headerlink" title="②"></a>②</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> msg = <span class="string">"患者：“大夫，我咳嗽得很重。”     大夫：“你多大年记？”     患者：“七十五岁。”     大夫：“二十岁咳嗽吗”患者：“不咳嗽。”     大夫：“四十岁时咳嗽吗？”     患者：“也不咳嗽。”     大夫：“那现在不咳嗽，还要等到什么时咳嗽？”"</span>;</span><br><span class="line"></span><br><span class="line">Dictionary&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; dict = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; msg.Length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!dict.ContainsKey(msg[i])) &#123;</span><br><span class="line">        dict.Add(msg[i], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        dict[msg[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(KeyValuePair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; item <span class="keyword">in</span> dict) &#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"字符\"&#123;0&#125;\"出现了&#123;1&#125;次。"</span>, item.Key, item.Value);</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadKey();</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;患&quot;出现了4次。</span><br><span class="line">字符&quot;者&quot;出现了4次。</span><br><span class="line">字符&quot;：&quot;出现了8次。</span><br><span class="line">字符&quot;“&quot;出现了8次。</span><br><span class="line">字符&quot;大&quot;出现了6次。</span><br><span class="line">字符&quot;夫&quot;出现了5次。</span><br><span class="line">字符&quot;，&quot;出现了2次。</span><br><span class="line">字符&quot;我&quot;出现了1次。</span><br><span class="line">字符&quot;咳&quot;出现了7次。</span><br><span class="line">字符&quot;嗽&quot;出现了7次。</span><br><span class="line">字符&quot;得&quot;出现了1次。</span><br><span class="line">字符&quot;很&quot;出现了1次。</span><br><span class="line">字符&quot;重&quot;出现了1次。</span><br><span class="line">字符&quot;。&quot;出现了4次。</span><br><span class="line">字符&quot;”&quot;出现了8次。</span><br><span class="line">字符&quot; &quot;出现了30次。</span><br><span class="line">字符&quot;你&quot;出现了1次。</span><br><span class="line">字符&quot;多&quot;出现了1次。</span><br><span class="line">字符&quot;年&quot;出现了1次。</span><br><span class="line">字符&quot;记&quot;出现了1次。</span><br><span class="line">字符&quot;？&quot;出现了3次。</span><br><span class="line">字符&quot;七&quot;出现了1次。</span><br><span class="line">字符&quot;十&quot;出现了3次。</span><br><span class="line">字符&quot;五&quot;出现了1次。</span><br><span class="line">字符&quot;岁&quot;出现了3次。</span><br><span class="line">字符&quot;二&quot;出现了1次。</span><br><span class="line">字符&quot;吗&quot;出现了2次。</span><br><span class="line">字符&quot;不&quot;出现了3次。</span><br><span class="line">字符&quot;四&quot;出现了1次。</span><br><span class="line">字符&quot;时&quot;出现了2次。</span><br><span class="line">字符&quot;也&quot;出现了1次。</span><br><span class="line">字符&quot;那&quot;出现了1次。</span><br><span class="line">字符&quot;现&quot;出现了1次。</span><br><span class="line">字符&quot;在&quot;出现了1次。</span><br><span class="line">字符&quot;还&quot;出现了1次。</span><br><span class="line">字符&quot;要&quot;出现了1次。</span><br><span class="line">字符&quot;等&quot;出现了1次。</span><br><span class="line">字符&quot;到&quot;出现了1次。</span><br><span class="line">字符&quot;什&quot;出现了1次。</span><br><span class="line">字符&quot;么&quot;出现了1次。</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?t=1092&amp;p=2" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;有如下字符串：【”患者：“大夫，我咳嗽得很重。”     大夫：“你多大年记？”     患者：“七十五岁。”     大夫：“二十岁咳嗽吗”患者：“不咳嗽。”     大夫：“四十岁时咳嗽吗？”     患者：“也不咳嗽。”     大夫：“那现
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 冒泡排序</title>
    <link href="https://www.andyvj.com/2020/02/29/200229N04/"/>
    <id>https://www.andyvj.com/2020/02/29/200229N04/</id>
    <published>2020-02-29T12:10:54.000Z</published>
    <updated>2020-02-29T12:14:22.140Z</updated>
    
    <content type="html"><![CDATA[<p>冒泡排序。相临的两个比较，大的往后挪。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">90</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span> ,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//Array.Sort(arr);</span></span><br><span class="line">    ArrUp(arr);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> arr) &#123;</span><br><span class="line">        Console.WriteLine(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ArrUp</span>(<span class="params"><span class="keyword">int</span> [] arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.Length<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; arr.Length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i]&gt;arr[j]) &#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[i];</span><br><span class="line">                arr[i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">90</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?p=2" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;冒泡排序。相临的两个比较，大的往后挪。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# Math.Round()四舍五入</title>
    <link href="https://www.andyvj.com/2020/02/29/200229N03/"/>
    <id>https://www.andyvj.com/2020/02/29/200229N03/</id>
    <published>2020-02-29T10:36:05.000Z</published>
    <updated>2020-03-01T02:25:57.742Z</updated>
    
    <content type="html"><![CDATA[<p>用<code>Math</code>类中的<code>Round</code>方法，然后格式化输出<code>{0：F2}</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">90</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">"平均值：&#123;0:F2&#125;"</span>, Average(arr));</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">Average</span>　(<span class="params"><span class="keyword">int</span>[] arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; arr.Length; i++) &#123;</span><br><span class="line">        sum += arr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Math.Round((<span class="keyword">double</span>)sum / arr.Length, <span class="number">2</span>);   <span class="comment">// 四舍五入两位小数,注意看重载说明。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">平均值：13.60</span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?p=2" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用&lt;code&gt;Math&lt;/code&gt;类中的&lt;code&gt;Round&lt;/code&gt;方法，然后格式化输出&lt;code&gt;{0：F2}&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>无中生有</title>
    <link href="https://www.andyvj.com/2020/02/29/200229N02/"/>
    <id>https://www.andyvj.com/2020/02/29/200229N02/</id>
    <published>2020-02-29T02:16:50.000Z</published>
    <updated>2020-02-29T02:45:23.827Z</updated>
    
    <content type="html"><![CDATA[<p>太差火。</p><a id="more"></a><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;太差火。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C# 交换两个变量值</title>
    <link href="https://www.andyvj.com/2020/02/29/200229N01/"/>
    <id>https://www.andyvj.com/2020/02/29/200229N01/</id>
    <published>2020-02-29T01:17:58.000Z</published>
    <updated>2020-02-29T01:50:24.935Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ol><li>声明两个变量：int n1 = 10, n2 = 20;要求将两个变量交换，最后输出n1为20,n2为10。扩展（*）：不使用第三个变量如何交换？</li></ol></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n2 = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line">temp = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = temp;</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 借用中间量</div><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = n1 + n2;</span><br><span class="line">n2 = n1 - n2;</span><br><span class="line">n1 = n1 - n2;</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 不用中间量</div><blockquote><ol start="2"><li>用方法来实现：将上题封装一个方法来做，方法有两个参数分别为num1,num2,将num1与num2交换。提示：方法有两个参数n1,n2,在方法中将n1与n2进行交换，使用ref。（*）</li></ol></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1 = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> n2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">"交换前：n1 = &#123;0&#125;, n2 = &#123;1&#125;"</span>, n1, n2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SwapNum&lt;<span class="keyword">int</span>&gt;(<span class="keyword">ref</span> n1, <span class="keyword">ref</span> n2);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">"交换前：n1 = &#123;0&#125;, n2 = &#123;1&#125;"</span>, n1, n2);</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> SwapNum&lt;T&gt; (<span class="keyword">ref</span> T a, <span class="keyword">ref</span> T b)</span><br><span class="line">&#123;</span><br><span class="line">    T temp;</span><br><span class="line">    </span><br><span class="line">    temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">交换前：n1 = 10, n2 = 20</span><br><span class="line">交换前：n1 = 20, n2 = 10</span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10357226?t=888" target="_blank" rel="noopener">link-01</a><br></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;声明两个变量：int n1 = 10, n2 = 20;要求将两个变量交换，最后输出n1为20,n2为10。扩展（*）：不使用第三个变量如何交换？&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;high
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>英语：play</title>
    <link href="https://www.andyvj.com/2019/08/09/190809N/"/>
    <id>https://www.andyvj.com/2019/08/09/190809N/</id>
    <published>2019-08-09T12:59:47.000Z</published>
    <updated>2019-08-09T13:17:26.242Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://image.huvjie.com/190809N_img01.mp3" target="_blank" rel="noopener">音频</a></p><a id="more"></a><embed height="50" width="100%" autostart="false" autoplay="false" loop="false" src="http://image.huvjie.com/190809N_img01.mp3"><p><code>play</code>一般用在——游戏、乐器、运动、小孩的玩耍；其他情况一般很少用<code>play</code>。</p><ul><li>I like to use Douyin. 我喜欢玩抖音。// 不能用 play</li><li>I like to go on Douyin.</li><li>I want to play with you. // 男女朋友之间比较暧昧的一种说法：我想跟你玩。</li><li>I want to hang out with you. 我想跟你一起玩。// 一般性的说法。</li><li>I want to go abroad on a vacation. 我想出国玩。</li></ul><p><hr><br><span style="color:gray;font-size:12px"><br>参考：  抖音 -&gt; @英国小克里<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://image.huvjie.com/190809N_img01.mp3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;音频&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="基础学科" scheme="https://www.andyvj.com/categories/%E5%9F%BA%E7%A1%80%E5%AD%A6%E7%A7%91/"/>
    
    
      <category term="英语" scheme="https://www.andyvj.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net基础加强十三天-XML介绍</title>
    <link href="https://www.andyvj.com/2019/07/29/190729N01/"/>
    <id>https://www.andyvj.com/2019/07/29/190729N01/</id>
    <published>2019-07-29T12:21:16.000Z</published>
    <updated>2020-02-29T10:55:45.557Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XML（可扩展标记语言）"><a href="#XML（可扩展标记语言）" class="headerlink" title="XML（可扩展标记语言）"></a>XML（可扩展标记语言）</h2><ul><li>XML:eXtensible Markup Language</li><li>什么是标记语言？什么是标记？<ul><li>标记（markup）：文档中任何不想被打印输出的部分（不是真正的文档的内容，联想读书时做的“读书笔记”，在旁边写的注解等。）注解是注解，实际内容是实际内容。</li><li>标记的作用：传递了关于文档本身以外的额外信息。比如：标记文档的某部分该如何显示，某部分是什么意思等。重在数据，标记只是为了说明数据的含义而已。</li></ul></li><li>常见的标记语言：SGML、HTML、XML</li><li>HTML与XML的区别与联系？</li><li>Xml作用与应用场合：xml数据存储，html数据展示。</li><li>语法、是否有预定义标签、各自的作用与意义</li><li><strong>相关术语：标签、节点、根节点、元素、子元素、后代元素、属性、嵌套、命名空间、字符数据（CDATA）</strong></li></ul><h2 id="XML-基础（extensible-markup-language）"><a href="#XML-基础（extensible-markup-language）" class="headerlink" title="XML 基础（extensible markup language）"></a>XML 基础（extensible markup language）</h2><ul><li>仕么是XML，学它有什么用。优点：容易读懂：格式标准任何语言都内置了XML分析引繁，不用单独进行文件分析引擎的编写。</li><li>Xml就是用一种格式化的方式来存储数据，并且是文本文件任何时候我们都能很容易的用记事本打开。与Excel、Word不一样。</li><li>举例：分析出一个xml格式的文件、分析出一个Excel文件。net程序中的一些配置文件app.config、web.config文件都是xm文件。</li><li>Ofice2007的文件格式docx、xlsx、pptx都是xml.先改成rar文件然后解压。</li><li>XML语法规范：标签（Tag）、嵌套（Nest）、属性。标签要闭合，属性值要用<code>&quot;&quot;</code>包围，标签可以互相嵌套</li><li>XML树，父节点、子节点、兄弟节点（siblings）</li><li>XML和HTML的区别：<ol><li>有且只能有一个根元素。</li><li>XML中元素必须关闭；</li><li>XML中元素的属性值必须用引号;</li><li>XML大小写敏感（CaseSenstive）</li></ol></li><li>符合XML规范的HTML叫做“符合XHTML标准”。开发的网站必须通过W3C验证。</li><li>xml编写完成以后可以用浏览器来查着，如果写错了浏览器会提示。如果明明没措，浏览器还是提示错娱，则可能是文件编码问题。</li></ul><h2 id="Linq-To-XML：写"><a href="#Linq-To-XML：写" class="headerlink" title="Linq To XML：写"></a>Linq To XML：写</h2><ul><li>读写XML有很多技术:<ol><li><code>Dom [XmlDocument、XDocument]</code>（文档对象模型，将整个<code>xml</code>加载到内存中，然后操作）;</li><li><code>Sax</code>（事件驱动，<code>.net</code>中使用<code>XmlReader（XmlTextReader）</code>、<code>XmlWriter（XmlTextWriter）</code><br>来替代）等，还有高级的读写技术;</li><li><code>XmlSerializer</code>（<code>xml</code>序列化，需要先定义类）;</li><li><code>Linq To XML（SystemXml.Linq）</code>，用到的就是<code>Xdocument</code>，<code>Xelement</code>等等，<code>XmlSerializer</code>要求对每种不同的文件都定义一套类，很麻烦，而<code>Linq To XML</code>则不需要单独创建类，当然更底层一些，代码比<code>XmlSerializer</code>多，灵活性更高。<code>SystemXml</code>下的类是2.0及之前操作<code>xml</code>推荐的，现在很多入也仍然在用这个<code>namespace</code>下的类，这个<code>namespace</code>下的类和<code>Linq To XML</code>非常相似，因此不用单独学核心类<code>XElement</code>，一个<code>XElement</code>表示一个元素，<code>new XEiement（&quot;order&quot;）</code>，创建一个名学为<code>Order</code>的标签，调用<code>Add</code>增加子元素，也是<code>XElement</code>对象，和<code>TreeView</code>一样。</li></ol></li><li>想得到字符串怎么办？<code>ToString</code></li><li>调用<code>XElement</code>的<code>Save</code>方法将<code>xml</code>内容保存在<code>Writer</code>中</li><li>创建xml的时候可以用<code>XDocument</code>也可以不用。（直接用<code>XElement</code>）</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><img src="http://image.huvjie.com/190729N01_img01.jpg" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 界面</div><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">XML_Bzhan</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 通过编程的方式实现XML写入</span></span><br><span class="line">            <span class="comment">// 1. 在内存中构建一个 Dom 对象</span></span><br><span class="line">            XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            <span class="comment">// 增加一个文档说明</span></span><br><span class="line">            XmlDeclaration xmlDeclaration =  xmlDoc.CreateXmlDeclaration(<span class="string">"1.0"</span>, <span class="string">"utf-8"</span>, <span class="string">"yes"</span>);</span><br><span class="line">            xmlDoc.AppendChild(xmlDeclaration);</span><br><span class="line">            <span class="comment">// 为文档增加一个根元素</span></span><br><span class="line">            <span class="comment">// 2.1 创建一个根元素</span></span><br><span class="line">            XmlElement rootElement = xmlDoc.CreateElement(<span class="string">"school"</span>);</span><br><span class="line">            xmlDoc.AppendChild(rootElement);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 为根元素增加子元素，接下来增加元素都要将子元素增加到rootElement元素下</span></span><br><span class="line">            XmlElement xmlClassElement = xmlDoc.CreateElement(<span class="string">"class"</span>);</span><br><span class="line">            <span class="comment">// 为class增加一个id属性</span></span><br><span class="line">            XmlAttribute attr = xmlDoc.CreateAttribute(<span class="string">"id"</span>);</span><br><span class="line">            attr.Value = <span class="string">"c01"</span>;</span><br><span class="line">            xmlClassElement.Attributes.Append(attr);</span><br><span class="line">            rootElement.AppendChild(xmlClassElement);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//4.为class元素下创建一个student节点</span></span><br><span class="line">            XmlElement xmlStudentElement = xmlDoc.CreateElement(<span class="string">"student"</span>);</span><br><span class="line">            XmlAttribute attrSid = xmlDoc.CreateAttribute(<span class="string">"sid"</span>);</span><br><span class="line">            attrSid.Value = <span class="string">"s011"</span>;</span><br><span class="line">            xmlStudentElement.Attributes.Append(attrSid);</span><br><span class="line">            xmlClassElement.AppendChild(xmlStudentElement);</span><br><span class="line"></span><br><span class="line">            XmlElement xmlNameElement = xmlDoc.CreateElement(<span class="string">"name"</span>);</span><br><span class="line">            xmlNameElement.InnerText = <span class="string">"黄林"</span>;</span><br><span class="line">            <span class="comment">//5.向student节点下增加一个name节点和一个age节点</span></span><br><span class="line">            xmlStudentElement.AppendChild(xmlNameElement);</span><br><span class="line"></span><br><span class="line">            XmlElement xmlAgeElement = xmlDoc.CreateElement(<span class="string">"Age"</span>);</span><br><span class="line">            xmlAgeElement.InnerText = <span class="string">"18"</span>;</span><br><span class="line">            xmlStudentElement.AppendChild(xmlAgeElement);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2. 将 Dom 对象写入到 xml 文件中</span></span><br><span class="line">            xmlDoc.Save(<span class="string">"school.xml"</span>);</span><br><span class="line">            MessageBox.Show(<span class="string">"OK"</span>);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写入的 <code>school.xml</code> 文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" standalone="yes"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">school</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">class</span> <span class="attr">id</span>=<span class="string">"c01"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">student</span> <span class="attr">sid</span>=<span class="string">"s011"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>黄林<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="用-List-集合之循环添加"><a href="#用-List-集合之循环添加" class="headerlink" title="用 List 集合之循环添加"></a>用 List 集合之循环添加</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">XML_Bzhan</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span>  List 集合循环写入 xml</span></span><br><span class="line">            List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"黄玲"</span>, Age = <span class="number">19</span>, Email = <span class="string">"hl@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"徐正龙"</span>, Age = <span class="number">29</span>, Email = <span class="string">"xzl@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"何宏伟"</span>, Age = <span class="number">39</span>, Email = <span class="string">"hhw@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"杨锁"</span>, Age = <span class="number">19</span>, Email = <span class="string">"yangsuo@yahoo.com"</span>&#125;,</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 1. 创建一个 Dom 对象</span></span><br><span class="line">            XmlDocument xDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            <span class="comment">// 2. 编写文档定义</span></span><br><span class="line">            XmlDeclaration xmlDoc = xDoc.CreateXmlDeclaration(<span class="string">"1.0"</span>, <span class="string">"utf-8"</span>, <span class="string">"yes"</span>);</span><br><span class="line">            xDoc.AppendChild(xmlDoc);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3. 编写一个根节点</span></span><br><span class="line">            XmlElement xmlRoot = xDoc.CreateElement(<span class="string">"List"</span>);</span><br><span class="line">            xDoc.AppendChild(xmlRoot);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4. 循环创建 Person 节点</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++) &#123;</span><br><span class="line">                <span class="comment">// 4.1 创建一个 Person 元素</span></span><br><span class="line">                XmlElement xmlPerson = xDoc.CreateElement(<span class="string">"Person"</span>);</span><br><span class="line">                XmlAttribute xmlAttrId = xDoc.CreateAttribute(<span class="string">"id"</span>);</span><br><span class="line">                xmlAttrId.Value = (i + <span class="number">1</span>).ToString();</span><br><span class="line">                <span class="comment">// 将属性添加到 Person 节点中</span></span><br><span class="line">                xmlPerson.Attributes.Append(xmlAttrId);</span><br><span class="line">                <span class="comment">// 创建 Name</span></span><br><span class="line">                XmlElement xmlName = xDoc.CreateElement(<span class="string">"Name"</span>);</span><br><span class="line">                xmlName.InnerText = list[i].Name;</span><br><span class="line">                xmlPerson.AppendChild(xmlName);</span><br><span class="line">                <span class="comment">// 创建 Age</span></span><br><span class="line">                XmlElement xmlAge = xDoc.CreateElement(<span class="string">"Age"</span>);</span><br><span class="line">                xmlAge.InnerText = list[i].Age.ToString();</span><br><span class="line">                xmlPerson.AppendChild(xmlAge);</span><br><span class="line">                <span class="comment">// 创建 Email</span></span><br><span class="line">                XmlElement xmlEmail = xDoc.CreateElement(<span class="string">"Email"</span>);</span><br><span class="line">                xmlEmail.InnerText = list[i].Email;</span><br><span class="line">                xmlPerson.AppendChild(xmlEmail);</span><br><span class="line">                <span class="comment">// 最后把 Person 加到跟节点之下</span></span><br><span class="line">                xmlRoot.AppendChild(xmlPerson);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 将 Dom 对象写入到 xml 文件中</span></span><br><span class="line">                xDoc.Save(<span class="string">"list.xml"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">                MessageBox.Show(<span class="string">"OK"</span>);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Email &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写入的 <code>List.xml</code>文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" standalone="yes"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">List</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>黄玲<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>hl@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>徐正龙<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>29<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>xzl@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>何宏伟<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>39<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>hhw@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>杨锁<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>yangsuo@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">List</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><span style="color:red">以上的方式是以编程的方式来实现的，写起来比较麻烦。</span></strong></p><h2 id="通过xmlDocument方式写入xml文件-推荐"><a href="#通过xmlDocument方式写入xml文件-推荐" class="headerlink" title="通过xmlDocument方式写入xml文件(推荐)"></a>通过xmlDocument方式写入xml文件(推荐)</h2><p>需添加 <code>using System.Xml.Linq;</code> 命名空间。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">XML_Bzhan</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span>  通过 XDocument 方式写入 xml 文件</span></span><br><span class="line">            List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"黄玲"</span>, Age = <span class="number">19</span>, Email = <span class="string">"hl@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"徐正龙"</span>, Age = <span class="number">29</span>, Email = <span class="string">"xzl@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"何宏伟"</span>, Age = <span class="number">39</span>, Email = <span class="string">"hhw@yahoo.com"</span>&#125;,</span><br><span class="line">                <span class="keyword">new</span> Person() &#123;Name = <span class="string">"杨锁"</span>, Age = <span class="number">19</span>, Email = <span class="string">"yangsuo@yahoo.com"</span>&#125;,</span><br><span class="line"></span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 1.创建一个 Dom 对象</span></span><br><span class="line">            XDocument xDoc = <span class="keyword">new</span> XDocument();<span class="comment">// 在 using System.Xml.Linq; 命名空间下。</span></span><br><span class="line">            XDeclaration xDec = <span class="keyword">new</span> XDeclaration(<span class="string">"1.0"</span>, <span class="string">"utf-8"</span>, <span class="string">"no"</span>);</span><br><span class="line">            <span class="comment">//xDoc.Add(xDec);  // 这样写不对，会出错误。</span></span><br><span class="line">            xDoc.Declaration = xDec; <span class="comment">// 设置 xml 文档的定义</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2.创建根节点</span></span><br><span class="line">            XElement rootElement = <span class="keyword">new</span> XElement(<span class="string">"List"</span>);</span><br><span class="line">            xDoc.Add(rootElement);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 3. 循环 List 集合创建 Person 节点</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++) &#123;</span><br><span class="line">                <span class="comment">// 为每个 Person 对想创建一个 Person 元素</span></span><br><span class="line">                XElement xElementPerson = <span class="keyword">new</span> XElement(<span class="string">"Person"</span>);</span><br><span class="line">                xElementPerson.SetAttributeValue(<span class="string">"id"</span>, (i + <span class="number">1</span>).ToString());</span><br><span class="line"></span><br><span class="line">                xElementPerson.SetElementValue(<span class="string">"Name"</span>, list[i].Name);</span><br><span class="line">                xElementPerson.SetElementValue(<span class="string">"Age"</span>, list[i].Age);</span><br><span class="line">                xElementPerson.SetElementValue(<span class="string">"Email"</span>, list[i].Email);</span><br><span class="line"></span><br><span class="line">                rootElement.Add(xElementPerson);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 4. 保存到文件</span></span><br><span class="line">            xDoc.Save(<span class="string">"listNew.xml"</span>);</span><br><span class="line">            MessageBox.Show(<span class="string">"OK"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Email &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的<code>listNew.xml</code>文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" standalone="no"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">List</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>黄玲<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>hl@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>徐正龙<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>29<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>xzl@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>何宏伟<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>39<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>hhw@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Person</span> <span class="attr">id</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>杨锁<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>19<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Email</span>&gt;</span>yangsuo@yahoo.com<span class="tag">&lt;/<span class="name">Email</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">List</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见，是一样的。</p><h2 id="xml-写入总结"><a href="#xml-写入总结" class="headerlink" title="xml 写入总结"></a><a href="https://www.bilibili.com/video/av24227087/?p=4" target="_blank" rel="noopener">xml 写入总结</a></h2><h3 id="写入Xm1的两种方式："><a href="#写入Xm1的两种方式：" class="headerlink" title="写入Xm1的两种方式："></a>写入Xm1的两种方式：</h3><ol><li><p>XmlDocument类，标准的Dom方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kmlDocument document = new XmlDocument();</span><br><span class="line">document.CreateElement();</span><br><span class="line">xxxxxxxx.CreateAttribute();</span><br></pre></td></tr></table></figure></li><li><p>XDocument类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XElement x = new xxx();</span><br><span class="line">...Add ();</span><br></pre></td></tr></table></figure></li></ol><h3 id="读取Xml"><a href="#读取Xml" class="headerlink" title="读取Xml"></a>读取Xml</h3><ol><li>遍历所有节点元素，分别读取</li><li>根据节点名称，或者是id等等一些元素，快速获取某个节点。|</li></ol><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av24227087/?p=3" target="_blank" rel="noopener">link-01</a>  // 通过XmlDocument与XDocument方式写入Xml<br></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;XML（可扩展标记语言）&quot;&gt;&lt;a href=&quot;#XML（可扩展标记语言）&quot; class=&quot;headerlink&quot; title=&quot;XML（可扩展标记语言）&quot;&gt;&lt;/a&gt;XML（可扩展标记语言）&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;XML:eXtensible Markup La
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 泛型委托</title>
    <link href="https://www.andyvj.com/2019/07/28/190728N02/"/>
    <id>https://www.andyvj.com/2019/07/28/190728N02/</id>
    <published>2019-07-28T13:58:41.000Z</published>
    <updated>2019-07-29T15:22:25.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义泛型委托"><a href="#自定义泛型委托" class="headerlink" title="自定义泛型委托"></a>自定义泛型委托</h2><p>自定义泛型委托：<br><a id="more"></a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace 泛型委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> MD&lt;T&gt;(T args); <span class="comment">//  自定义泛型委托</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MD&lt;<span class="keyword">string</span>&gt; mD = M2;</span><br><span class="line">            <span class="comment">// MD&lt;string&gt; mD = new MD&lt;string&gt;(M2); // 这种方式也可以。</span></span><br><span class="line">            mD(<span class="string">"我是自定义泛型委托。。。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">M2</span>(<span class="params"><span class="keyword">string</span> args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我是自定义泛型委托。。。</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><p><strong>自己写程序的时候没有必要自己定义委托，因为 .Net 里面就已经有了。</strong></p><h2 id="Action-lt-gt"><a href="#Action-lt-gt" class="headerlink" title="Action&lt;&gt;"></a>Action&lt;&gt;</h2><p><code>Action&lt;T&gt;</code> 的泛型有 16 个重载：</p><p><img src="http://image.huvjie.com/190728N02_img01.jpg" alt=""></p><p><code>Action委托</code>，的非泛型版本，就是一个<strong>无参数</strong>，<strong>无返回值的</strong>委托。</p><p><code>Action的泛型版本</code>，就是一个<strong>无返回值</strong>，但是<strong>参数可以变化</strong>的委托。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">namespace 泛型委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Action&lt;<span class="keyword">string</span>&gt; a1 = (str) =&gt; &#123; Console.WriteLine(str); &#125;;</span><br><span class="line">            a1(<span class="string">"我是 Action 泛型委托 a1。。。"</span>);</span><br><span class="line"></span><br><span class="line">            Action&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; a2 = (a, b) =&gt; &#123; Console.WriteLine(<span class="string">$"a + b = <span class="subst">&#123;a + b&#125;</span>"</span>); &#125;;</span><br><span class="line">            a2(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我是 Action 泛型委托 a1。。。</span><br><span class="line">a + b = 3</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><h2 id="Func-lt-gt"><a href="#Func-lt-gt" class="headerlink" title="Func&lt;&gt;"></a>Func&lt;&gt;</h2><p><code>Func&lt;&gt;</code>有没有参数不一定，一定是有返回值的。</p><p><code>Func委托</code>只有一个泛型版本的，没有非泛型版本的。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace 泛型委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 泛型的最后一个参数类型是返回值类型</span></span><br><span class="line">            Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>&gt; f1 = ( a,  b,  c) =&gt; &#123;</span><br><span class="line">                <span class="keyword">double</span> fTemp = Convert.ToDouble(a + b + c);</span><br><span class="line">                <span class="keyword">return</span> fTemp;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">double</span> result = f1(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">            Console.WriteLine(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><h2 id="Predicate-lt-gt"><a href="#Predicate-lt-gt" class="headerlink" title="Predicate&lt;&gt;"></a><code>Predicate&lt;&gt;</code></h2><p><code>bool</code> 类型的委托。</p><p><code>Predicate&lt;T&gt;</code>委托定义如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate bool Predicate&lt;T&gt;（T obj）</span><br></pre></td></tr></table></figure><p>解释：此委托返回一个<code>bool</code>值的方法  </p><p>在实际开发中，<code>Predicate&lt;T&gt;</code>委托变量引用一个<strong>判断条件函数</strong>，在判断条件函数内部书写代码表明函数参数所引用的对象应该满足的条件，条件满足时返回<code>true</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace 泛型委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> StudentId &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span>  <span class="keyword">string</span> StudentName &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;Student&gt; stuList = <span class="keyword">new</span> List&lt;Student&gt;() &#123;</span><br><span class="line">                <span class="keyword">new</span> Student()&#123; StudentId = <span class="number">1001</span>, StudentName = <span class="string">"小张"</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Student()&#123; StudentId = <span class="number">1008</span>, StudentName = <span class="string">"小李"</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Student()&#123; StudentId = <span class="number">1009</span>, StudentName = <span class="string">"小王"</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Student()&#123; StudentId = <span class="number">1003</span>, StudentName = <span class="string">"小赵"</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> Student()&#123; StudentId = <span class="number">1005</span>, StudentName = <span class="string">"小刘"</span> &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// List&lt;T&gt; 集合中定义了一个 FindAll 方法:public T FindAll(Predicate&lt;T&gt; match)</span></span><br><span class="line">            List&lt;Student&gt; list = stuList.FindAll(s =&gt; s.StudentId &gt; <span class="number">1003</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (Student item <span class="keyword">in</span> list) &#123;</span><br><span class="line">                Console.WriteLine(item.StudentId  + item.StudentName);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1008小李</span><br><span class="line">1009小王</span><br><span class="line">1005小刘</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av24227074/?p=3" target="_blank" rel="noopener">link-01</a>  // 泛型委托 -&gt; 赵晓虎<br>2.<a href="https://www.bilibili.com/video/av44355940/?p=8" target="_blank" rel="noopener">link-02</a>  // P8第20节-6.Predicate委托<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自定义泛型委托&quot;&gt;&lt;a href=&quot;#自定义泛型委托&quot; class=&quot;headerlink&quot; title=&quot;自定义泛型委托&quot;&gt;&lt;/a&gt;自定义泛型委托&lt;/h2&gt;&lt;p&gt;自定义泛型委托：&lt;br&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 事件和委托(鸿门宴示例)</title>
    <link href="https://www.andyvj.com/2019/07/28/190728N01/"/>
    <id>https://www.andyvj.com/2019/07/28/190728N01/</id>
    <published>2019-07-28T13:16:26.000Z</published>
    <updated>2019-07-28T13:23:03.409Z</updated>
    
    <content type="html"><![CDATA[<p>来自网上的一片<a href="https://www.cnblogs.com/yinqixin/p/5056307.html" target="_blank" rel="noopener">博文</a>。</p><p>悟：做事的思想应是<strong>先整体后局部，总分总</strong>。这篇博文有很好的写程序的思路，值得学习。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line">namespace LianXi_事件和委托</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">RaiseEventHandler</span>(<span class="params"><span class="keyword">string</span> hand</span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">FallEventHandler</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            A a = <span class="keyword">new</span> A();</span><br><span class="line">            B b = <span class="keyword">new</span> B(a);</span><br><span class="line">            C c = <span class="keyword">new</span> C(a);</span><br><span class="line"></span><br><span class="line">            a.Raise(<span class="string">"左"</span>);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"============="</span>);</span><br><span class="line">            a.Fall();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">event</span> RaiseEventHandler RaiseEvent;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">event</span> FallEventHandler FallEvent;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Raise</span>(<span class="params"><span class="keyword">string</span> hand</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"首领举&#123;0&#125;杯。"</span>, hand);</span><br><span class="line">                <span class="keyword">if</span> (RaiseEvent != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    RaiseEvent(hand);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fall</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"首领摔杯。"</span>);</span><br><span class="line">                <span class="keyword">if</span> (FallEvent != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    FallEvent();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">B</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> A a;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">B</span> (<span class="params">A a</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">this</span>.a = a;</span><br><span class="line">                a.FallEvent += a_FallEvent;</span><br><span class="line">                a.RaiseEvent += a_RaiseEvent;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a_RaiseEvent</span>(<span class="params"><span class="keyword">string</span> hand</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hand == <span class="string">"左"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Attack();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a_FallEvent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Attack();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Attack</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"B 发动攻击。。。"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">C</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span>  A a;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">C</span>(<span class="params">A a</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">this</span>.a = a;</span><br><span class="line">                a.FallEvent += a_FallEvent;</span><br><span class="line">                a.RaiseEvent += a_RaiseEvent;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a_RaiseEvent</span>(<span class="params"><span class="keyword">string</span> hand</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hand == <span class="string">"右"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Attack();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a_FallEvent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Attack();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Attack</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"C 发动攻击。。。"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">首领举左杯。</span><br><span class="line">B 发动攻击。。。</span><br><span class="line">=============</span><br><span class="line">首领摔杯。</span><br><span class="line">B 发动攻击。。。</span><br><span class="line">C 发动攻击。。。</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.cnblogs.com/yinqixin/p/5056307.html" target="_blank" rel="noopener">link-01</a> // 分分钟用上C#中的委托和事件<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;来自网上的一片&lt;a href=&quot;https://www.cnblogs.com/yinqixin/p/5056307.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;悟：做事的思想应是&lt;strong&gt;先整体后局部，总分总&lt;/strong&gt;。这篇博文有很好的写程序的思路，值得学习。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net基础加强第四天-接口</title>
    <link href="https://www.andyvj.com/2019/07/27/190727N04/"/>
    <id>https://www.andyvj.com/2019/07/27/190727N04/</id>
    <published>2019-07-27T11:40:03.000Z</published>
    <updated>2019-07-27T12:41:50.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><ul><li>什么是接口？<ul><li>接口就是一种<span style="color:red">规范，协议（*）</span>，约定好遵守某种规范就可以写通用的代码。</li><li>定义了一组具有各种功能的方法。（只是一种能力，没有具体实现，像抽象方法一样，“光说不做”）</li></ul></li><li>接口存在的意义：<strong>多态</strong>。多态的意义：程序可扩展性。最终一让程序变的更灵活，节省成本，提高效率。</li><li>接口解决了类的多继承的问题</li><li>接口解决了类继承以后体积庞大的问题。</li><li>接口之间可以实现多继承</li><li>先从语法角度看一下接口，与抽象类类似。</li></ul><a id="more"></a><h2 id="接口的定义和一些概念"><a href="#接口的定义和一些概念" class="headerlink" title="接口的定义和一些概念"></a>接口的定义和一些概念</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口不能实例化</span></span><br><span class="line"><span class="comment">//接口就是让子类来实现的。</span></span><br><span class="line"><span class="comment">//1.接口可以实现“多继承”（多实现），一个类只能继承自一个父类，但是可以实现多个接口。</span></span><br><span class="line"><span class="comment">//2.接口解决了不同类型之间的多态问题，比如鱼与船不是同一类型，但是都能在水里“游泳”，</span></span><br><span class="line"><span class="comment">//只是万式不一样，要对游泳”实现多态，就只能考虑接口。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个接口，建议：一定要以大写 I 开头</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IFlyable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//接口里面能包含什么成员，接口里面只能包含【方法】,</span></span><br><span class="line">    <span class="comment">//(属性，索引器，事件)</span></span><br><span class="line">    <span class="comment">//归根结底是只包含 [方法]</span></span><br><span class="line">    <span class="comment">//接口中的所有成员，都不能显示的写任何访问修饰符</span></span><br><span class="line">    <span class="comment">//默认是pub1ic的访问修饰符</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SayHi</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">M1</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span>;</span><br><span class="line">    <span class="comment">//在接口中这样写表示是一个未实现的属性。</span></span><br><span class="line">    <span class="keyword">string</span> Name &#123;</span><br><span class="line">        <span class="keyword">get</span>;</span><br><span class="line">        <span class="keyword">set</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//索引器 </span></span><br><span class="line">    <span class="keyword">string</span> <span class="keyword">this</span> [<span class="keyword">int</span> index] &#123;</span><br><span class="line">        <span class="keyword">get</span>;</span><br><span class="line">        <span class="keyword">set</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口中的成员，子类必须实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Myclass</span> : <span class="title">IFlyable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">string</span> name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sayhi</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"Hi..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">M1</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(msg + <span class="string">"Hi..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; name = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> <span class="keyword">this</span>[<span class="keyword">int</span> index] &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="两个接口练习"><a href="#两个接口练习" class="headerlink" title="两个接口练习"></a>两个接口练习</h2><ul><li>案例（继承了一个类，同时实现了其他接口）  <ul><li>鸟-麻雀 sparrow[‘spereu]，鸵鸟 ostrich[ostrit]，企鹅penguin[pengwin]，鹦鹉parrot[paeret]</li><li>鸟能飞，鸵鸟，企鹅不能。。。你怎么办</li></ul></li><li>子类继承抽象类，实现接口</li><li>接口中的成员必须不能有实现，接口不能实例化。</li><li>接口中的成员不能有访问修饰符，隐式公开<code>public</code>接口中可以有<strong>属性、方法、索引器等（其实都是方法）</strong>，但不能有字段</li><li>接口中的所有成员必须被<span style="color:red">子类中全部实现</span>，除非<strong>子类是抽象类</strong>，把接口中的成员标记为抽象的。</li><li><strong>练习：</strong>从学生，老师，校长类中抽象出人的类，学生和老师都有收作业的方法，但是校长不会收作业</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">namespace xueXi_接口</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            IFlyable bird = <span class="keyword">new</span> Parrot()<span class="comment">/*Sparrow()*/</span>;</span><br><span class="line">            bird.Fly();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 鸟</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bird</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Brak</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"叫...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IFlyable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 麻雀</span></span><br><span class="line">    <span class="comment">// 当一个类同时继承父类，并且实现了多个接口的时候，必须将继承类，写在第一个。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Sparrow</span> : <span class="title">Bird</span>, <span class="title">IFlyable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"麻雀飞..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 鸵鸟</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Ostrich</span> : <span class="title">Bird</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 企鹅</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Penguin</span>: <span class="title">Bird</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 鹦鹉</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Parrot</span> : <span class="title">Bird</span>, <span class="title">IFlyable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"鹦鹉飞..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">namespace xueXi_接口</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Class2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ICollectHomework person = <span class="keyword">new</span> Teacher()<span class="comment">/*Student()*/</span>;</span><br><span class="line">            person.Collect();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ICollectHomework</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Collect</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span> : <span class="title">Person</span>, <span class="title">ICollectHomework</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Collect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"学生收作业..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Teacher</span> : <span class="title">Person</span>, <span class="title">ICollectHomework</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Collect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"老师收作业..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SchoolMaster</span> : <span class="title">Person</span> &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="再看一个接口案例"><a href="#再看一个接口案例" class="headerlink" title="再看一个接口案例"></a>再看一个接口案例</h2><ul><li>回顾：接口是一种规范。<ul><li>什么是规范？理解规范的意义。规范，就是告诉我们要做什么，具有什么能力。</li><li>在程序中为什么需要规范？（多态，可以让我们编写通用的代码，提高程序的可扩展性）</li><li>接口就像“法律”。</li></ul></li><li>登记方法(接口作为参数,实现多态)<ul><li><code>DengJi(Person person)</code>//人口登记,<code>Person</code>是抽象类</li><li><code>DengJi(Car car)</code>//汽车也要登记</li><li><code>DengJi(House house)</code>//房子也要登记.<code>JiKou</code></li><li><code>DengJi(lJieKou jk);</code></li></ul></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">namespace xuexi_接口练习</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            German g = <span class="keyword">new</span> German();</span><br><span class="line">            Car car = <span class="keyword">new</span> Car();</span><br><span class="line"></span><br><span class="line">            Dengji(g);</span><br><span class="line">            Dengji(car);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Dengji</span>(<span class="params">IShowInfo dengji</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            dengji.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IShowInfo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Chinese</span> &#123; &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Americn</span> &#123; &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">German</span> : <span class="title">IShowInfo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"德国人...."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Car</span> : <span class="title">IShowInfo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"兰博基尼..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示接口"><a href="#显示接口" class="headerlink" title="显示接口"></a><a href="https://www.bilibili.com/video/av10434119/?p=5" target="_blank" rel="noopener">显示接口</a></h2><ul><li>为什么要显示实现接口？<ul><li>方法重名后的解决办法。</li></ul></li><li>显示实现接口后，<span style="color:red">只能通过接口来调用</span>。不能通过类对象本身来调用（显示实现的接口，查看<code>IL</code>是<code>private</code>的，<strong>防止通过类来调用</strong>）</li><li>为什么要有“显示实现接口”？<ul><li>可以解决重名方法的问题。T</li></ul></li><li>什么是“显示实现接口”？<ul><li>实现接口中的方法时用：<code>接口名.方法名()</code>，并且没有访间修饰符，<code>private</code></li></ul></li><li>“显示实现接口”后怎么调用？<ul><li>只能通过接口变量来调用，因为显示实现接口默认为<code>private</code>。</li></ul></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">namespace xuexi_显示接口</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            IFace1 stu = <span class="keyword">new</span> Student();</span><br><span class="line">            stu.Fly();</span><br><span class="line">            IFace2 stu1 = <span class="keyword">new</span> Student();</span><br><span class="line">            stu1.Fly();</span><br><span class="line"></span><br><span class="line">            IFace1 stu3 = <span class="keyword">new</span> Teacher();</span><br><span class="line">            stu3.Fly();</span><br><span class="line">            IFace2 stu4 = <span class="keyword">new</span> Teacher();</span><br><span class="line">            stu4.Fly();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">interface</span> <span class="title">IFace1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">interface</span> <span class="title">IFace2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span> : <span class="title">IFace1</span>, <span class="title">IFace2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Iface1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Teacher</span> : <span class="title">IFace1</span>, <span class="title">IFace2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">void</span> IFace2.Fly() <span class="comment">// 只能私有，通接口调用</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"2"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口的总结"><a href="#接口的总结" class="headerlink" title="接口的总结"></a>接口的总结</h2><ol><li>接口是一种规范。为了多态。</li><li>接口不能被实例化。</li><li>接口中的成员不能加“访问修饰符”，接口中的成员访问修饰符为<code>public</code>，不能修改。（默认为<code>public</code>）</li><li>接口中的成员不能有任何实现（“光说不做”，只是定义了一组未实现的成员）</li><li>接口中只能有<strong>方法、属性、索引器、事件，不能有“字段”</strong>。</li><li>接口与接口之间可以继承，并且可以多继承。</li><li>实现接口的子类必须实现该接口的全部成员。</li><li>一个类可以同时继承一个类并实现多个接口，如果一个子类同时继承了<code>父类A</code>，并实现了<code>接口IA</code>，那么语法上<code>A</code>必须写在<code>IA</code>的前面。<code>class MyClass:A, IA {}</code>，因为类是单继承的。</li><li>当一个抽象类实现接口的时候，如果不想把接口中的成员实现，可以把该成员实现为<code>abstract</code>。（抽象类也能实现接口，用<code>abstrac</code>标记）</li><li>“显示实现接口”，只能通过接口变量来调用（因为显示实现接口后成员为<code>private</code>）。</li></ol><h2 id="使用接口的建议"><a href="#使用接口的建议" class="headerlink" title="使用接口的建议"></a>使用接口的建议</h2><ul><li>面向抽象编程，使用抽象（父类、抽象类、接口）不使用具体。</li><li>“向上转型”</li><li>在编程时：<ul><li>接口 -&gt; 抽象类 -&gt; 父类 -&gt; 具体类（在定义方法参数、返回值、声明变量的时候能用抽象就不要用具体。）</li><li>能使用接口就不用抽象类，能使用抽象类就不用类，能用父类就不用子类。</li><li>避免定义“体积庞大的接口”、“多功能接口”，会造成“接口污染”。只把相关联的一组成员定义到一个接口中（尽量在接口中少定义成员）。<span style="color:red">单一职责原则</span></li><li>定义多个职责单一的接口（小接口）（组合使用）。（印刷术与活字印刷术）</li></ul></li><li>随着学习的深入再继续体会接口的作用。</li></ul><h2 id="抽象类复习、简单工厂设计模式复习"><a href="#抽象类复习、简单工厂设计模式复习" class="headerlink" title="抽象类复习、简单工厂设计模式复习"></a>抽象类复习、简单工厂设计模式复习</h2><ul><li>抽像类：<ul><li>不能被实例化，需要被继承。多态。</li><li>子类必须重写父类中的所有的抽象成员，除非：子类也是一个抽象类。</li><li>抽象成员在父类中不能有任何实现。</li><li>抽象类中可以有实例成员。</li><li>抽象成员的访问修饰符不能是<code>private</code></li><li>抽象成员只能写在抽象类中。</li><li>abstract</li></ul></li><li>作业：通过案例笔记本电脑的选择。<ul><li>笔记本电脑父类<code>NoteBook</code>、不同品牌的笔记本产品。（继承+简单工厂）</li></ul></li></ul><h2 id="接口复习"><a href="#接口复习" class="headerlink" title="接口复习"></a>接口复习</h2><ul><li>定义接口的语法（<code>interface</code>）<ul><li>接口中只能包含<strong>方法、属性、索引器、事件</strong>。不能包含字段。见备注1（貌似事件像一个字段？其实是两个方法。<code>reflector</code>查看源码）</li><li>接口中的成员不能有任何的实现（真正的“光说不做”。思考这样做的意义。联想抽象类中的抽象方法。）</li><li>接口中的成员不能写访间修饰符。</li></ul></li><li>使用接口的语法<ul><li>一个类可以实现多个接口。</li><li>实现接口的类，必须把接口中的所有成员都实现。</li><li>子类实现接口中的成员时，不能修改成员的访间修饰符、参数列表、方法名等。（与方法重写一样）</li></ul></li></ul><h2 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h2><ol><li>如何使用<code>virtual</code>和<code>override</code>？<ul><li><code>Person per = new Student();</code></li><li><code>per.SasHI()</code>调用的子类重写的<code>SayHi</code>方法（语法、应用（多态））</li></ul></li><li>如何使用<code>abstract</code>和<code>override</code>？</li><li>“方法重载<code>overload</code>”、“方法重写<code>override</code>”、”隐藏<code>new</code>”是同一个概念吗？</li><li>抽象类和接口的区别？见备注1.<ul><li>抽象类适用于同一系列，并且有需要继承的成员。</li><li>接口适用于不同系列的类具有相同的动作（行为、动作、方法）。</li><li>对于不是相同的系列，但具有相同的行为，这个就考虑使用接口。</li><li>接口解决了类不能多继承问题。</li></ul></li></ol><p><code>virtual</code>： 是用来标记虚方法的。<br><code>override</code>： 是进行方法重写的，当子类继承父类的时候重写父类的方法。</p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10434119" target="_blank" rel="noopener">link-01</a>  //  B站 -&gt; C#.Net基础加强第四天-接口与异常处理 -&gt; 传智播客<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;接口&quot;&gt;&lt;a href=&quot;#接口&quot; class=&quot;headerlink&quot; title=&quot;接口&quot;&gt;&lt;/a&gt;接口&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;什么是接口？&lt;ul&gt;
&lt;li&gt;接口就是一种&lt;span style=&quot;color:red&quot;&gt;规范，协议（*）&lt;/span&gt;，约定好遵守某种规范就可以写通用的代码。&lt;/li&gt;
&lt;li&gt;定义了一组具有各种功能的方法。（只是一种能力，没有具体实现，像抽象方法一样，“光说不做”）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接口存在的意义：&lt;strong&gt;多态&lt;/strong&gt;。多态的意义：程序可扩展性。最终一让程序变的更灵活，节省成本，提高效率。&lt;/li&gt;
&lt;li&gt;接口解决了类的多继承的问题&lt;/li&gt;
&lt;li&gt;接口解决了类继承以后体积庞大的问题。&lt;/li&gt;
&lt;li&gt;接口之间可以实现多继承&lt;/li&gt;
&lt;li&gt;先从语法角度看一下接口，与抽象类类似。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net基础加强十一天-委托</title>
    <link href="https://www.andyvj.com/2019/07/27/190727N03/"/>
    <id>https://www.andyvj.com/2019/07/27/190727N03/</id>
    <published>2019-07-27T08:35:56.000Z</published>
    <updated>2019-07-27T08:51:29.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="委托复习"><a href="#委托复习" class="headerlink" title="委托复习"></a>委托复习</h2><ol><li>委托是一种数据类型，像类一样的一种数据类型。<span style="color:red">一般都是直接在命名空间中定义</span>。</li><li>定义委托时，需要指明<strong>返回值类型、委托名与参数列表</strong>，这样就能确定该类型的委托能存储什么样的方法。</li><li>使用委托：<ol><li>声明委托变量。</li><li>委托是一个引用类型，就像类一样，所以当声明委托变量后，如果不赋值则该委托变量为                <code>null</code>。所以在使用委托变量前最好做非空校验 <code>weituo！=null</code>。</li><li>委托类型的变量只能赋值一个委托类型的对象。</li></ol></li></ol><p><strong>委托，像 C++ 的函数指针。</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    MyDelegate md = <span class="keyword">new</span> MyDelegate(M1);</span><br><span class="line">    md();</span><br><span class="line">    MyDelegate md1 = M1; <span class="comment">// 这种定义的方法是</span></span><br><span class="line">    <span class="comment">// 和上面是一样的，省略了 new。</span></span><br><span class="line">    md1.Invoke(); <span class="comment">// 这种调用的方法是上面写法的完整版。</span></span><br><span class="line">    <span class="comment">// Invoke(/*有参数的话可以在括号中传递。*/)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">M1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">"M1 函数。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">MyDelegate</span>(<span class="params"></span>)</span>;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我是 M1 函数</span><br><span class="line">我是 M1 函数</span><br><span class="line">请按任意键继续.</span><br></pre></td></tr></table></figure></p><h2 id="委托在什么情况下用"><a href="#委托在什么情况下用" class="headerlink" title="委托在什么情况下用"></a>委托在什么情况下用</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Say</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    <span class="comment">/* ......</span></span><br><span class="line"><span class="comment">    这里是要执行的代码，而这段代码的不确定性很大。根据调用者的不同可能执行的</span></span><br><span class="line"><span class="comment">    代码不一样。这时候就可以把这段代码封装起来，封装成一个委托类型。通过委托</span></span><br><span class="line"><span class="comment">    变量来代替，将来你传递一个什么委托变量，这个地方就执行什么方法。</span></span><br><span class="line"><span class="comment">    这样的意思，代码提前写好了，在这个地方先占一个位，这里执行的代码是活的。</span></span><br><span class="line"><span class="comment">    是由传递过来的方法确定的。</span></span><br><span class="line"><span class="comment">   ......*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>委托就是事先占了一个位置，执行的方法待定，由传递过来的方法决定，较的灵活。</p><h2 id="实例练习"><a href="#实例练习" class="headerlink" title="实例练习"></a>实例练习</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">练习3： // 把邮箱名替换成※号  </span><br><span class="line">zxh@itcast.cn   →  ***@itcast.cn  </span><br><span class="line">steve_zhao@163.com  →  **********@163.com  </span><br><span class="line">sk@codeedu.com  →  **@codeedu.com</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">"请输入一个邮箱地址："</span>);</span><br><span class="line">        <span class="keyword">string</span> email = Console.ReadLine();</span><br><span class="line">        email = Regex.Replace(email, <span class="string">@"(\w+)(@\w+\.\w)"</span>, ReplaceMethod, RegexOptions.ECMAScript);</span><br><span class="line">        <span class="comment">// ▲ 第三个参数直接传递一个返回值为 string 类型的方法，</span></span><br><span class="line">        <span class="comment">// 这里就用的委托，不是定死的，是活的。</span></span><br><span class="line"></span><br><span class="line">       Console.WriteLine(email);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">string</span> <span class="title">ReplaceMethod</span>(<span class="params">Match match</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> uid = match.Groups[<span class="number">1</span>].Value;</span><br><span class="line">    <span class="keyword">string</span> others = match.Groups[<span class="number">2</span>].Value;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; uid.Length; i++) &#123;</span><br><span class="line">        sb.Append(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.ToString() + others;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="委托的使用"><a href="#委托的使用" class="headerlink" title="委托的使用"></a>委托的使用</h2><ul><li>声明委托的方式: <code>delegate</code> 返回值类型 委托类型名(参数)   比如 <code>delegate void StringProcess(string s);</code> 注意这里的除了前面的 <code>delegate</code>,剩下部分和声明一个函数一样,但是<code>StringProcess</code>不是函数名,而是委托类型名。</li><li>存储什么样的方法就声明什么类型(方法参数与返回值)的委托。</li><li>声明的委托是一种类型,就像<code>int</code>、<code>Person</code>一样,如果要用的话还要声明委托类型的变量,声明委托类型变量的方式:<code>StringProcess f1;</code></li><li>将委托类型变量指向函数 <code>StringProcess sp = new StringProcess(SayHello)</code>,这样就可以像调用普通函蒙一样把<code>sp</code>当成函教用了.委托可以看做是函数的指针.整数可以用整数变量指向它,对象可以用对象变量指向它,函数也可以用委托变量指向它.和直接调用函数的区别:用委托就可以指向任意的函数,哪怕是之前没定义的都可以,而不使用受限于那几种。</li><li>将委托类型变量指向函数还可以简化成<code>StringProcess sp = SayHelo</code>,编译器帮我们进行了<code>new</code>.但是不能<code>sp = Printit()</code>,因为这样就成了函数调用。</li></ul><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av24227074" target="_blank" rel="noopener">link-01</a> // C#.Net基础加强十一天-委托 事件 反射<br></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;委托复习&quot;&gt;&lt;a href=&quot;#委托复习&quot; class=&quot;headerlink&quot; title=&quot;委托复习&quot;&gt;&lt;/a&gt;委托复习&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;委托是一种数据类型，像类一样的一种数据类型。&lt;span style=&quot;color:red&quot;&gt;一般都是直接在命名空
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>英语：关于thing的表达</title>
    <link href="https://www.andyvj.com/2019/07/27/190727N01/"/>
    <id>https://www.andyvj.com/2019/07/27/190727N01/</id>
    <published>2019-07-27T06:37:22.000Z</published>
    <updated>2019-07-27T07:03:05.781Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://image.huvjie.com/190727N01_img01.mp3" target="_blank" rel="noopener">音频。</a></p><a id="more"></a><embed height="50" width="100%" autostart="false" loop="false" src="http://image.huvjie.com/190727N01_img01.mp3"><ul><li>It’s my thing.   // 是我擅长的。</li></ul><ul><li>I know a thing or two. //  略知一二。</li><li>I have a thing for you. //  我喜欢你</li><li>Sure thing!  //  没问题</li></ul><p><hr><br><span style="color:gray;font-size:12px"><br>参考： 抖音 -&gt; @斑马英语ZebraEnglish<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://image.huvjie.com/190727N01_img01.mp3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;音频。&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="基础学科" scheme="https://www.andyvj.com/categories/%E5%9F%BA%E7%A1%80%E5%AD%A6%E7%A7%91/"/>
    
    
      <category term="英语" scheme="https://www.andyvj.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net基础加强第六天：集合之ArrayList</title>
    <link href="https://www.andyvj.com/2019/07/27/190727N02/"/>
    <id>https://www.andyvj.com/2019/07/27/190727N02/</id>
    <published>2019-07-27T03:08:41.000Z</published>
    <updated>2019-07-27T03:11:46.367Z</updated>
    
    <content type="html"><![CDATA[<p>数组的长度声明后就是固定的，且都是存的同一种类型的数据。</p><p>集合的长度是不固定的(主要特征)，可以存不同类型的元素；但泛型集合必须是同一种类型的集合<t>。</t></p><p>集合内部的原理用的还是数组，都是依赖于数组的，内部存数据都是存到了数组中。</p><a id="more"></a><h3 id="集合的命名空间"><a href="#集合的命名空间" class="headerlink" title="集合的命名空间"></a>集合的命名空间</h3><ul><li><code>using System.Collections;</code>（非泛型集合）</li><li><code>using System.Collections.Generic;</code>（泛型集合）</li></ul><h3 id="常用集合"><a href="#常用集合" class="headerlink" title="常用集合"></a>常用集合</h3><!--![](https://note.youdao.com/yws/public/resource/372ce59fbbc603e25d588119c6be0e91/xmlnote/6494BA13D3BF40B6B238DBC7D4821466/55283)--><ul><li>类似数组集合：<code>AraylList、List&lt;T&gt;</code></li><li>“键值对”集合（“哈希表”集合）：<code>Hashtable</code>、<code>Dictionary&lt;K,V&gt;</code></li><li>“堆栈”集合：<code>Stack</code>、<code>Stack&lt;T&gt;</code>（LIFO）Last In First Out</li><li>“队列”集合：<code>Queue</code>、<code>Queue&lt;T&gt;</code>（FIFO）First In First Out</li><li>“可排序键值对“集合：（插入、检索没有“哈希表”集合高效）<ul><li><code>SortedlList</code>、<code>SortedList&lt;K, V&gt;</code>（占用内存更少，可以通过索引访词）</li><li><code>SortedDictionary&lt;K,V&gt;</code>（占用内存更多，没有索引，但插入、删除元素的速度比<code>SortedList</code>快）</li></ul></li><li><code>Set</code>集合：无序、不重复。<code>HashSet&lt;T&gt;</code>，可以将HashSet类视为不包含值的<code>Dictionary</code>集合。与<code>List&lt;T&gt;</code>类似。<code>SortedSet&lt;T&gt;</code>（.net4.0支持，有序无重复集合）</li><li>“双向链表”集合：<code>LinkedList&lt;T&gt;</code>，增删速度快。</li></ul><h3 id="增删改查遍历"><a href="#增删改查遍历" class="headerlink" title="增删改查遍历"></a>增删改查遍历</h3><p><code>ArrayList</code>、<code>Hashtable</code>、<code>List&lt;T&gt;</code>、 <code>Dictionary&lt;K,V&gt;</code> ：<br><!--![](https://note.youdao.com/yws/public/resource/372ce59fbbc603e25d588119c6be0e91/xmlnote/30219BF8FA4148EF96FE91A96CB6D432/55320)--></p><ul><li>数组的特点：<strong>类型统一</strong>、<strong>长定固定</strong>。</li><li>集合常用操作添加、遍历、移除</li><li>命名空间<code>System.Colections</code></li><li><code>ArayList</code>可变长度数组，使用类似于数组<ul><li>属性<code>Capacity</code>（集合中以容纳元素的个数，翻信增长）；<code>Count</code>（集合中实际存放的元素的个数。）</li><li>方法  <ul><li><code>Add(10)</code> <code>AddRange(ICollection c)</code> <code>Remove()</code> <code>RemoveAt()</code> <code>Clear()</code></li><li><code>Contains()</code> <code>ToArray()</code> <code>Sort()</code> 排序 <code>Reverse()</code>//反转</li></ul></li></ul></li><li><code>Hashtable</code> 键值对的集合，类似于字典，<code>Hashtable</code>在查找元素的时候，速度很快。<ul><li><code>Add(object key, object value)</code>;</li><li><code>hash[&quot;key&quot;]</code>;</li><li><code>hash[&quot;key&quot;]=&quot;修改&quot;</code>;</li><li><code>ContainsKey(key)</code>;</li><li><code>Remove(&quot;key&quot;)</code>;</li><li>遍历;</li><li><code>hash.Keys</code>;</li><li><code>hasth.Values/Dictionary Entry</code>;</li><li>键值对集合中的”键”，绝对不能重复。</li></ul></li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line">namespace 集合</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ArrayList arrayList = <span class="keyword">new</span> ArrayList();<span class="comment">// 注意提示有几个重载函数。</span></span><br><span class="line">            <span class="comment">//向集合中增加元素</span></span><br><span class="line">            arrayList.Add(<span class="number">10</span>); <span class="comment">// 传的参数为 object，什么类型都可以。</span></span><br><span class="line">            arrayList.Add(<span class="string">"10"</span>);</span><br><span class="line">            arrayList.Add(<span class="string">"张三丰"</span>);</span><br><span class="line">            Person gj = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"郭靖"</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            arrayList.Add(gj); <span class="comment">// 添加对象也可以。</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// ▼ Count 表示集合中的元素实际个数</span></span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            <span class="comment">// ▼ Capacity 容量，可以理解：容量有 100，实际上可以只放 1 个元素。</span></span><br><span class="line">            Console.WriteLine(<span class="string">"集合现在的容量&#123;0&#125;"</span>, arrayList.Capacity);</span><br><span class="line">            Console.WriteLine(<span class="string">"==========传接口类型=========="</span>);</span><br><span class="line">            <span class="comment">// ICollection 接口， ArrayList 自己也可以往里传，数组也可以。所有集合，所有数组都可以传。</span></span><br><span class="line">            <span class="comment">// 实现了 ICollection 的类都可以</span></span><br><span class="line">            arrayList.Add(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span> &#125;);</span><br><span class="line">            <span class="comment">//  集合获取元素</span></span><br><span class="line">            Console.WriteLine(arrayList[<span class="number">0</span>]);<span class="comment">// 用索引器访问</span></span><br><span class="line">            Console.WriteLine(arrayList[<span class="number">3</span>]);</span><br><span class="line">            Console.WriteLine(<span class="string">"==========for 循环遍历集合=========="</span>);</span><br><span class="line">            <span class="comment">// ▼ for 循环遍历集合</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.Count; i++) &#123;</span><br><span class="line">                <span class="comment">// C# 所有集合长度都是 Count，数组都是 Length。</span></span><br><span class="line">                Console.WriteLine(arrayList[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 向指定位置插入一个元素</span></span><br><span class="line">            Console.WriteLine(<span class="string">"==========向指定位置插入一个元素=========="</span>);</span><br><span class="line">            arrayList.Insert(<span class="number">0</span>, <span class="string">"洪七公"</span>);<span class="comment">//  索引为 0 的位置中插入，以前的依次向后移动</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.Count; i++) &#123;</span><br><span class="line">                <span class="comment">// C# 所有集合长度都是 Count，数组都是 Length。</span></span><br><span class="line">                Console.WriteLine(arrayList[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 也可以插一堆的元素</span></span><br><span class="line">            Console.WriteLine(<span class="string">"==========向指定位置插入一堆元素=========="</span>);</span><br><span class="line">            arrayList.InsertRange(<span class="number">3</span>, <span class="keyword">new</span> <span class="keyword">string</span>[]&#123; <span class="string">"a"</span>, <span class="string">"good"</span>, <span class="string">"moring"</span>&#125;);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.Count; i++) &#123;</span><br><span class="line">                <span class="comment">// C# 所有集合长度都是 Count，数组都是 Length。</span></span><br><span class="line">                Console.WriteLine(arrayList[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 删除元素 可以根据 IDE 的提示参数去理解函数的含义</span></span><br><span class="line">            <span class="comment">//arrayList.Remove;</span></span><br><span class="line">            <span class="comment">//arrayList.RemoveAt;//  根据索引来删除</span></span><br><span class="line">            <span class="comment">//arrayList.RemoveRange;//  删除一段，从第几个开始删除到第几个元素，这个比较好理解。</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"===========删除结果是：============="</span>);</span><br><span class="line">            Console.WriteLine(arrayList.Count);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrayList.Count; i ++) &#123;</span><br><span class="line">                arrayList.RemoveAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(arrayList.Count);<span class="comment">// 可见，删一个就移动重组一下。</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"===========清除ArrayList============="</span>);</span><br><span class="line">            arrayList.Clear();</span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            <span class="comment">// foreach 是只读循环</span></span><br><span class="line">            Console.WriteLine(<span class="string">"===========根据对象来删除============="</span>);</span><br><span class="line">            <span class="comment">// ▼ 根据对象来删除</span></span><br><span class="line">            Person p1 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"雪山飞狐"</span>,</span><br><span class="line">                Age = <span class="number">100</span>,</span><br><span class="line">                Email = <span class="string">"nb@sina.com.cn"</span></span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            arrayList.Add(p1);</span><br><span class="line">            arrayList.Add(<span class="number">99</span>);</span><br><span class="line">            arrayList.Add(<span class="string">"黄蓉"</span>);</span><br><span class="line"></span><br><span class="line">            Person p2 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"雪山飞狐"</span>,</span><br><span class="line">                Age = <span class="number">100</span>,</span><br><span class="line">                Email = <span class="string">"nb@sina.com.cn"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            arrayList.Add(p2);</span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            arrayList.Remove(<span class="number">99</span>);</span><br><span class="line">            Person p3 = <span class="keyword">new</span> Person();</span><br><span class="line">            p3.Name = <span class="string">"雪山飞狐"</span>;</span><br><span class="line">            p3.Age = <span class="number">100</span>;</span><br><span class="line">            p3.Email = <span class="string">"nb@sina.com.cn"</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            arrayList.Remove(p3);<span class="comment">// 这个对象没有添加，也就没有删除，但也没报错</span></span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            <span class="comment">// 如果这样就能删掉</span></span><br><span class="line">            p3 = p1;</span><br><span class="line">            arrayList.Remove(p3);<span class="comment">// 这个对象没有添加，也就没有删除，但也没报错</span></span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line">            <span class="comment">// ▲ 这样能删除</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> name = <span class="keyword">new</span> <span class="keyword">string</span>(<span class="keyword">new</span> <span class="keyword">char</span>[] &#123; <span class="string">'黄'</span>, <span class="string">'蓉'</span>&#125;);</span><br><span class="line">            arrayList.Remove(name);  <span class="comment">// 删除掉了“黄蓉”</span></span><br><span class="line">            Console.WriteLine(<span class="string">"集合中存在的元素个数&#123;0&#125;。"</span>, arrayList.Count);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 总结：</span></span><br><span class="line">            <span class="comment">// Remove 并不是按照是不是对象的地址来删除的，而是判断是不是相等来删除的。</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(arrayList.Contains(<span class="number">99</span>)); <span class="comment">// 判断是否包含这个元素</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Email &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">集合中存在的元素个数4。</span><br><span class="line">集合现在的容量4</span><br><span class="line">==========传接口类型==========</span><br><span class="line">10</span><br><span class="line">集合.Person</span><br><span class="line">==========for 循环遍历集合==========</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">张三丰</span><br><span class="line">集合.Person</span><br><span class="line">System.Int32[]</span><br><span class="line">==========向指定位置插入一个元素==========</span><br><span class="line">洪七公</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">张三丰</span><br><span class="line">集合.Person</span><br><span class="line">System.Int32[]</span><br><span class="line">==========向指定位置插入一堆元素==========</span><br><span class="line">洪七公</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">a</span><br><span class="line">good</span><br><span class="line">moring</span><br><span class="line">张三丰</span><br><span class="line">集合.Person</span><br><span class="line">System.Int32[]</span><br><span class="line">===========删除结果是：=============</span><br><span class="line">9</span><br><span class="line">4</span><br><span class="line">===========清除ArrayList=============</span><br><span class="line">集合中存在的元素个数0。</span><br><span class="line">===========根据对象来删除=============</span><br><span class="line">集合中存在的元素个数4。</span><br><span class="line">集合中存在的元素个数3。</span><br><span class="line">集合中存在的元素个数3。</span><br><span class="line">集合中存在的元素个数2。</span><br><span class="line">集合中存在的元素个数1。</span><br><span class="line">False</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><h3 id="ArrayList-排序等"><a href="#ArrayList-排序等" class="headerlink" title="ArrayList 排序等"></a>ArrayList 排序等</h3><p>要想任意类型实现ArrayList Sort() 排序，需要实现  IComparable 这个接口。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line">namespace ArrayList排序等</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> ArrayList 的 sort 方法</span></span><br><span class="line">            ArrayList arr = <span class="keyword">new</span> ArrayList(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">10</span> &#125;);</span><br><span class="line">            Console.WriteLine(<span class="string">"==========升序========"</span>);</span><br><span class="line">            arr.Sort();<span class="comment">// 注意有三个重载</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(arr[i]);</span><br><span class="line">            &#125; <span class="comment">// 默认的是升序排序，从小到大.没有降序排序但可以 Reverse</span></span><br><span class="line">            Console.WriteLine(<span class="string">"==========降序========"</span>);</span><br><span class="line">            arr.Reverse(); <span class="comment">//  先升序，再反转就成降序了</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(arr[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*字符串排序*/</span></span><br><span class="line">            ArrayList arrList = <span class="keyword">new</span> ArrayList(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"hl"</span>, <span class="string">"xzl"</span>, <span class="string">"yzk"</span>, <span class="string">"fxh"</span>,<span class="string">"ksjd"</span>,<span class="string">""</span> ,<span class="string">"zaz"</span>&#125;);</span><br><span class="line">            arrList.Sort();</span><br><span class="line">            Console.WriteLine(<span class="string">"==========字符串排序========"</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrList.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(arrList[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ▲ 字符串排序，按第一个字母 ASCII 码大小排序。第一个字母比完，第二个字母比，依次比较。</span></span><br><span class="line">            <span class="comment">//   升序比较。</span></span><br><span class="line">            Console.WriteLine(<span class="string">"==========对象排序========"</span>);</span><br><span class="line">            ArrayList arrObj = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            Person p1 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"hjk"</span>,</span><br><span class="line">                Age = <span class="number">100</span>,</span><br><span class="line">                Email = <span class="string">"hhh@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p2 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"gdss"</span>,</span><br><span class="line">                Age = <span class="number">90</span>,</span><br><span class="line">                Email = <span class="string">"sd@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p3 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"cbv"</span>,</span><br><span class="line">                Age = <span class="number">80</span>,</span><br><span class="line">                Email = <span class="string">"ge@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p4 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"rtsssy"</span>,</span><br><span class="line">                Age = <span class="number">70</span>,</span><br><span class="line">                Email = <span class="string">"ghkj@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            arrObj.Add(p1);</span><br><span class="line">            arrObj.Add(p2);</span><br><span class="line">            arrObj.Add(p3);</span><br><span class="line">            arrObj.Add(p4);</span><br><span class="line">            Console.WriteLine(<span class="string">"元素个数："</span> + arrObj.Count);</span><br><span class="line">            arrObj.Sort(); <span class="comment">// 对象不能直接按这个排，因为不知道按什么排</span></span><br><span class="line">            <span class="comment">// 对象需要继承 IComparable 接口实现 CompareTo方法</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrObj.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(((Person)arrObj[i]).Name); <span class="comment">// 装箱成对象了，要强制转一下。</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 想要 Sort 排序，数据类型必须是实现过 IComparable 这个接口的</span></span><br><span class="line">            <span class="comment">// 所以 Person 对象想要排序，就必须要实现 IComparable 这个接口</span></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span>: <span class="title">IComparable</span>         </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">                <span class="keyword">get</span>;</span><br><span class="line">                <span class="keyword">set</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">int</span> Age &#123;</span><br><span class="line">                <span class="keyword">get</span>;</span><br><span class="line">                <span class="keyword">set</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">string</span> Email &#123;</span><br><span class="line">                <span class="keyword">get</span>;</span><br><span class="line">                <span class="keyword">set</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ▼ IComparable 接口实现 CompareTo方法</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">CompareTo</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                Person p = obj <span class="keyword">as</span> Person;</span><br><span class="line">                <span class="keyword">if</span> (p != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/*</span></span><br><span class="line"><span class="comment">                    return this.Age - p.Age;  // 升序降序在这里改下相减的前后顺序</span></span><br><span class="line"><span class="comment">                    //  ▲ 按照年龄，大 &gt; 0，等 = 0， 小 &lt; 0</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">this</span>.Name.Length - p.Name.Length; <span class="comment">// 按名字的长度排序</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 总结：要想任意类型实现ArrayList Sort() 排序，需要实现  IComparable 这个接口。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">==========升序========</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">26</span><br><span class="line">==========降序========</span><br><span class="line">26</span><br><span class="line">10</span><br><span class="line">9</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">==========字符串排序========</span><br><span class="line"></span><br><span class="line">fxh</span><br><span class="line">hl</span><br><span class="line">ksjd</span><br><span class="line">xzl</span><br><span class="line">yzk</span><br><span class="line">zaz</span><br><span class="line">==========对象排序========</span><br><span class="line">元素个数：4</span><br><span class="line">hjk</span><br><span class="line">cbv</span><br><span class="line">gdss</span><br><span class="line">rtsssy</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure></p><h3 id="ArrayList-任何情况排序"><a href="#ArrayList-任何情况排序" class="headerlink" title="ArrayList 任何情况排序"></a>ArrayList 任何情况排序</h3><p>总结：如果要升序再写一个类实现 IComparer，如果按年龄再写一个类实现IComparer，依次… 有多少个情况。</p><p>就写多少个比较的类就行了，不用去改源代码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line">namespace Arralist随意排序</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"==========对象排序========"</span>);</span><br><span class="line">            ArrayList arrObj = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            Person p1 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"hjk"</span>,</span><br><span class="line">                Age = <span class="number">100</span>,</span><br><span class="line">                Email = <span class="string">"hhh@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p2 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"gdss"</span>,</span><br><span class="line">                Age = <span class="number">90</span>,</span><br><span class="line">                Email = <span class="string">"sd@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p3 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"cbv"</span>,</span><br><span class="line">                Age = <span class="number">800</span>,</span><br><span class="line">                Email = <span class="string">"ge@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            Person p4 = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">                Name = <span class="string">"rtsssy"</span>,</span><br><span class="line">                Age = <span class="number">70</span>,</span><br><span class="line">                Email = <span class="string">"ghkj@andyvj.com"</span></span><br><span class="line">            &#125;;</span><br><span class="line">            arrObj.Add(p1);</span><br><span class="line">            arrObj.Add(p2);</span><br><span class="line">            arrObj.Add(p3);</span><br><span class="line">            arrObj.Add(p4);</span><br><span class="line">            Console.WriteLine(<span class="string">"元素个数："</span> + arrObj.Count);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ▼ 直接调用Sort（）方法是使用person类型实现了IComparab1e接口的默认方式来排序</span></span><br><span class="line">            <span class="comment">//  arrObj.Sort();</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrObj.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(((Person)arrObj[i]).Age);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 看 Sort() 函数的重载提示，有 IComparer 接口类型参数，一个比较器。</span></span><br><span class="line">            <span class="comment">// 所以有一个实现了接口的类就可以了。</span></span><br><span class="line"></span><br><span class="line">            arrObj.Sort(<span class="keyword">new</span> PersonSortByNameLengthAsc());</span><br><span class="line">            Console.WriteLine(<span class="string">"==========姓名长短排序后========"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrObj.Count; i++) &#123;</span><br><span class="line">                Console.WriteLine(((Person)arrObj[i]).Name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span>: <span class="title">IComparable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Email &#123;</span><br><span class="line">            <span class="keyword">get</span>;</span><br><span class="line">            <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">CompareTo</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Person p = obj <span class="keyword">as</span> Person;</span><br><span class="line">            <span class="keyword">if</span> (p != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.Age - p.Age;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ▼ 这个类就是一个比较器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PersonSortByNameLengthAsc</span> : <span class="title">IComparer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Compare</span>(<span class="params"><span class="keyword">object</span> x, <span class="keyword">object</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Person p1 = x <span class="keyword">as</span> Person;</span><br><span class="line">            Person p2 = y <span class="keyword">as</span> Person;</span><br><span class="line">            <span class="keyword">if</span> (x != <span class="literal">null</span> &amp;&amp; y != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> p1.Name.Length - p2.Name.Length;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"null 无法比较"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 总结：如果要升序再写一个类实现 IComparer，如果按年龄再写一个类实现IComparer，依次… 有多少个情况</span></span><br><span class="line">    <span class="comment">// 就写多少个比较的类就行了，不用去改源代码了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">==========对象排序========</span><br><span class="line">元素个数：4</span><br><span class="line">100</span><br><span class="line">90</span><br><span class="line">800</span><br><span class="line">70</span><br><span class="line">==========姓名长短排序后========</span><br><span class="line">hjk</span><br><span class="line">cbv</span><br><span class="line">gdss</span><br><span class="line">rtsssy</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.bilibili.com/video/av10470321" target="_blank" rel="noopener">link-01</a> // B站视频教程地址，来自：传智播客<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数组的长度声明后就是固定的，且都是存的同一种类型的数据。&lt;/p&gt;
&lt;p&gt;集合的长度是不固定的(主要特征)，可以存不同类型的元素；但泛型集合必须是同一种类型的集合&lt;t&gt;。&lt;/t&gt;&lt;/p&gt;
&lt;p&gt;集合内部的原理用的还是数组，都是依赖于数组的，内部存数据都是存到了数组中。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
</feed>
