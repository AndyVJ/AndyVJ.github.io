<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡文杰</title>
  
  <subtitle>专业道路上的自我修养</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.huvjie.com/"/>
  <updated>2020-11-21T14:04:15.314Z</updated>
  <id>https://blog.huvjie.com/</id>
  
  <author>
    <name>huvjie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理一下后面的思路</title>
    <link href="https://blog.huvjie.com/2021/12/31/201121N01/"/>
    <id>https://blog.huvjie.com/2021/12/31/201121N01/</id>
    <published>2021-12-31T02:22:00.000Z</published>
    <updated>2020-11-21T14:04:15.314Z</updated>
    
    <content type="html"><![CDATA[<p>理一下接下来的思路。首先，最重要和迫切的是加强提高业务层面“体力活”部分的熟练、效率。后面的整体方向：</p><ol><li>以 C# 技术栈为中心；</li><li>以工业视觉为技术核心；</li><li>加强英语和数学。</li></ol><a id="more"></a><h1 id="以-C-技术栈为中心"><a href="#以-C-技术栈为中心" class="headerlink" title="以 C# 技术栈为中心"></a>以 C# 技术栈为中心</h1><p>C# 是工控行业的主力语言，桌面程序为主，Windows 平台，开发容易且效率高。我们的主要精力点不应该局限于语言，而是以语言为工具载体展开的知识体系。行业内的另一大开发语言是 C++，之前用 MFC，现在应该是 Qt。<em>自己不要花精力刻意去学习Qt</em>，不要把时间和精力分散了，集中精力把 C# 技术栈深入一下。业务方面的体力活部分要做到很熟练，这样效率才能高；现在用的是 Winform 开发界面，其实可以学习一下 WPF，也可以了解下 Web 方面的知识。软件的架构设计，开发模式，面向对象的设计和分析(UML)等，也要有一定的能力。数据库方面的使用。</p><h1 id="以工业视觉为技术核心"><a href="#以工业视觉为技术核心" class="headerlink" title="以工业视觉为技术核心"></a>以工业视觉为技术核心</h1><p>我觉得工控控制的核心技术应该在工业视觉这里，这里的算法部分逃不过<code>C/C++</code>了，这里的<code>C/C++</code>语言部分应该是一个被动技能，不要刻意的深入到语言里面去，那是个复杂的无底洞，应该在学习过程中需要什么再去学习什么。这里我给自己定了两个方向。</p><ol><li>Halcon；// 行业能用的最多的算法包</li><li>OpenCV；// 开源，图像处理算法肯定要学的。</li><li>MIL；   // 公司用这个，但互联网上找不到太多资料，在工作中学习吧，不做主要。</li></ol><p>另外，有时间学下 Python。至于，什么深度学习，人工智能啥的，太高端，后面再说。</p><h1 id="加强英语和数学"><a href="#加强英语和数学" class="headerlink" title="加强英语和数学"></a>加强英语和数学</h1><p>英语和数学，这一点不用多说。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;理一下接下来的思路。首先，最重要和迫切的是加强提高业务层面“体力活”部分的熟练、效率。后面的整体方向：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以 C# 技术栈为中心；&lt;/li&gt;
&lt;li&gt;以工业视觉为技术核心；&lt;/li&gt;
&lt;li&gt;加强英语和数学。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Halcon｜创建图像窗口的几种方式</title>
    <link href="https://blog.huvjie.com/2020/12/04/201204N02/"/>
    <id>https://blog.huvjie.com/2020/12/04/201204N02/</id>
    <published>2020-12-04T12:29:47.000Z</published>
    <updated>2020-12-04T12:56:24.934Z</updated>
    
    <content type="html"><![CDATA[<p>Demo 代码如下：</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">read_image (Image, <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line">*打开图像窗口</span><br><span class="line">dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">get_image_size (Image, Width, Height)</span><br><span class="line"></span><br><span class="line">*打开具有给定最小和最大范围的新图形窗口，以便保留给定图像的纵横比。</span><br><span class="line">*WidthLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">500</span>,<span class="number">800</span>]。</span><br><span class="line">*HeightLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">400</span>,<span class="number">600</span>]。</span><br><span class="line">*如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</span><br><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">*打开具有给定最小和最大范围的新图形窗口，以便保留给定图像大小的宽高比</span><br><span class="line">*WidthLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">500</span>,<span class="number">800</span>]。</span><br><span class="line">*HeightLimit设置为<span class="number">-1</span>，则使用以下默认值：[<span class="number">400</span>,<span class="number">600</span>]。</span><br><span class="line">*如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</span><br><span class="line">dev_open_window_fit_size (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure><h1 id="read-image"><a href="#read-image" class="headerlink" title="read_image"></a>read_image</h1><p>这个是最原始的一种方式，看不清楚图像原本的比例关系，有可能拉伸。</p><h1 id="常规的打开窗口"><a href="#常规的打开窗口" class="headerlink" title="常规的打开窗口"></a>常规的打开窗口</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*打开图像窗口</span><br><span class="line">dev_open_window (0, 0, 512, 512, 'black', WindowHandle)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br><span class="line"></span><br><span class="line">get_image_size (Image, Width, Height)</span><br></pre></td></tr></table></figure><p><code>get_image_size</code>，获取图像的尺寸。</p><h1 id="适应性的打开窗口fit-image"><a href="#适应性的打开窗口fit-image" class="headerlink" title="适应性的打开窗口fit_image"></a>适应性的打开窗口fit_image</h1><ul><li>打开具有给定最小和最大范围的新图形窗口，以便保留给定图像的纵横比。  </li><li><code>WidthLimit</code>设置为-1，则使用以下默认值：[500,800]。  </li><li><code>HeightLimit</code>设置为-1，则使用以下默认值：[400,600]。  </li><li>如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dev_open_window_fit_image (Image, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle1)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure><h1 id="适应性的打开窗口fit-size"><a href="#适应性的打开窗口fit-size" class="headerlink" title="适应性的打开窗口fit_size"></a>适应性的打开窗口fit_size</h1><ul><li>打开具有给定最小和最大范围的新图形窗口，以便保留给定图像大小的宽高比</li><li><code>WidthLimit</code>设置为-1，则使用以下默认值：[500,800]。</li><li><code>HeightLimit</code>设置为-1，则使用以下默认值：[400,600]。</li><li>如果根据窗口宽高限制无法创建窗口，则忽略最小窗口大小的限制</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dev_open_window_fit_size (<span class="number">0</span>, <span class="number">0</span>, Width, Height, <span class="number">-1</span>, <span class="number">-1</span>, WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_set_window (WindowHandle2)</span><br><span class="line"></span><br><span class="line">dev_display (Image)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Demo 代码如下：&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="CV" scheme="https://blog.huvjie.com/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>winform｜ListView 控件简单使用</title>
    <link href="https://blog.huvjie.com/2020/12/04/201204N01/"/>
    <id>https://blog.huvjie.com/2020/12/04/201204N01/</id>
    <published>2020-12-04T02:22:00.000Z</published>
    <updated>2020-12-05T04:25:25.813Z</updated>
    
    <content type="html"><![CDATA[<p>ListView 控件简单使用。</p><p><img src="http://image.huvjie.com/201204N01_img01.jpg" alt="▲ 简单样式"></p><div style="font-size:13px;color:gray;text-align:center">▲ 简单样式</div><p><code>listView</code>控件名：<code>listView_SerailNum</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.listView_SerailNum.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">ColumnHeader cameraName = <span class="keyword">new</span> ColumnHeader();</span><br><span class="line">cameraName.Text = <span class="string">"相机"</span>;</span><br><span class="line">cameraName.Width = <span class="number">75</span>;</span><br><span class="line">cameraName.TextAlign = HorizontalAlignment.Center;</span><br><span class="line">ColumnHeader cameraSerialNum = <span class="keyword">new</span> ColumnHeader();</span><br><span class="line">cameraSerialNum.Text = <span class="string">"序列号"</span>;</span><br><span class="line">cameraSerialNum.Width = <span class="keyword">this</span>.listView_SerailNum.Width - cameraName.Width - <span class="number">4</span>;</span><br><span class="line">cameraSerialNum.TextAlign = HorizontalAlignment.Center;</span><br><span class="line"></span><br><span class="line">listView_SerailNum.Columns.AddRange(<span class="keyword">new</span> ColumnHeader[] &#123; cameraName, cameraSerialNum &#125;);</span><br><span class="line">listView_SerailNum.View = View.Details;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.MachineHardware != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">ListViewItem lvItem1 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.A.ToString(), <span class="keyword">this</span>.MachineHardware.CameraA.GetSerialNum() &#125;);</span><br><span class="line">ListViewItem lvItem2 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.B.ToString(), <span class="keyword">this</span>.MachineHardware.CameraB.GetSerialNum() &#125;);</span><br><span class="line">ListViewItem lvItem3 = <span class="keyword">new</span> ListViewItem(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"相机"</span> + CameraIndex.C.ToString(), <span class="keyword">this</span>.MachineHardware.CameraC.GetSerialNum() &#125;);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem1);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem2);</span><br><span class="line"><span class="keyword">this</span>.listView_SerailNum.Items.Add(lvItem3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.textBox1.Text = <span class="keyword">this</span>.MachineHardware.CameraA.GetSerialNum();</span><br><span class="line"><span class="keyword">this</span>.textBox2.Text = <span class="keyword">this</span>.MachineHardware.CameraB.GetSerialNum();</span><br><span class="line"><span class="keyword">this</span>.textBox3.Text = <span class="keyword">this</span>.MachineHardware.CameraC.GetSerialNum();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要获取第二列的值是这样的，下标<code>[1]</code>直接去获取：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> serialNum = <span class="keyword">this</span>.listView_SerailNum.FocusedItem.SubItems[<span class="number">1</span>].Text;</span><br></pre></td></tr></table></figure><p><code>FocusedItem</code>是选中项。 可以对它进行判断，<code>if (this.listView_SerailNum.FocusedItem == null) {}</code>，判断有没有选中的项。</p><p>控制表头显示与否的属性是：<code>HeaderStyle = None; // 不显示表头</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ListView 控件简单使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201204N01_img01.jpg&quot; alt=&quot;▲ 简单样式&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 简单样式&lt;/div&gt;

&lt;p&gt;&lt;code&gt;listView&lt;/code&gt;控件名：&lt;code&gt;listView_SerailNum&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>XElement类的一些属性和方法</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N03/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N03/</id>
    <published>2020-12-03T12:42:32.000Z</published>
    <updated>2020-12-04T12:11:20.078Z</updated>
    
    <content type="html"><![CDATA[<p>测试一下<code>XElement</code>类和<code>XDocument</code>的一些属性和方法。<strong>自己多注意看下重载。</strong></p><p><img src="http://image.huvjie.com/201203N03_img01.jpg" alt="▲ 查询 Xml 的方法"></p><div style="font-size:13px;color:gray;text-align:center">▲ 查询 Xml 的方法</div><p>一个<code>Test.xml</code>文档如下：</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Person&gt;</span><br><span class="line">  &lt;Name&gt;孙悟空&lt;/Name&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">500</span>&lt;/Age&gt;</span><br><span class="line">  &lt;Sex&gt;男&lt;/Sex&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黑&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">9</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黄&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">10</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Good&gt;<span class="number">100</span>&lt;/Good&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小辉&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">15</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">&lt;/Person&gt;</span><br></pre></td></tr></table></figure><h1 id="Root-属性"><a href="#Root-属性" class="headerlink" title="Root 属性"></a>Root 属性</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(rootElem.ToString());</span><br></pre></td></tr></table></figure><p>直接转字符串，是按原样输出。当然，没有前面那个属性了：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以直接按下面加载<code>Root</code>属性：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XElement rootElem = XElement.Load(<span class="string">"Test.xml"</span>);</span><br></pre></td></tr></table></figure><h1 id="Nodes-方法"><a href="#Nodes-方法" class="headerlink" title="Nodes 方法"></a>Nodes 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;<span class="keyword">object</span>&gt; allNodes = rootElem.Nodes();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>返回的是<code>object</code>类型的集合，都是下一级的子节点。</p><h1 id="Elements-方法"><a href="#Elements-方法" class="headerlink" title="Elements 方法"></a>Elements 方法</h1><p>还要重载：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> IEnumerable&lt;XElement&gt; <span class="title">Descendants</span>(<span class="params">XName name</span>)</span>;</span><br></pre></td></tr></table></figure></p><p>因为和上面是继承关系，所以差不多。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; allNodes = rootElem.Elements();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>返回的是<code>XElement</code>类型的集合，都是下一级的子节点。</p><p>看看重载，加一个<code>XName</code>之<code>Dog</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; allNodes = rootElem.Elements(<span class="string">"Dog"</span>);</span><br><span class="line"><span class="keyword">foreach</span> (XElement item <span class="keyword">in</span> allNodes)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见，能查询到所有的<code>Dog</code>节点。</p><h1 id="XElement-方法"><a href="#XElement-方法" class="headerlink" title="XElement 方法"></a>XElement 方法</h1><p>这个是返回第一个符号的节点。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElement = rootElem.Element(<span class="string">"Dog"</span>);</span><br><span class="line">Console.WriteLine(xElement.ToString());</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Descendsants-方法"><a href="#Descendsants-方法" class="headerlink" title="Descendsants 方法"></a>Descendsants 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = rootElem.Descendants();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看下效果，全部输出来了。节点，子节点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="DescendantNodes-方法"><a href="#DescendantNodes-方法" class="headerlink" title="DescendantNodes 方法"></a>DescendantNodes 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;<span class="keyword">object</span>&gt; xElements = rootElem.DescendantNodes();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果是这样的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">孙悟空</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">500</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line">男</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小黑</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">9</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小黄</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line">100</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">小辉</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line">15</span><br></pre></td></tr></table></figure><h1 id="DescendantsAndSelf-方法"><a href="#DescendantsAndSelf-方法" class="headerlink" title="DescendantsAndSelf 方法"></a>DescendantsAndSelf 方法</h1><p>注意看重载，还可以指定节点<code>XName</code>名称。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = rootElem.DescendantsAndSelf();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Ancestors-方法"><a href="#Ancestors-方法" class="headerlink" title="Ancestors 方法"></a>Ancestors 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = xElem.Ancestors();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="AncestorsAndSelf-方法"><a href="#AncestorsAndSelf-方法" class="headerlink" title="AncestorsAndSelf 方法"></a>AncestorsAndSelf 方法</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;XElement&gt; xElements = xElem.AncestorsAndSelf();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> item <span class="keyword">in</span> xElements)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(item.ToString());</span><br><span class="line">    Console.WriteLine();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>它包含了自己。</p><h1 id="Parent-属性"><a href="#Parent-属性" class="headerlink" title="Parent 属性"></a>Parent 属性</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">XDocument xDocTest = XDocument.Load(<span class="string">"Test.xml"</span>);</span><br><span class="line">XElement rootElem = xDocTest.Root;</span><br><span class="line"></span><br><span class="line">XElement xElem = rootElem.Element(<span class="string">"Dog"</span>).Element(<span class="string">"Name"</span>);</span><br><span class="line"></span><br><span class="line">XElement xElemParent = xElem.Parent;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(xElemParent.ToString());</span><br></pre></td></tr></table></figure><p>效果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：《C#图解教程》P383<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;测试一下&lt;code&gt;XElement&lt;/code&gt;类和&lt;code&gt;XDocument&lt;/code&gt;的一些属性和方法。&lt;strong&gt;自己多注意看下重载。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201203N03_img01.jpg&quot; alt=&quot;▲ 查询 Xml 的方法&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 查询 Xml 的方法&lt;/div&gt;


&lt;p&gt;一个&lt;code&gt;Test.xml&lt;/code&gt;文档如下：&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++｜带参数的构造函数</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N02/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N02/</id>
    <published>2020-12-03T02:22:00.000Z</published>
    <updated>2020-12-03T12:41:09.074Z</updated>
    
    <content type="html"><![CDATA[<p>基础语法而已。</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Demo()</span><br><span class="line">        &#123;</span><br><span class="line">            x = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的默认构造函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Demo(<span class="keyword">int</span> i)</span><br><span class="line">        &#123;</span><br><span class="line">            x = i;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的带一个参数的构造函数!!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ~Demo()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Demo 的析构函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">get_x</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">set_x</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            x = i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Rectangle()</span><br><span class="line">        &#123;</span><br><span class="line">            x = <span class="number">1000</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的默认构造函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Rectangle(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> k):x(i), width(j), length(k)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的带三个参数的构造函数!"</span> &lt;&lt;   <span class="string">"长方形的面积 b 为："</span> &lt;&lt; length.get_x() * width.get_x() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ~Rectangle()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"Rectangle 的默认析构函数!"</span> &lt;&lt; x &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">area</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> length.get_x() * width.get_x();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        Demo length;</span><br><span class="line">        Demo width;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Rectangle <span class="title">rec</span><span class="params">(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n=========\n"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    Rectangle *rec1 = <span class="keyword">new</span> Rectangle(<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>);</span><br><span class="line">    <span class="keyword">delete</span> rec1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Demo 的带一个参数的构造函数!!300</span><br><span class="line">Demo 的带一个参数的构造函数!!200</span><br><span class="line">Rectangle 的带三个参数的构造函数!长方形的面积 b 为：60000</span><br><span class="line"></span><br><span class="line">=========</span><br><span class="line"></span><br><span class="line">Demo 的带一个参数的构造函数!!300</span><br><span class="line">Demo 的带一个参数的构造函数!!200</span><br><span class="line">Rectangle 的带三个参数的构造函数!长方形的面积 b 为：60000</span><br><span class="line">Rectangle 的默认析构函数!100</span><br><span class="line">Demo 的析构函数!200</span><br><span class="line">Demo 的析构函数!300</span><br><span class="line">Rectangle 的默认析构函数!100</span><br><span class="line">Demo 的析构函数!200</span><br><span class="line">Demo 的析构函数!300</span><br></pre></td></tr></table></figure><div style="font-size:12px"><br>参考：《范磊：C++》P153<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基础语法而已。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C/C+" scheme="https://blog.huvjie.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜Conditional特性的简单使用</title>
    <link href="https://blog.huvjie.com/2020/12/03/201203N01/"/>
    <id>https://blog.huvjie.com/2020/12/03/201203N01/</id>
    <published>2020-12-03T02:22:00.000Z</published>
    <updated>2020-12-03T12:40:52.880Z</updated>
    
    <content type="html"><![CDATA[<p>可以用来做条件编译。</p><p>开始定义<code>#define DEBUG</code>，然后在方法前面使用特性<code>[Conditional(&quot;DEBUG&quot;)]</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG   // 这里 <span class="meta-keyword">define</span> 了 DEBUG。</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Myclass</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Conditional(<span class="meta-string">"DEBUG"</span>)</span>] <span class="comment">// 声明特性</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Message</span>(<span class="params"><span class="keyword">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Function 1."</span>);</span><br><span class="line">        function2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Function 2."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">"In Main function."</span>);</span><br><span class="line">        function1();</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In Main function</span><br><span class="line">In Function 1</span><br><span class="line">In Function 2</span><br></pre></td></tr></table></figure><hr><div style="font-size:12px"><br>参考：<a href="https://www.runoob.com/csharp/csharp-attribute.html" target="_blank" rel="noopener">https://www.runoob.com/csharp/csharp-attribute.html</a><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以用来做条件编译。&lt;/p&gt;
&lt;p&gt;开始定义&lt;code&gt;#define DEBUG&lt;/code&gt;，然后在方法前面使用特性&lt;code&gt;[Conditional(&amp;quot;DEBUG&amp;quot;)]&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Halcon｜基础语法</title>
    <link href="https://blog.huvjie.com/2020/12/02/201202N01/"/>
    <id>https://blog.huvjie.com/2020/12/02/201202N01/</id>
    <published>2020-12-02T13:21:37.000Z</published>
    <updated>2020-12-02T14:00:09.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><p>等　号:        <code>:=</code>  </p><p>不等号:      <code>#</code>  </p><p>注释符:      <code>*</code>  </p><p>字符串赋值:  <code>str:=’halcon’</code>  </p><p>等于比较符:  <code>if(X=10)</code>  </p><p>与:          <code>if(A&gt;1  and A&lt;30)</code>  </p><p>或:             <code>if(A&gt;1  or  A&lt;30)</code>  </p><p>求反:        <code>if(not(A=10))</code>  </p><p>For 循环：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> I := <span class="number">0</span> to NumBalls - <span class="number">1</span> by <span class="number">1</span></span><br><span class="line"></span><br><span class="line">endfor</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">While 循环：</span><br><span class="line"></span><br><span class="line">```C</span><br><span class="line"><span class="keyword">while</span> (x == <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">Endwhile</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">异常获取:</span><br><span class="line"></span><br><span class="line">```C++</span><br><span class="line">Try</span><br><span class="line"></span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line"></span><br><span class="line">Endtry</span><br><span class="line">```     </span><br><span class="line"></span><br><span class="line">Switch多分支:</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="keyword">switch</span> (Index)</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">endswitch</span><br></pre></td></tr></table></figure><h1 id="数组的一些操作"><a href="#数组的一些操作" class="headerlink" title="数组的一些操作"></a>数组的一些操作</h1><ul><li>将一个Tuple数组赋值给变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1 := [<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br></pre></td></tr></table></figure><ul><li>给Tuple数组元素赋值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1[<span class="number">1</span>] := <span class="number">2</span></span><br></pre></td></tr></table></figure><p>结果变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]  <span class="comment">// 可见第二个数从 0 变成了 2</span></span><br></pre></td></tr></table></figure><ul><li>批量改变数组元素的值</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple1[1,3,5] := 'abc'</span><br></pre></td></tr></table></figure><p>结果变为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 'abc', 3, 'abc', 5, 'abc', 7, 8, 9] // 下标 1， 3， 5 对应的改成了 `abc`</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值, 例如，0到10连续数值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple3 := [<span class="number">0</span>:<span class="number">10</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值,其值为3到20连续数值,步长为2。 // 中间的步长为1就成连续的了。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple4 := [<span class="number">3</span>:<span class="number">2</span>:<span class="number">20</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>]</span><br></pre></td></tr></table></figure><ul><li>批量给Tuple数组赋值,其值为100到-100连续数值,步长为-10</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tuple5 := [<span class="number">100</span>:<span class="number">-10</span>:<span class="number">-100</span>]</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">100</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">60</span>, <span class="number">50</span>, <span class="number">40</span>, <span class="number">30</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">-10</span>, <span class="number">-20</span>, <span class="number">-30</span>, <span class="number">-40</span>, <span class="number">-50</span>, <span class="number">-60</span>, <span class="number">-70</span>, <span class="number">-80</span>, <span class="number">-90</span>, <span class="number">-100</span>]</span><br></pre></td></tr></table></figure><ul><li>对两个Tuple数组进行合并操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TupleInt1 := [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>]</span><br><span class="line">TupleInt2 := [<span class="number">10</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">tuple_union (TupleInt1, TupleInt2, UnionInt)</span><br></pre></td></tr></table></figure><p>变量<code>UnionInt</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><ul><li>对两个Tuple数组进行交集操作</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TupleInt3 := [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">1</span>]</span><br><span class="line">TupleInt4 := [<span class="number">10</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br><span class="line">tuple_intersection (TupleInt3, TupleInt4, IntersectionInt)</span><br></pre></td></tr></table></figure><p>变量<code>IntersectionInt</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><ul><li>对Tuple数组元素进行替换</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OriginalTuple := [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_replace (OriginalTuple, [<span class="number">0</span>,<span class="number">1</span>], [<span class="string">'x'</span>,<span class="string">'y'</span>], Replaced)</span><br></pre></td></tr></table></figure><p>变量<code>Replaced</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'x'</span>, <span class="string">'y'</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure><ul><li>向Tuple数组插入数值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OriginalTuple := [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">tuple_insert (OriginalTuple, <span class="number">3</span>, <span class="string">'x'</span>, InsertSingleValueA)</span><br></pre></td></tr></table></figure><p>变量<code>InsertSingleValueA</code>变为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="string">'x'</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  <span class="comment">// 在索引 3 位置插入了元素 `x`</span></span><br></pre></td></tr></table></figure><h1 id="字符数字格式化"><a href="#字符数字格式化" class="headerlink" title="字符数字格式化"></a>字符数字格式化</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">i1 := 123$'#o'  //8进制，0为前缀</span><br><span class="line">i2 := 123$'#x'  //16进制，0x为前缀，7b为赋值</span><br><span class="line">i3 := 123$'#X'  //16进制，0x为前缀，7B为赋值，7b与7B是一样的</span><br><span class="line">i4 := 123$'#f'  //double型，默认保留小数点后六位.</span><br><span class="line">i5 := 123$'#g'  //使数字始终保持六位，不足补零.</span><br><span class="line">i6 := 123$'#G'  //使数字始终保持六位，不足补零.</span><br><span class="line">i7 := 123$'#e'  //转换成科学计数</span><br><span class="line">i8 := 123$'#E'  //转换成科学计数</span><br><span class="line"></span><br><span class="line">*****************整数*****************</span><br><span class="line">d1 := <span class="number">123</span>$<span class="string">'6'</span>   <span class="comment">//小于六位时，文本右对齐，大于不影响</span></span><br><span class="line">d2 := 123$'-6'  //小于六位时，文本左对齐，大于不影响</span><br><span class="line">d3 := 123$'.6'  //小于六位时，在左边补零，大于不影响</span><br><span class="line">d4 := 12345$'10.5'  //小于10位时，文本右对齐；小于5位则在左边补零，大于不影响</span><br><span class="line"></span><br><span class="line">*****************文本*****************</span><br><span class="line"></span><br><span class="line">s1 := 'Hugo'$'10'      //文本右对齐</span><br><span class="line">s2 := 'Hugo'$'-10'     //文本左对齐</span><br></pre></td></tr></table></figure><p>对应的变量结果：</p><p><img src="http://image.huvjie.com/201202N01_img01.jpg" alt="▲ 变量结果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 变量结果</div><p><hr><br><span style="color:gray;font-size:12px"><br>参考： </span></p><p>互联网。<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础语法&quot;&gt;&lt;a href=&quot;#基础语法&quot; class=&quot;headerlink&quot; title=&quot;基础语法&quot;&gt;&lt;/a&gt;基础语法&lt;/h1&gt;&lt;p&gt;等　号:        &lt;code&gt;:=&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;不等号:      &lt;code&gt;#&lt;/code&gt; 
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="CV" scheme="https://blog.huvjie.com/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>C#｜GDI绘制折线图</title>
    <link href="https://blog.huvjie.com/2020/12/01/201201N01/"/>
    <id>https://blog.huvjie.com/2020/12/01/201201N01/</id>
    <published>2020-12-01T02:22:00.000Z</published>
    <updated>2020-12-02T12:36:20.236Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://image.huvjie.com/201201N01_img01.jpg" alt="▲ 效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 效果</div><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DrawEx</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] month = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"一月"</span>, <span class="string">"二月"</span>, <span class="string">"三月"</span>, <span class="string">"四月"</span>, <span class="string">"五月"</span>, <span class="string">"六月"</span>, <span class="string">"七月"</span>, <span class="string">"八月"</span>, <span class="string">"九月"</span>, <span class="string">"十月"</span>, <span class="string">"十一月"</span>, <span class="string">"十二月"</span> &#125;;</span><br><span class="line">            <span class="keyword">float</span>[] data = <span class="keyword">new</span> <span class="keyword">float</span>[] &#123; <span class="number">20.5F</span>, <span class="number">60</span>, <span class="number">10.8F</span>, <span class="number">15.6F</span>, <span class="number">30</span>, <span class="number">110.9F</span>, <span class="number">96.3F</span>, <span class="number">30.7F</span>, <span class="number">70</span>, <span class="number">50.4F</span>, <span class="number">30.8F</span>, <span class="number">20</span> &#125;;</span><br><span class="line"></span><br><span class="line">            Bitmap bMap = <span class="keyword">new</span> Bitmap(<span class="number">500</span>, <span class="number">500</span>);</span><br><span class="line">            Graphics gph = Graphics.FromImage(bMap);</span><br><span class="line">            gph.Clear(Color.Gray);</span><br><span class="line">            PointF cPt = <span class="keyword">new</span> PointF(<span class="number">40</span>, <span class="number">460</span>);</span><br><span class="line">            PointF xAxisEndPoint = <span class="keyword">new</span> PointF(cPt.X + <span class="number">420</span>, cPt.Y);</span><br><span class="line">            PointF yAxisEndPoint = <span class="keyword">new</span> PointF(cPt.X, cPt.Y - <span class="number">420</span>);</span><br><span class="line">            PointF[] xPt = <span class="keyword">new</span> PointF[<span class="number">3</span>] &#123; <span class="keyword">new</span> PointF(xAxisEndPoint.X + <span class="number">15</span>, xAxisEndPoint.Y), <span class="keyword">new</span> PointF(xAxisEndPoint.X, xAxisEndPoint.Y - <span class="number">5</span>), <span class="keyword">new</span> PointF(xAxisEndPoint.X, xAxisEndPoint.Y + <span class="number">5</span>) &#125;;</span><br><span class="line">            PointF[] yPt = <span class="keyword">new</span> PointF[<span class="number">3</span>] &#123; <span class="keyword">new</span> PointF(yAxisEndPoint.X, yAxisEndPoint.Y - <span class="number">15</span>), <span class="keyword">new</span> PointF(yAxisEndPoint.X - <span class="number">3</span>, yAxisEndPoint.Y), <span class="keyword">new</span> PointF(yAxisEndPoint.X + <span class="number">3</span>, yAxisEndPoint.Y) &#125;;</span><br><span class="line"></span><br><span class="line">            gph.DrawString(<span class="string">"绘制折线图练习"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">14</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">150</span>, cPt.Y - <span class="number">450</span>));</span><br><span class="line">            gph.DrawLine(Pens.Black, cPt.X, cPt.Y, cPt.X + <span class="number">420</span>, cPt.Y);</span><br><span class="line">            gph.DrawLine(Pens.Black, cPt, <span class="keyword">new</span> PointF(cPt.X, cPt.Y - <span class="number">420</span>));</span><br><span class="line">            gph.DrawPolygon(Pens.Black, xPt); <span class="comment">// 画轴三角形</span></span><br><span class="line">            gph.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.Black), xPt);</span><br><span class="line">            gph.DrawPolygon(Pens.Black, yPt); <span class="comment">// 画轴三角形</span></span><br><span class="line">            gph.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.Black), yPt);</span><br><span class="line"></span><br><span class="line">            gph.DrawString(<span class="string">"单位(万)"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(yPt[<span class="number">0</span>].X - <span class="number">26</span>, yPt[<span class="number">0</span>].Y - <span class="number">18</span>));</span><br><span class="line">            gph.DrawString(<span class="string">"月份"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(xPt[<span class="number">0</span>].X - <span class="number">26</span>, xPt[<span class="number">0</span>].Y + <span class="number">18</span>));</span><br><span class="line"></span><br><span class="line">            PointF point1;</span><br><span class="line">            PointF point2 = cPt;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= month.Length; i++) &#123;</span><br><span class="line">                <span class="comment">// 画Y轴刻度和标签</span></span><br><span class="line">                gph.DrawLine(Pens.Black, cPt.X, cPt.Y - i * <span class="number">35</span>, cPt.X - <span class="number">5</span>, cPt.Y - i * <span class="number">35</span>);</span><br><span class="line">                gph.DrawString((i * <span class="number">10</span>).ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">12</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X - <span class="number">30</span>, cPt.Y - i * <span class="number">35</span> - <span class="number">6</span>));</span><br><span class="line">                <span class="comment">// 画X轴的刻度和标签</span></span><br><span class="line">                gph.DrawLine(Pens.Black, cPt.X + i * <span class="number">32</span>, cPt.Y, cPt.X + i * <span class="number">32</span>, cPt.Y + <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">11</span>)</span><br><span class="line">                    gph.DrawString(month[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">32</span> * i - <span class="number">20</span>, cPt.Y + <span class="number">15</span>));</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    gph.DrawString(month[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">8</span>), Brushes.Black, <span class="keyword">new</span> PointF(cPt.X + <span class="number">32</span> * i - <span class="number">12</span>, cPt.Y + <span class="number">15</span>));</span><br><span class="line"></span><br><span class="line">                point1 = <span class="keyword">new</span> PointF(cPt.X + i * <span class="number">32</span>, cPt.Y - data[i - <span class="number">1</span>] * <span class="number">3.5f</span>);</span><br><span class="line">                <span class="comment">// 画折线</span></span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    gph.DrawLine(Pens.Red, point1, point2);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//画没点的数值标签</span></span><br><span class="line">                gph.DrawString(data[i - <span class="number">1</span>].ToString(), <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">11</span>), Brushes.Blue, <span class="keyword">new</span> PointF(point1.X + <span class="number">1</span>, point1.Y + <span class="number">3</span>));</span><br><span class="line">                <span class="comment">// 数值原点</span></span><br><span class="line">                gph.FillEllipse(<span class="keyword">new</span> SolidBrush(Color.Black), point1.X, point1.Y, <span class="number">5</span>, <span class="number">5</span>);</span><br><span class="line">                point2 = point1;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            pictureBox1.Image = bMap;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pictureBox1</code>的<code>Anchor</code>属性设置了：<code>Top，Bottom，Left，Right</code>。整体思路是，先画在一个图片上面，然后再把图片加载到<code>pictureBox1</code>里面去，这样不会动下窗口就消失。</p><p><strong>主要用了<code>Graphics</code>类里面的<code>DrawString</code>，<code>DrawLine</code>，<code>DrawPolygon</code>，<code>FillPolygon</code>等函数。</strong></p><div style="font-size:12px">参考：<br>《C#入门到精通》<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201201N01_img01.jpg&quot; alt=&quot;▲ 效果&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 效果&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜更改序列化节点Name名及XElement返序列化</title>
    <link href="https://blog.huvjie.com/2020/11/28/201128N01/"/>
    <id>https://blog.huvjie.com/2020/11/28/201128N01/</id>
    <published>2020-11-28T03:10:04.000Z</published>
    <updated>2020-11-28T03:22:48.583Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇<a href="https://blog.huvjie.com/2020/11/28/201128N03/">https://blog.huvjie.com/2020/11/28/201128N03/</a>可以在原有的 xml 文档里添加一个序列化对象的元素节点。接的的 Name 名字默认的是对象类型名，如何更改这个名字呢？另外将一个 XElement 节点返序列化成一个对象。</p><ol><li>直接对 XElement 的 Name 属性赋值就能改名。</li><li>将一个 XElement 节点返序列化，和从文档加载却别不大，注意将更改的 Name 属性名改回去，不然加载出错。</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="XmlSerializerHelper"><a href="#XmlSerializerHelper" class="headerlink" title="XmlSerializerHelper"></a>XmlSerializerHelper</h2><p>增加了一个，将 XElement节点返序列化成一个对象。这个<code>XmlSerializerHelper</code>序列化返序列化类应该是比较完整了。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XElement <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line"></span><br><span class="line">                XDocument objElem = XDocument.Load(ms);</span><br><span class="line">                XElement rootElem = objElem.Root;</span><br><span class="line">                <span class="comment">// 可以直接加载</span></span><br><span class="line">                <span class="comment">// XElement rootElem = XElement.Load(ms);</span></span><br><span class="line">                <span class="keyword">return</span> rootElem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(<span class="keyword">string</span> xmlFile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(T));</span><br><span class="line">                <span class="keyword">return</span> (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(XElement xElem)</span><br><span class="line">    &#123;</span><br><span class="line">        xElem.Name = <span class="keyword">typeof</span>(T).Name; <span class="comment">// 如果名称不对，出错。防止改了节点名的情况</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = xElem.ToString(); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(<span class="keyword">typeof</span>(T));</span><br><span class="line">                <span class="keyword">return</span> (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返序列化一下</span></span><br><span class="line">        Person dog_dd = xmlSerializerHelper.XmlDeserial&lt;Person&gt;(<span class="string">"Person.xml"</span>);</span><br><span class="line">        Console.WriteLine(dog_dd.Name);</span><br><span class="line">        Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加一个 Dog 类</span></span><br><span class="line">        XElement rootElem = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        rootElem.Add(xmlSerializerHelper.XmlSerial(<span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小辉"</span>, Age = <span class="number">15</span> &#125;));</span><br><span class="line">        rootElem.Save(<span class="string">"Person.xml"</span>);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">/***********下面改下Name属性测试**********/</span></span><br><span class="line"></span><br><span class="line">        XElement rootElement = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        Dog newDog = <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"狗蛋"</span>, Age = <span class="number">100</span> &#125;;</span><br><span class="line">        XElement newDogElem = xmlSerializerHelper.XmlSerial(newDog);</span><br><span class="line">        newDogElem.Name = <span class="string">"GouDan"</span>;  <span class="comment">// 直接改名字</span></span><br><span class="line">        rootElement.Add(newDogElem);</span><br><span class="line"></span><br><span class="line">        XElement gouDan = rootElement.Element(<span class="string">"GouDan"</span>); <span class="comment">// 根目录加载出来</span></span><br><span class="line">        rootElement.Save(<span class="string">"newPerson.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Dog dog = xmlSerializerHelper.XmlDeserial&lt;Dog&gt;(gouDan);</span><br><span class="line">        Console.WriteLine(<span class="string">"Name = &#123;0&#125;\nAge = &#123;1&#125;"</span>, dog.Name, dog.Age);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">孙悟空</span><br><span class="line">Name = 狗蛋</span><br><span class="line">Age = 100</span><br></pre></td></tr></table></figure><p>生成的  XMl  文档：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小辉<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>15<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">GouDan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>狗蛋<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">GouDan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见，上面最后添加的<code>Dog</code>节点改成了<code>GouDan</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇&lt;a href=&quot;https://blog.huvjie.com/2020/11/28/201128N03/&quot;&gt;https://blog.huvjie.com/2020/11/28/201128N03/&lt;/a&gt;可以在原有的 xml 文档里添加一个序列化对象的元素节点。接的的 Name 名字默认的是对象类型名，如何更改这个名字呢？另外将一个 XElement 节点返序列化成一个对象。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接对 XElement 的 Name 属性赋值就能改名。&lt;/li&gt;
&lt;li&gt;将一个 XElement 节点返序列化，和从文档加载却别不大，注意将更改的 Name 属性名改回去，不然加载出错。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜xml 在原有文档增加一个序列化类</title>
    <link href="https://blog.huvjie.com/2020/11/28/201128N03/"/>
    <id>https://blog.huvjie.com/2020/11/28/201128N03/</id>
    <published>2020-11-27T16:22:24.000Z</published>
    <updated>2020-11-27T16:28:12.371Z</updated>
    
    <content type="html"><![CDATA[<p>在原有的<code>xml</code>基础上添加一个序列化类。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>XmlSerializerHelper</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> XElement <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line">                </span><br><span class="line">                XDocument objElem = XDocument.Load(ms);</span><br><span class="line">                XElement rootElem = objElem.Root;</span><br><span class="line">                <span class="comment">// 可以直接加载</span></span><br><span class="line">                <span class="comment">// XElement rootElem = XElement.Load(ms);</span></span><br><span class="line">                <span class="keyword">return</span> rootElem;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="keyword">public</span> T XmlDeserial&lt;T&gt;(T obj, <span class="keyword">string</span> xmlFile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                obj = (T)xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加一个 Dog 类</span></span><br><span class="line">        XElement rootElem = XElement.Load(<span class="string">"Person.xml"</span>);</span><br><span class="line">        rootElem.Add(xmlSerializerHelper.XmlSerial(<span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小辉"</span>, Age = <span class="number">15</span> &#125;));</span><br><span class="line">        rootElem.Save(<span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Person&gt;</span><br><span class="line">  &lt;Name&gt;孙悟空&lt;/Name&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">500</span>&lt;/Age&gt;</span><br><span class="line">  &lt;Sex&gt;男&lt;/Sex&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黑&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">9</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小黄&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">10</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">  &lt;Good&gt;<span class="number">100</span>&lt;/Good&gt;</span><br><span class="line">  &lt;Dog&gt;</span><br><span class="line">    &lt;Name&gt;小辉&lt;/Name&gt;</span><br><span class="line">    &lt;Age&gt;<span class="number">15</span>&lt;/Age&gt;</span><br><span class="line">  &lt;/Dog&gt;</span><br><span class="line">&lt;/Person&gt;</span><br></pre></td></tr></table></figure><p><strong>看后面添加了一个 Dog 小辉。</strong></p><p>注意两种添加根元素的方式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ms.Position = <span class="number">0</span>;  <span class="comment">// 把流的位置弄到最前面，不然找不到根元素</span></span><br><span class="line"></span><br><span class="line">XDocument objElem = XDocument.Load(ms);</span><br><span class="line">XElement rootElem = objElem.Root;</span><br><span class="line"><span class="comment">// 可以直接加载,找到根元素</span></span><br><span class="line">XElement rootElem = XElement.Load(ms);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在原有的&lt;code&gt;xml&lt;/code&gt;基础上添加一个序列化类。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Xml 简单序列化和返序列化</title>
    <link href="https://blog.huvjie.com/2020/11/27/201127N02/"/>
    <id>https://blog.huvjie.com/2020/11/27/201127N02/</id>
    <published>2020-11-27T02:22:00.000Z</published>
    <updated>2020-11-27T14:24:32.195Z</updated>
    
    <content type="html"><![CDATA[<p><code>结构体</code>和<code>类</code>都能进行 xml 的序列化和反序列化。</p><a id="more"></a><p>必须包含的命名空间：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Serialization;</span><br></pre></td></tr></table></figure><h1 id="基本的序列化"><a href="#基本的序列化" class="headerlink" title="基本的序列化"></a>基本的序列化</h1><p>这里以<code>结构体</code>类型为例 ：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> Student</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="keyword">string</span> name, <span class="keyword">int</span> age</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Name = name;</span><br><span class="line">        <span class="keyword">this</span>.Age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里访问类型必须要<code>public</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">XmlSerializerHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">XmlSerial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream ms = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">        &#123;</span><br><span class="line">            XmlWriterSettings setting = <span class="keyword">new</span> XmlWriterSettings() &#123;</span><br><span class="line">                Encoding = <span class="keyword">new</span> UTF8Encoding(<span class="literal">false</span>),</span><br><span class="line">                Indent = <span class="literal">true</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">using</span> (XmlWriter writer = XmlWriter.Create(ms, setting))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                <span class="comment">// 去掉命名空间</span></span><br><span class="line">                XmlSerializerNamespaces ns = <span class="keyword">new</span> XmlSerializerNamespaces();</span><br><span class="line">                ns.Add(<span class="string">""</span>, <span class="string">""</span>); <span class="comment">// 命名空间赋值为空</span></span><br><span class="line">                xmlSerializer.Serialize(writer, obj, ns);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 用StreamWriter </span></span><br><span class="line">                <span class="keyword">string</span> xmlContent = Encoding.UTF8.GetString(ms.ToArray()); <span class="comment">// 转成字符转</span></span><br><span class="line">                StreamWriter streamWriter = <span class="keyword">new</span> StreamWriter(xmlFile);</span><br><span class="line">                streamWriter.Write(xmlContent);</span><br><span class="line">                streamWriter.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返序列化</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">object</span> <span class="title">XmlDeserial</span>(<span class="params"><span class="keyword">object</span> obj, <span class="keyword">string</span> xmlFile</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// 用 MemoryStream</span></span><br><span class="line">        <span class="keyword">string</span> xmlString = File.ReadAllText(xmlFile); <span class="comment">// xml 内容提取出来</span></span><br><span class="line">        <span class="keyword">using</span> (MemoryStream MS = <span class="keyword">new</span> MemoryStream(Encoding.UTF8.GetBytes(xmlString)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">using</span> (XmlReader xr = XmlReader.Create(MS))</span><br><span class="line">            &#123;</span><br><span class="line">                XmlSerializer xmlSerializer = <span class="keyword">new</span> XmlSerializer(obj.GetType());</span><br><span class="line">                obj = xmlSerializer.Deserialize(xr);  <span class="comment">// 不要误写为 MS 流，有这个重载不会报错。但运行有错。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;          </span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() &#123; Name = <span class="string">"毛泽东"</span>, Age = <span class="number">18</span> &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出，没什么问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>毛泽东<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="简单反序列化"><a href="#简单反序列化" class="headerlink" title="简单反序列化"></a>简单反序列化</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line"></span><br><span class="line">        Student stu;</span><br><span class="line">        stu = (Student)xmlSerializerHelper.XmlDeserial(<span class="keyword">new</span> Student(), <span class="string">"Student.xml"</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"Name = &#123;0&#125;\nAge = &#123;1&#125;"</span>, stu.Name, stu.Age);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出，没什么问题：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name = 毛泽东</span><br><span class="line">Age = 18</span><br></pre></td></tr></table></figure><h1 id="测试一下嵌套序列化"><a href="#测试一下嵌套序列化" class="headerlink" title="测试一下嵌套序列化"></a>测试一下嵌套序列化</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> Student</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OtherInfo OtherInfo;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> OtherInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Birth;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Alisa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        OtherInfo otherInfo = <span class="keyword">new</span> OtherInfo() &#123; Birth = <span class="number">1893</span>, Alisa = <span class="string">"毛润之"</span>&#125;;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() &#123; Name = <span class="string">"毛泽东"</span>, Age = <span class="number">18</span>, OtherInfo = otherInfo &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>毛泽东<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">OtherInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Birth</span>&gt;</span>1893<span class="tag">&lt;/<span class="name">Birth</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Alisa</span>&gt;</span>毛润之<span class="tag">&lt;/<span class="name">Alisa</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">OtherInfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="测试下如果引用变量为null的情况"><a href="#测试下如果引用变量为null的情况" class="headerlink" title="测试下如果引用变量为null的情况"></a>测试下如果引用变量为null的情况</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student() ;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(student, <span class="string">"Student.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;Student&gt;</span><br><span class="line">  &lt;Age&gt;<span class="number">0</span>&lt;/Age&gt;</span><br><span class="line">  &lt;OtherInfo&gt;</span><br><span class="line">    &lt;Birth&gt;<span class="number">0</span>&lt;/Birth&gt;</span><br><span class="line">  &lt;/OtherInfo&gt;</span><br><span class="line">&lt;/Student&gt;</span><br></pre></td></tr></table></figure><p><strong>可见，null值不进行序列化，int类型会默认为0，所以存在。</strong></p><p>把<code>struct</code>改成<code>class</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> OtherInfo OtherInfo;        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OtherInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Birth;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Alisa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>0<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>class</code>为引用类型，为 <code>null</code> 没输出了。</p><h1 id="数组的序列化"><a href="#数组的序列化" class="headerlink" title="数组的序列化"></a>数组的序列化</h1><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Sex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">XmlElement(<span class="meta-string">"Dog"</span>)</span>] <span class="comment">// 不要“再包一层”</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dog&gt; Dog &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Good &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"100"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> valuePrivate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Dog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        List&lt;Dog&gt; dogs = <span class="keyword">new</span> List&lt;Dog&gt; &#123;</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黑"</span>, Age = <span class="number">9</span> &#125;,</span><br><span class="line">            <span class="keyword">new</span> Dog() &#123; Name = <span class="string">"小黄"</span>, Age = <span class="number">10</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Person person = <span class="keyword">new</span> Person() &#123;</span><br><span class="line">            Name = <span class="string">"孙悟空"</span>,</span><br><span class="line">            Age = <span class="number">500</span>,</span><br><span class="line">            Sex = <span class="string">"男"</span>,</span><br><span class="line">            Dog = dogs</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        XmlSerializerHelper xmlSerializerHelper = <span class="keyword">new</span> XmlSerializerHelper();</span><br><span class="line">        xmlSerializerHelper.XmlSerial(person, <span class="string">"Person.xml"</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见：</p><ol><li><strong>数组如果不要再包一层，<code>[XmlElement(&quot;Dog&quot;)] // 不要“再包一层”</code>显示的命名个节点。不然输出如下：</strong></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Person</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Name</span>&gt;</span>孙悟空<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Age</span>&gt;</span>500<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黑<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Age</span>&gt;</span>9<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Dog</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>小黄<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Age</span>&gt;</span>10<span class="tag">&lt;/<span class="name">Age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Dog</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Good</span>&gt;</span>100<span class="tag">&lt;/<span class="name">Good</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Person</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>Dog</code> 数组外面包了一层<code>&lt;Dog&gt;</code>。</p><ol start="2"><li><code>private string valuePrivate { get; set; } = &quot;0&quot;;</code>私有成员没有被序列化。</li></ol><hr><div style="font-size:12px">参考：<br><a href="https://www.cnblogs.com/guogangj/p/7489218.html" target="_blank" rel="noopener">https://www.cnblogs.com/guogangj/p/7489218.html</a><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;结构体&lt;/code&gt;和&lt;code&gt;类&lt;/code&gt;都能进行 xml 的序列化和反序列化。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>接下来一段时间内的自我构建的步骤</title>
    <link href="https://blog.huvjie.com/2020/11/27/201127N01/"/>
    <id>https://blog.huvjie.com/2020/11/27/201127N01/</id>
    <published>2020-11-27T02:22:00.000Z</published>
    <updated>2020-11-27T12:41:10.491Z</updated>
    
    <content type="html"><![CDATA[<p>每个人关注的都是自己的利益，切勿把希望寄托于他人身上，万事得靠自己。</p><a id="more"></a><p>现在的人，大家都在说战略，说战术。我也来说下接下来自己的战术层面，如何自我构建到行业内一般水平。</p><p>对现在开发的这个机型：</p><p><strong>一、先用现成的 DLL 自己全部实现一遍软件。</strong></p><p><strong>二、自己用源码实现一遍软件。</strong></p><p><strong>三、整理好自己的类库。</strong></p><p>把这三个步骤搞下来，应该能出师了。构建起了自己的知识体系。<strong>天下无易事，无非熟能生巧罢了。</strong>方向定下来，坚持下去，反复折腾。</p><p>当软件层面达到一般水平后，再提高一把硬件到一般水平。这样应该可以算完全出师了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每个人关注的都是自己的利益，切勿把希望寄托于他人身上，万事得靠自己。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://blog.huvjie.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://blog.huvjie.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C#｜匿名类初识</title>
    <link href="https://blog.huvjie.com/2020/11/26/201126N02/"/>
    <id>https://blog.huvjie.com/2020/11/26/201126N02/</id>
    <published>2020-11-26T02:22:00.000Z</published>
    <updated>2020-11-26T12:11:57.745Z</updated>
    
    <content type="html"><![CDATA[<p>之前的这篇<a href="https://blog.huvjie.com/2020/06/01/200601N01/">https://blog.huvjie.com/2020/06/01/200601N01/</a>，是不是也是匿名类？对这个知识点还没有什么认识，初识一下。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Student = <span class="keyword">new</span> &#123; Name = <span class="string">"XiaoFang"</span>, Age = <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">"Name:&#123;0&#125; Age:&#123;1&#125;"</span>, Student.Name, Student.Age);</span><br><span class="line"></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Name:XiaoFang Age:10</span><br></pre></td></tr></table></figure><p>另外，<code>投影初始化语句</code>可以查看《图解教程》P355页。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前的这篇&lt;a href=&quot;https://blog.huvjie.com/2020/06/01/200601N01/&quot;&gt;https://blog.huvjie.com/2020/06/01/200601N01/&lt;/a&gt;，是不是也是匿名类？对这个知识点还没有什么认识，初识一下。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# 好像没有类似 C++ 的 const 形参</title>
    <link href="https://blog.huvjie.com/2020/11/26/201126N01/"/>
    <id>https://blog.huvjie.com/2020/11/26/201126N01/</id>
    <published>2020-11-26T02:22:00.000Z</published>
    <updated>2020-11-26T12:18:49.553Z</updated>
    
    <content type="html"><![CDATA[<p>这里只针对引用参数来说(非string类型)。我们能限制的只是引用的指向不能更改，而引用指向的内存值是可以修改的。<span style="color:blue">是不是只要 C# 的类属性设计的够好，就不需要这样呢？</span></p><p>这里是之前的思考：<a href="https://blog.huvjie.com/2020/06/01/200601N01/">https://blog.huvjie.com/2020/06/01/200601N01/</a></p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"nihao"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Programe</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> A  aa = <span class="keyword">new</span> A();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> A Aa &#123; <span class="keyword">get</span>; &#125; = <span class="keyword">new</span> A();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Programe programe = <span class="keyword">new</span> Programe();</span><br><span class="line">            programe.DoSomeChange(programe.Aa); <span class="comment">// 是可以更改的</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 下面这两句是不允许的，重新改变了引用的指向</span></span><br><span class="line">            <span class="comment">//A Ab = new A();</span></span><br><span class="line">            <span class="comment">//programe.Aa = Ab;</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(programe.Aa.Message);</span><br><span class="line">            programe.OnlyShow(programe.Aa);</span><br><span class="line">            programe.OnlyShow();</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeChange</span>(<span class="params">A a</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a.Message = <span class="string">"hello"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnlyShow</span>(<span class="params">A a</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a.Message = <span class="string">"hhhh"</span>;</span><br><span class="line">            Console.WriteLine(a.Message);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnlyShow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.aa.Message = <span class="string">"Good!"</span>;</span><br><span class="line">            Console.WriteLine(<span class="keyword">this</span>.aa.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">hhhh</span><br><span class="line">Good!</span><br></pre></td></tr></table></figure><p>类似下面这样是不行的：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeChange</span>(<span class="params"><span class="keyword">const</span> A a</span>)</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p><span style="color:red">是不是 C# 没有类似 C++ 的 const 形参，或者有什么方法能够实现类似的功能呢？</span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里只针对引用参数来说(非string类型)。我们能限制的只是引用的指向不能更改，而引用指向的内存值是可以修改的。&lt;span style=&quot;color:blue&quot;&gt;是不是只要 C# 的类属性设计的够好，就不需要这样呢？&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里是之前的思考：&lt;a href=&quot;https://blog.huvjie.com/2020/06/01/200601N01/&quot;&gt;https://blog.huvjie.com/2020/06/01/200601N01/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++｜wchar_t 简单认识</title>
    <link href="https://blog.huvjie.com/2020/11/25/201125N02/"/>
    <id>https://blog.huvjie.com/2020/11/25/201125N02/</id>
    <published>2020-11-25T02:22:00.000Z</published>
    <updated>2020-11-25T13:44:47.610Z</updated>
    
    <content type="html"><![CDATA[<p><code>wchar_t</code>输出用<code>wcout</code>。</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">setlocale(LC_ALL, <span class="string">"chs"</span>);</span><br><span class="line"><span class="keyword">wchar_t</span> wc[] = <span class="string">L"中国"</span>;</span><br><span class="line"></span><br><span class="line">wcout &lt;&lt; wc &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">中国</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;wchar_t&lt;/code&gt;输出用&lt;code&gt;wcout&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C／C++" scheme="https://blog.huvjie.com/tags/C%EF%BC%8FC/"/>
    
  </entry>
  
  <entry>
    <title>如何实现C#和C++混合编程</title>
    <link href="https://blog.huvjie.com/2020/11/24/201125N01/"/>
    <id>https://blog.huvjie.com/2020/11/24/201125N01/</id>
    <published>2020-11-24T02:22:00.000Z</published>
    <updated>2020-11-25T14:10:08.830Z</updated>
    
    <content type="html"><![CDATA[<p>最近在想如何实现C#和C++混合编程的问题，为什么会想到这个问题？是因为，在视觉方面我是有学习 OpenCV 的打算的。发现<strong>用托管 C++ 代码，包装非托管 C++ 代码；然后，C# 无缝衔接托管 C++。</strong>这种方式比较可行。</p><a id="more"></a><p>最开始想的是，用 Qt 去包 OpenCV，然后再 C# 里面调用 Qt 程序。了解了下，需要用到<code>qtwinmigrate</code>，试了下，发现比较麻烦，也没有搞成功。<strong>感觉这种方式还是可行。如果有时间折腾这个，那我还不如花时间精力学习下 Qt，直接用 Qt 开发呢!</strong></p><p>后面发现在互联网上，大家还有一种方法。<strong>用托管 C++ 代码，包装非托管 C++ 代码；然后，C# 无缝衔接托管 C++。</strong>看了一些互联网上的博客，感觉此路可行。在 Windows 下这可能是种最佳的解决方案。这种方式貌似可以使用类，而<code>PInvoke</code>的方式只能调用函数吧!？</p><p>说的<code>PInvoke</code>,发现一个网站：<a href="http://pinvoke.net/" target="_blank" rel="noopener">http://pinvoke.net/</a>。有需求的时候可以来这里查看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在想如何实现C#和C++混合编程的问题，为什么会想到这个问题？是因为，在视觉方面我是有学习 OpenCV 的打算的。发现&lt;strong&gt;用托管 C++ 代码，包装非托管 C++ 代码；然后，C# 无缝衔接托管 C++。&lt;/strong&gt;这种方式比较可行。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# try catch块内为空程序不会崩溃</title>
    <link href="https://blog.huvjie.com/2020/11/23/201123N03/"/>
    <id>https://blog.huvjie.com/2020/11/23/201123N03/</id>
    <published>2020-11-23T02:22:00.000Z</published>
    <updated>2020-11-23T12:10:21.079Z</updated>
    
    <content type="html"><![CDATA[<p>catch块内为空程序不会崩溃, 只是代表它没有进行任何的处理而已。</p><a id="more"></a><p><img src="http://image.huvjie.com/201123N03_img01.jpg" alt=""></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> c = b / a;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="keyword">catch</span> </span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这样程序不会蹦掉，只是没有处理异常而已。</p><p>很多时候，我们将错误信息<code>Show</code>出来。如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">catch</span>(Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">    MessageBox.Show(ex.Message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，也可以进行其他的处理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;catch块内为空程序不会崩溃, 只是代表它没有进行任何的处理而已。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#｜::运算符和全局命名空间</title>
    <link href="https://blog.huvjie.com/2020/11/23/201123N02/"/>
    <id>https://blog.huvjie.com/2020/11/23/201123N02/</id>
    <published>2020-11-23T02:22:00.000Z</published>
    <updated>2020-11-25T13:41:27.783Z</updated>
    
    <content type="html"><![CDATA[<p>发现 C# 还要和 C++ 一样的<code>::</code>运算符，来测试一下。</p><p><strong>命名空间被赋值别名以后，可以隐藏掉原有的命名空间。想要访问需要完整路径。如果不用，可以用<code>::</code>运算法，它的优先级被高。</strong></p><p>看下下面的例子：</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 同名的别名空间</span></span><br><span class="line">    <span class="keyword">using</span> MyNamespaceAlias = MyRootNamespace.MyNestedNamespace;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">MyRootNamespace</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">namespace</span> <span class="title">MyNamespaceAlias</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"MyRootNamespace.MyNamespaceAlias.MyClass.Print()"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">namespace</span> <span class="title">MyNestedNamespace</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">"MyRootNamespace.MyNestedNamespace.MyClass.Print()"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                MyRootNamespace.MyNestedNamespace.MyClass.Print(); <span class="comment">// 可简化名称如下</span></span><br><span class="line"></span><br><span class="line">                MyRootNamespace.MyNamespaceAlias.MyClass.Print(); <span class="comment">// 原有的 MyNamespaceAlias 命名空间屏蔽了别名空间。</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 使用::运算符，迫使编译器使用别名</span></span><br><span class="line">                MyNamespaceAlias::MyClass.Print();</span><br><span class="line">   <span class="comment">// MyRootNamespace. MyNamespaceAlias::MyClass.Print(); // 这样会报错不行，原因是显然的，::指向别名。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                Console.ReadKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对照输出顺序就，结合代码注释，可以看出区别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyRootNamespace.MyNestedNamespace.MyClass.Print()</span><br><span class="line">MyRootNamespace.MyNamespaceAlias.MyClass.Print()</span><br><span class="line">MyRootNamespace.MyNestedNamespace.MyClass.Print()</span><br></pre></td></tr></table></figure><p>这种方式在大项目出现别名和<code>.NET</code>命名空间重名的时候有用，一般用不上吧？!</p><p><code>global</code>是顶级根命名空间的别名，如果出现上面所说的那种情况，可以这样：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">global::System.Collections.Generic.List&lt;int&gt;   // 一个示例</span><br></pre></td></tr></table></figure><div style="font-size:12px">参考：<br>《C#入门经典第三版》P305<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现 C# 还要和 C++ 一样的&lt;code&gt;::&lt;/code&gt;运算符，来测试一下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命名空间被赋值别名以后，可以隐藏掉原有的命名空间。想要访问需要完整路径。如果不用，可以用&lt;code&gt;::&lt;/code&gt;运算法，它的优先级被高。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看下下面的例子：&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Winform ｜制作圆形label标签双色球</title>
    <link href="https://blog.huvjie.com/2020/11/22/201122N03/"/>
    <id>https://blog.huvjie.com/2020/11/22/201122N03/</id>
    <published>2020-11-22T02:22:00.000Z</published>
    <updated>2020-11-22T13:27:45.118Z</updated>
    
    <content type="html"><![CDATA[<p>制作圆形的显示 label 当做双色球，效果如下：</p><p><img src="http://image.huvjie.com/201122N03_img01.jpg" alt="▲ 圆形双色球效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 圆形双色球效果</div><a id="more"></a><h2 id="一、找两个圆形底色为白色的图片"><a href="#一、找两个圆形底色为白色的图片" class="headerlink" title="一、找两个圆形底色为白色的图片"></a>一、找两个圆形底色为白色的图片</h2><p><img src="http://image.huvjie.com/201122N03_img01.png" alt=""></p><p><img src="http://image.huvjie.com/201122N03_img02.png" alt=""></p><div style="font-size:13px;color:gray;text-align:center">▲ 底图</div><h2 id="二、label-标签设置"><a href="#二、label-标签设置" class="headerlink" title="二、label 标签设置"></a>二、label 标签设置</h2><ol><li>拖入<code>label</code>标签；</li><li><code>AutoSize</code>属性置为<code>false</code>；</li><li><code>Width</code>和<code>Height</code>属性设置相等且适当尺寸；</li><li><code>Image</code>属性导入底图；</li><li><code>Text</code>属性先默认设置成<code>00</code>，字体大小调至适当;</li><li><code>TextAlign</code>属性设置成<code>居中</code>。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;制作圆形的显示 label 当做双色球，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/201122N03_img01.jpg&quot; alt=&quot;▲ 圆形双色球效果&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 圆形双色球效果&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>面向对象的思考</title>
    <link href="https://blog.huvjie.com/2020/11/22/201122N04/"/>
    <id>https://blog.huvjie.com/2020/11/22/201122N04/</id>
    <published>2020-11-22T02:22:00.000Z</published>
    <updated>2020-11-22T13:39:48.962Z</updated>
    
    <content type="html"><![CDATA[<p>面向对象，数据的传输尽量以<code>对象</code>的形式封装起来传递会比较好。<code>实体类</code>是不是就是干这个事情的？!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面向对象，数据的传输尽量以&lt;code&gt;对象&lt;/code&gt;的形式封装起来传递会比较好。&lt;code&gt;实体类&lt;/code&gt;是不是就是干这个事情的？!&lt;/p&gt;

      
    
    </summary>
    
      <category term="编程爱好" scheme="https://blog.huvjie.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://blog.huvjie.com/tags/C/"/>
    
  </entry>
  
</feed>
