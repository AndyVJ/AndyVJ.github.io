<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡搅蛮缠</title>
  
  <subtitle>胡文杰的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.andyvj.com/"/>
  <updated>2020-06-17T04:13:22.678Z</updated>
  <id>https://www.andyvj.com/</id>
  
  <author>
    <name>AndyVJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#运用BackgroundWorker空间实现多线程</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N02/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N02/</id>
    <published>2020-06-17T03:59:12.000Z</published>
    <updated>2020-06-17T04:13:22.678Z</updated>
    
    <content type="html"><![CDATA[<p>可见<code>BackGroundWorker</code>有三个事件，事件间通过<code>EventArgs</code>实现参数传递。有用到<code>CancellationPending</code>属性判断取消。<code>EvnentArgs</code> 有很多属性：<code>Cancel</code>、<code>Argument</code>、<code>Result</code>、<code>ProgressPercentage</code>、<code>UserState</code>属性等。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BackGroundWorkDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.backgroundWorker1.WorkerReportsProgress = <span class="literal">true</span>;  <span class="comment">// 这两个属性也可以去控件的属性栏里面改</span></span><br><span class="line">            <span class="keyword">this</span>.backgroundWorker1.WorkerSupportsCancellation = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Backgroundworker的三个事件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// [1]开始后台要执行的任务，可见参数都是通过 EventArgs 参数传递的。</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_DoWork</span>(<span class="params"><span class="keyword">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            BackgroundWorker bgw = sender <span class="keyword">as</span> BackgroundWorker;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (bgw.CancellationPending) &#123;<span class="comment">// 如果取消操作</span></span><br><span class="line">                    e.Cancel = <span class="literal">true</span>; <span class="comment">// 把取消结果传出去，传给 RunWorkerComplete事件中。</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result += i;<span class="comment">// 累加</span></span><br><span class="line">                bgw.ReportProgress(i, <span class="string">"已经完成了"</span> + i.ToString() + <span class="string">"%"</span>); <span class="comment">// 报告进度，第二个参数是： UserState。传给 ProgressChanged 事件。</span></span><br><span class="line">                System.Threading.Thread.Sleep((<span class="keyword">int</span>)e.Argument);<span class="comment">//根据外部传入参数休眠，模拟计算耗时。</span></span><br><span class="line">                e.Result = result; <span class="comment">// 把计算结果传出去</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [2]/汇报后台工作进展</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_ProgressChanged</span>(<span class="params"><span class="keyword">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Value = e.ProgressPercentage;<span class="comment">// 显示百分比</span></span><br><span class="line">            <span class="keyword">this</span>.lblProgressPercent.Text = e.UserState.ToString();<span class="comment">// 显示进度条上面的百分信息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [3]后台任务完成</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_RunWorkerCompleted</span>(<span class="params"><span class="keyword">object</span> sender, RunWorkerCompletedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Cancelled) &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">"用户取消操作"</span>;</span><br><span class="line">                btnBegin.Enabled = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e.Error != <span class="literal">null</span>) &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = e.Error.Message;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.lblResult.Text = e.Result.ToString(); <span class="comment">// 显示结果</span></span><br><span class="line">            <span class="keyword">this</span>.btnBegin.Enabled = <span class="literal">true</span>;</span><br><span class="line">            toolStripStatusLabel1.Text = <span class="string">"计算完成"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启任务</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnBegin_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblResult.Text = <span class="string">"???"</span>;</span><br><span class="line">            lblResult.Refresh();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 启动后台程序(参数argument传给休眠时间)</span></span><br><span class="line">            backgroundWorker1.RunWorkerAsync(<span class="number">20</span>);</span><br><span class="line">            btnBegin.Enabled = <span class="literal">false</span>;</span><br><span class="line">            toolStripStatusLabel1.Text = <span class="string">"稍等，正在计算…"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 取消</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCancel_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            backgroundWorker1.CancelAsync();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnClose_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果：</p><p><img src="http://image.huvjie.com/200617N02_img01.gif" alt="进度条"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可见&lt;code&gt;BackGroundWorker&lt;/code&gt;有三个事件，事件间通过&lt;code&gt;EventArgs&lt;/code&gt;实现参数传递。有用到&lt;code&gt;CancellationPending&lt;/code&gt;属性判断取消。&lt;code&gt;EvnentArgs&lt;/code&gt; 有很多属性：&lt;code&gt;Cancel&lt;/code&gt;、&lt;code&gt;Argument&lt;/code&gt;、&lt;code&gt;Result&lt;/code&gt;、&lt;code&gt;ProgressPercentage&lt;/code&gt;、&lt;code&gt;UserState&lt;/code&gt;属性等。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SoftIntV-F001</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N01/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N01/</id>
    <published>2020-06-17T01:33:07.000Z</published>
    <updated>2020-06-17T01:41:29.822Z</updated>
    
    <content type="html"><![CDATA[<p>上周六面试了蜀丰科技一个助理软件工程师的职位，没有项目经验，又是转行的的，真不好搞啊。</p><p>临走的时候，面试官赵工说，“下周一或周二和老板说一下再给你打电话”，估计是场面话。</p><p>周一我电话追问了下他们人事，说帮我问下后给我电话。见周二没回复，我就微信上再次问了下。然后，这人事把我微信给删了。真他妈脑瓜子嗡嗡的啊~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周六面试了蜀丰科技一个助理软件工程师的职位，没有项目经验，又是转行的的，真不好搞啊。&lt;/p&gt;
&lt;p&gt;临走的时候，面试官赵工说，“下周一或周二和老板说一下再给你打电话”，估计是场面话。&lt;/p&gt;
&lt;p&gt;周一我电话追问了下他们人事，说帮我问下后给我电话。见周二没回复，我就微信上
      
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C#线程安全</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N06/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N06/</id>
    <published>2020-06-16T12:27:32.000Z</published>
    <updated>2020-06-16T13:14:55.402Z</updated>
    
    <content type="html"><![CDATA[<p>多个线程对同一资源的争夺，有可能出现线程不安全的现象。用<code>lock</code>这种最简单的方式实现下。</p><a id="more"></a><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p>直观的看下这种情况：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ThreadSafetyDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.CurrentThread.Name = <span class="string">"====主线程===="</span>;</span><br><span class="line">            Program prg = <span class="keyword">new</span> Program();</span><br><span class="line"></span><br><span class="line">            Thread newThread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(prg.DoSomeWork));</span><br><span class="line">            newThread.Name = <span class="string">"**新线程:"</span>;</span><br><span class="line">            newThread.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            newThread.Start(); <span class="comment">// 开始新线程</span></span><br><span class="line"></span><br><span class="line">            prg.DoSomeWork();  <span class="comment">// 开始主线程</span></span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 放在外面作为成员变量，这样连个线程操纵的时候才能看出不一样。</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> counter = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">                counter += i;</span><br><span class="line">                Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">====主线程====1</span><br><span class="line">====主线程====4</span><br><span class="line">====主线程====7</span><br><span class="line">====主线程====11</span><br><span class="line">====主线程====16</span><br><span class="line">====主线程====22</span><br><span class="line">====主线程====29</span><br><span class="line">**新线程:2</span><br><span class="line">**新线程:39</span><br><span class="line">**新线程:42</span><br><span class="line">**新线程:46</span><br><span class="line">**新线程:51</span><br><span class="line">**新线程:57</span><br><span class="line">**新线程:64</span><br><span class="line">**新线程:72</span><br><span class="line">**新线程:81</span><br><span class="line">**新线程:91</span><br><span class="line">====主线程====37</span><br><span class="line">====主线程====100</span><br><span class="line">====主线程====110</span><br></pre></td></tr></table></figure><p>每次的结果其实都不一样，这就是线程的不安全，多个线程操纵了同意资源。</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p>保证线程安全，加一个<code>lock</code>块。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lock</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            counter += i;</span><br><span class="line">            Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就没问题，保证只有一个线程调用。</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p>更优雅的方式写法：</p><p>增加命名空间<code>using System.Runtime.CompilerServices;</code>。然后在函数前增加一个这样的标签就可以——<code>[MethodImpl(MethodImplOptions.Synchronized)]</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">MethodImpl(MethodImplOptions.Synchronized)</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">        counter += i;</span><br><span class="line">        Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子也可以，也是同样的效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多个线程对同一资源的争夺，有可能出现线程不安全的现象。用&lt;code&gt;lock&lt;/code&gt;这种最简单的方式实现下。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#进程读取方法</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N05/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N05/</id>
    <published>2020-06-16T11:01:55.000Z</published>
    <updated>2020-06-16T11:14:57.358Z</updated>
    
    <content type="html"><![CDATA[<p>首相要加入<code>using System.Diagnostics;</code>命名空间。 </p><p> <code>GetProcesses()</code>、<code>Modules</code>属性。一些进程的属性信息：</p><ol><li>Id   // 进程唯一标识符 (Id)</li><li>Handle //关联进程的本机句柄 (Handle)</li><li>HandleCount //打开句柄数 (HandleCount)</li><li>BasePriority //关联进程的基本优先级</li><li>StartTime  //进程启动时间</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;<span class="comment">//包含进程相关</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ProccessEx</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Process[] processes = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnGetProcessess_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            processes = Process.GetProcesses();<span class="comment">// 获取本地计算机上的进程</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.lbProcess.Items.Clear();</span><br><span class="line">            <span class="keyword">foreach</span> (Process item <span class="keyword">in</span> processes) &#123;</span><br><span class="line">                <span class="keyword">this</span>.lbProcess.Items.Add(item.ProcessName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">lbProcess_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (lbProcess.Items.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                lbModels.Items.Clear();</span><br><span class="line">            &#125;</span><br><span class="line">            Process currentProcess = processes[lbProcess.SelectedIndex]; <span class="comment">// SelectedIndex 属性</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ProcessModuleCollection modules = currentProcess.Modules; <span class="comment">// Mpdules 属性</span></span><br><span class="line">                <span class="keyword">foreach</span> (ProcessModule item <span class="keyword">in</span> modules) &#123;  <span class="comment">// 注意是 ProcessModule 类型</span></span><br><span class="line">                    lbModels.Items.Add(item.FileName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 显示当前进程的基本信息</span></span><br><span class="line">                <span class="keyword">string</span> info = <span class="string">"进程唯一标识符 (Id):"</span> + currentProcess.Id + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"关联进程的本机句柄 (Handle):"</span> + currentProcess.Handle + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"打开句柄数 (HandleCount):"</span> + currentProcess.HandleCount + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"关联进程的基本优先级:"</span> + currentProcess.BasePriority + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"进程启动时间："</span> + currentProcess.StartTime + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line"></span><br><span class="line">                txtProcessInfo.Text = info;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnKill_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lbProcess.Items.Count == <span class="number">0</span> || lbProcess.SelectedIndex == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            Process currentProccess = processes[lbProcess.SelectedIndex];<span class="comment">// 获取当前鼠标选择的进程</span></span><br><span class="line">            currentProccess.Kill();<span class="comment">// 杀掉进程</span></span><br><span class="line">            currentProccess.Close();<span class="comment">// 释放进程资源</span></span><br><span class="line"></span><br><span class="line">            lbProcess.Items.RemoveAt(lbProcess.SelectedIndex);</span><br><span class="line"></span><br><span class="line">            lbModels.Items.Clear();</span><br><span class="line">            txtProcessInfo.Clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 用360浏览器打开我的博客</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnOpenIE_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 没注册就使用绝对路径</span></span><br><span class="line">            <span class="comment">// 打开我的博客</span></span><br><span class="line">            Process.Start(<span class="string">@"C:\Users\Administrator\AppData\Roaming\360se6\Application\360se.exe"</span>, <span class="string">"blog.huvjie.com"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打开新进程，如：notepad</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnStartnew_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Process.Start(txtProcessFileName.Text.Trim());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出效果：</p><p><img src="http://image.huvjie.com/200616N05_img01.gif" alt="进程相关"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首相要加入&lt;code&gt;using System.Diagnostics;&lt;/code&gt;命名空间。 &lt;/p&gt;
&lt;p&gt; &lt;code&gt;GetProcesses()&lt;/code&gt;、&lt;code&gt;Modules&lt;/code&gt;属性。一些进程的属性信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Id   // 进程唯一标识符 (Id)&lt;/li&gt;
&lt;li&gt;Handle //关联进程的本机句柄 (Handle)&lt;/li&gt;
&lt;li&gt;HandleCount //打开句柄数 (HandleCount)&lt;/li&gt;
&lt;li&gt;BasePriority //关联进程的基本优先级&lt;/li&gt;
&lt;li&gt;StartTime  //进程启动时间&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好者" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD%E8%80%85/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#跨线程访问数据库</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N04/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N04/</id>
    <published>2020-06-16T08:12:40.000Z</published>
    <updated>2020-06-16T08:20:27.052Z</updated>
    
    <content type="html"><![CDATA[<p>跨线程的小运用。<code>DataSet</code> 和 <code>DataGradeView</code> <code>DataTable</code> 的数据填充。</p><p><img src="http://image.huvjie.com/200616N04_img01.gif" alt="效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 实现效果，同时还可以拖动窗口。</div><a id="more"></a><p><hr><br><span style="color:gray;font-size:12px"><br>Note：<br>一些和数据库的交互操作都封装在 SQLHelper 类中，练习时候自行添加。<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跨线程的小运用。&lt;code&gt;DataSet&lt;/code&gt; 和 &lt;code&gt;DataGradeView&lt;/code&gt; &lt;code&gt;DataTable&lt;/code&gt; 的数据填充。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/200616N04_img01.gif&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 实现效果，同时还可以拖动窗口。&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#跨线程访问控件</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N03/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N03/</id>
    <published>2020-06-16T06:13:00.000Z</published>
    <updated>2020-06-16T06:16:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>跨线程访问控件，主要用到控件的属性判断<code>InvokeRequired</code>是否为<code>true</code>，为<code>true</code>则为其他线程创建。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line">namespace 跨线程控件访问</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            StartPosition = FormStartPosition.CenterParent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thread1 = <span class="keyword">new</span> Thread(() =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (lbl1.InvokeRequired) &#123; <span class="comment">//判断是否调动Invoke方法, 如果为 true 则是其他方法创建。</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">                        <span class="comment">//Invoke（）方法的第一个参数是返回值为void的委托,第二个是给委托对应方法传递的参数</span></span><br><span class="line">                        lbl1.Invoke(<span class="keyword">new</span> Action&lt;<span class="keyword">string</span>&gt;(s =&gt; lbl1.Text = i.ToString()), i.ToString());</span><br><span class="line">                        Thread.Sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            thread1.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thread1.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thread2 = <span class="keyword">new</span> Thread(() =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (lbl2.InvokeRequired) &#123; <span class="comment">//判断是否调动Invoke方法, 如果为 true 则是其他方法创建。</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">                        <span class="comment">//Invoke（）方法的第一个参数是返回值为void的委托,第二个是给委托对应方法传递的参数</span></span><br><span class="line">                        lbl1.Invoke(<span class="keyword">new</span> Action&lt;<span class="keyword">string</span>&gt;(s =&gt; lbl2.Text = i.ToString()), i.ToString());</span><br><span class="line">                        Thread.Sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            thread2.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thread2.Start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="http://image.huvjie.com/200616N03_img01.gif" alt="运行效果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跨线程访问控件，主要用到控件的属性判断&lt;code&gt;InvokeRequired&lt;/code&gt;是否为&lt;code&gt;true&lt;/code&gt;，为&lt;code&gt;true&lt;/code&gt;则为其他线程创建。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#异步回调函数基础</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N02/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N02/</id>
    <published>2020-06-16T04:58:06.000Z</published>
    <updated>2020-06-16T05:39:09.836Z</updated>
    
    <content type="html"><![CDATA[<p>回调函数的基本用法。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AsyncBasic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">new</span> Program().ExcuteCal();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt; Cal = <span class="literal">null</span>;  <span class="comment">// [1] 声明委托变量。 都要用声明为成员变量</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Program</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cal = <span class="keyword">new</span> Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt;(ExcuteTask1);   <span class="comment">// 初始化委托。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [4] 同时执行多个任务</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ExcuteCal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">                Cal.BeginInvoke(i * <span class="number">10</span>, i * <span class="number">100</span>, MyCallBack, i);</span><br><span class="line">                <span class="comment">//最后一个参数 i 给回调函数的字段AsyncState赋值，如果数据很多可以定义成类或结构</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask1</span>(<span class="params"><span class="keyword">int</span> num, <span class="keyword">int</span> ms</span>) <span class="comment">// [2] 根据委托实现方法。</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.Sleep(ms);</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//[5] 回调函数</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MyCallBack</span>(<span class="params">IAsyncResult result</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> res = Cal.EndInvoke(result);</span><br><span class="line">            Console.WriteLine(<span class="string">"第&#123;0&#125;个计算结果是&#123;1&#125;"</span>, result.AsyncState.ToString(), res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序有些地方可以用 lamdba 表达式简化下。</p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">第1个计算结果是100</span><br><span class="line">第2个计算结果是400</span><br><span class="line">第3个计算结果是900</span><br><span class="line">第4个计算结果是1600</span><br><span class="line">第5个计算结果是2500</span><br><span class="line">第6个计算结果是3600</span><br><span class="line">第7个计算结果是4900</span><br><span class="line">第8个计算结果是6400</span><br><span class="line">第9个计算结果是8100</span><br><span class="line">第10个计算结果是10000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;回调函数的基本用法。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#异步基础</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N01/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N01/</id>
    <published>2020-06-16T01:57:33.000Z</published>
    <updated>2020-06-16T04:32:23.176Z</updated>
    
    <content type="html"><![CDATA[<p>一般顺序：</p><ol><li>定义一个委托。</li><li>根据委托实现方法。</li><li>异步调用。</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AsyncBasic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">new</span> Program().ExcuteCal();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ExcuteCal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Cal = ExcuteTask1;  <span class="comment">// [1] 声明委托变量。</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// [3] 异步调用</span></span><br><span class="line">            IAsyncResult result = Cal.BeginInvoke(<span class="number">100</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">"正在计算…"</span>); </span><br><span class="line">            Console.WriteLine(ExcuteTask2(<span class="number">20</span>));</span><br><span class="line">            <span class="keyword">int</span> s = Cal.EndInvoke(result);   </span><br><span class="line">            <span class="comment">//委托类型的EndInvoke（）方法：借助于IAsyncResult接口对象，不断查询异步调用是否结束。</span></span><br><span class="line">            <span class="comment">//该方法知道被异步调用的方法所有参数，所有，异步调用完毕后，取出异步调用结果作为返回值。</span></span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask1</span>(<span class="params"><span class="keyword">int</span> num</span>) <span class="comment">// [2] 根据委托实现方法。</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask2</span>(<span class="params"><span class="keyword">int</span> num</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正在计算…</span><br><span class="line">400</span><br><span class="line">10000</span><br></pre></td></tr></table></figure><p>可见，异步调用的时候可以做其他的事情。</p><p>委托类型的<code>Begininvoke（&lt;输入和输出变量&gt;,AsyncCallbac callback,object asyncState）</code>方法：异步调用的核心<br>第一个参数，表示委托对应的方法实参。<br>第二个参数<code>callback</code>，回调函数，表示异步调用结束时自动调用的函数。<br>第三个参数<code>asyncState</code>，用于向回调函数提供相关参数信息<br>返回值：<code>IAsyncResult</code> –&gt;异步操作状态接口，封装了异步执行的中的参数  </p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义一个委托。&lt;/li&gt;
&lt;li&gt;根据委托实现方法。&lt;/li&gt;
&lt;li&gt;异步调用。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#扩展方法</title>
    <link href="https://www.andyvj.com/2020/06/15/200615N01/"/>
    <id>https://www.andyvj.com/2020/06/15/200615N01/</id>
    <published>2020-06-15T01:25:03.000Z</published>
    <updated>2020-06-15T03:08:13.033Z</updated>
    
    <content type="html"><![CDATA[<p>扩展方法的 3 个要求：</p><ol><li>声明扩展方法的类必须声明为 <code>static</code>；</li><li>扩展方法本身必须声明为<code>static</code>；</li><li>扩展方法第一个参数类型前一定要包含关键字 <code>this</code>。</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ExtensionMethods</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">sealed</span> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyMethod</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> d1, d2, d3;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyMethod</span>(<span class="params"><span class="keyword">double</span> i,<span class="keyword">double</span> j, <span class="keyword">double</span> k</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            d1 = i;</span><br><span class="line">            d2 = j;</span><br><span class="line">            d3 = k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">SumMethod</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> d1 + d2 + d3;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">public</span>  <span class="keyword">class</span> <span class="title">ExtensionMythod</span> <span class="comment">// [1]、静态类</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">double</span> <span class="title">DivdMethos</span>(<span class="params"><span class="keyword">this</span> MyMethod md</span>) <span class="comment">// [2]、静态方法； [3]、第一个参数 this 关键字</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> md.SumMethod() / <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span>   <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyMethod md = <span class="keyword">new</span> MyMethod(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">double</span> reslut = md.DivdMethos();   <span class="comment">// 方法一调用</span></span><br><span class="line">            Console.WriteLine(<span class="string">"&#123;0:f2&#125;"</span> ,   reslut);</span><br><span class="line"></span><br><span class="line">            reslut = ExtensionMythod.DivdMethos(md);  <span class="comment">//  方法二调用</span></span><br><span class="line">            Console.WriteLine(<span class="string">"&#123;0:f2&#125;"</span>, reslut);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4.00</span><br><span class="line">4.00</span><br></pre></td></tr></table></figure><p><code>MyMethod</code>类 和 <code>ExtensionMythod</code> 类的访问等级要一样，都为 <code>public</code> 或者 都为 <code>internal</code>。</p><p>扩展方法也可以跟泛型结合起来使用。</p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>《图解教程》 -&gt; P145, P322<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;扩展方法的 3 个要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明扩展方法的类必须声明为 &lt;code&gt;static&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;扩展方法本身必须声明为&lt;code&gt;static&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;扩展方法第一个参数类型前一定要包含关键字 &lt;code&gt;this&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【练习项目】：学员信息管理系统</title>
    <link href="https://www.andyvj.com/2020/06/11/200611N01/"/>
    <id>https://www.andyvj.com/2020/06/11/200611N01/</id>
    <published>2020-06-11T02:00:28.000Z</published>
    <updated>2020-06-14T12:04:22.896Z</updated>
    
    <content type="html"><![CDATA[<p>信息管理系统可能是每个人学习途中必练的项目，除了基本的 Winform 界面的练习外，最主要的还是<strong>数据库的增、删、改、查</strong>。</p><p>基于这个项目练习，最主要的领悟是：<span style="color:red">1)要有面向对象的思维，对数据的处理要有封装意识；2)前后台要分离，前台界面和后天程序要分离开来；“高内聚，低耦合”。</span>这些都需要不断的去实践去练习去总结，才能获得经验。</p><p>下面是我练习的一个信息管理系统，下面是一些主要用到的一些知识点。</p><h1 id="登录窗"><a href="#登录窗" class="headerlink" title="登录窗"></a>登录窗</h1><p><img src="http://image.huvjie.com/200611N01_img01.jpg" alt="登录"></p><div style="font-size:13px;color:gray;text-align:center">▲ 登录窗</div><p>将用户在登录界面输入的账号密码在数据库中查询，能查询匹配到结果，即登录成功。账户和密码输入框中的内容需要进行规则验证，如账号必须是 5 位整数，这些输入验证方面需要用的<strong>正则表达式</strong>。</p><h1 id="主窗功能"><a href="#主窗功能" class="headerlink" title="主窗功能"></a>主窗功能</h1><p><img src="http://image.huvjie.com/200611N01_img01.gif" alt="登录主窗体"></p><div style="font-size:13px;color:gray;text-align:center">▲ 登录主窗体。</div><p>登录主窗体后，主要的功能都是围绕着<strong>增删改查</strong>来进行展开的，并把数据展示出来。Excel 的数据交换，导入与导出。</p><p><img src="http://image.huvjie.com/200611N01_img02.gif" alt="主窗功能"></p><div style="font-size:13px;color:gray;text-align:center">▲ 主窗体的一些功能展示</div><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;信息管理系统可能是每个人学习途中必练的项目，除了基本的 Winform 界面的练习外，最主要的还是&lt;strong&gt;数据库的增、删、改、查&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;基于这个项目练习，最主要的领悟是：&lt;span style=&quot;color:red&quot;&gt;1)要有面向对象的思
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#通过委托快窗体传值</title>
    <link href="https://www.andyvj.com/2020/06/03/200603N01/"/>
    <id>https://www.andyvj.com/2020/06/03/200603N01/</id>
    <published>2020-06-03T15:32:49.000Z</published>
    <updated>2020-06-04T02:39:04.359Z</updated>
    
    <content type="html"><![CDATA[<p>不同窗体处于不同线程，相互之间需要通信时，需要用到<code>委托</code>或<code>事件</code>。</p><a id="more"></a><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p><code>Form1.cs</code>:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeLblText</span>(<span class="params"><span class="keyword">string</span> str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.lblCounter.Text = str;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>Form2.cs</code>:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//public delegate void AddCounter(string str);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//public AddCounter addCounter;</span></span><br><span class="line">        Action&lt;<span class="keyword">string</span>&gt; addCounter;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            Form1 form1 = <span class="keyword">new</span> Form1();</span><br><span class="line">            addCounter = form1.ChangeLblText;</span><br><span class="line">            form1.Show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCounter_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (addCounter != <span class="literal">null</span>) &#123;</span><br><span class="line">                addCounter(count.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>Program.cs</code>:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form2());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出：</p><p><img src="http://image.huvjie.com/200603N01_img01.gif" alt=""></p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p>按照事件的写法，这样子可能更标准一点。</p><p><code>FrmA.cs 发布者</code>：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">AddCounter</span>(<span class="params"><span class="keyword">string</span> str</span>)</span>;  <span class="comment">// [1]声明委托</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FrmA</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> AddCounter addCounter; <span class="comment">// [2]创建委托</span></span><br><span class="line">        <span class="comment">//public event Action&lt;string&gt;  addCounter; // [2]创建事件</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">FrmA</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCounter_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            addCounter?.Invoke(count.ToString()); <span class="comment">// [3]发布事件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>FrmB.cs 订阅者</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FrmB</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">FrmB</span>(<span class="params">FrmA frmA</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            frmA.addCounter = ChangeLblText; <span class="comment">// [4]订阅事件</span></span><br><span class="line">           <span class="comment">// frmA.addCounter += ChangeLblText; // [4]订阅事件</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeLblText</span>(<span class="params"><span class="keyword">string</span> str</span>) <span class="comment">// [5]事件处理程序</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.lblCounter.Text = str;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>主程序</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SelfLianXiDelegate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            FrmA frmA = <span class="keyword">new</span> FrmA();</span><br><span class="line">            FrmB frmB = <span class="keyword">new</span> FrmB(frmA);</span><br><span class="line">            frmB.Show();</span><br><span class="line"></span><br><span class="line">            Application.Run(frmA);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="http://image.huvjie.com/200603N01_img02.gif" alt=""></p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p><strong>事件</strong>本质上就是<strong>委托</strong>的运用。但是直接用委托有种情况不安全，在<em>订阅者</em>中可以让<code>委托 = null</code>，全部失效。事件就不一样，只允许<code>+=</code>和<code>-+</code>,除非自己的内部可以使用<code>=</code>。</p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不同窗体处于不同线程，相互之间需要通信时，需要用到&lt;code&gt;委托&lt;/code&gt;或&lt;code&gt;事件&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#模块封装的形式做一个加法计算器</title>
    <link href="https://www.andyvj.com/2020/06/02/200602N02/"/>
    <id>https://www.andyvj.com/2020/06/02/200602N02/</id>
    <published>2020-06-02T07:33:55.000Z</published>
    <updated>2020-06-02T08:58:36.831Z</updated>
    
    <content type="html"><![CDATA[<p>模块封装<code>dll</code>然后通过引用的方式来实现这个简易计算器练习。</p><a id="more"></a><h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p><img src="http://image.huvjie.com/200602N02_img01.jpg" alt="01"></p><div style="font-size:13px;color:gray;text-align:center">▲ 界面</div><h1 id="添加类库"><a href="#添加类库" class="headerlink" title="添加类库"></a>添加类库</h1><p>右键 -&gt; 解决方案(注意是解决方案) -&gt; 添加 -&gt; 新建项目 -&gt; 类库 -&gt; CalDLL -&gt; ……</p><p>编好代码以后 -&gt; 生成解决方案 -&gt; 对应文件夹下面生成一个 CalDll.dll 文件。</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p><img src="http://image.huvjie.com/200602N02_img02.jpg" alt="02"></p><div style="font-size:13px;color:gray;text-align:center">▲ 右键 -&gt; 引用 -&gt; 添加引用</div><p><img src="http://image.huvjie.com/200602N02_img03.jpg" alt="03"></p><div style="font-size:13px;color:gray;text-align:center">▲ 项目 -&gt; 解决方案 -&gt; 添加 </div><p>或者：</p><p><img src="http://image.huvjie.com/200602N02_img04.jpg" alt="04"></p><div style="font-size:13px;color:gray;text-align:center">▲ 通过浏览，直接路径去找生成的 dll 文件 </div><p>这样以后，我们就能够在<code>引用</code>下面看到我们添加进来的<code>dll</code>文件。</p><p><img src="http://image.huvjie.com/200602N02_img05.jpg" alt="05"></p><div style="font-size:13px;color:gray;text-align:center">▲ 添加进来的引用， dll 文件。</div><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>把命名空间添加进来，<code>using Call;</code>，之后该怎么用就怎么用。实际开发中应该会给一个文档。</p><p><img src="http://image.huvjie.com/200602N02_img06.gif" alt="06"></p><div style="font-size:13px;color:gray;text-align:center">▲ 计算一个试下^_^。复杂的项目，实际开发应该是这样的一个过程。</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;模块封装&lt;code&gt;dll&lt;/code&gt;然后通过引用的方式来实现这个简易计算器练习。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>数据库数据表的一些操作脚本</title>
    <link href="https://www.andyvj.com/2020/06/02/200602N01/"/>
    <id>https://www.andyvj.com/2020/06/02/200602N01/</id>
    <published>2020-06-02T03:48:18.000Z</published>
    <updated>2020-06-06T08:01:40.890Z</updated>
    
    <content type="html"><![CDATA[<p>SQLServer 数据库一些基本操作的脚本。</p><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> TestDB</span><br><span class="line"><span class="keyword">on</span> primary</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">name</span>=<span class="string">'TestDB_data'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB_log.mdf'</span>,<span class="comment">--绝对路径</span></span><br><span class="line"><span class="keyword">size</span>=<span class="number">10</span>MB,<span class="comment">--数据库初始大小</span></span><br><span class="line">filegrowth=<span class="number">5</span>MB <span class="comment">--数据文件增长量</span></span><br><span class="line"><span class="comment">--上面四个文件缺一不可</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">log</span> <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">name</span>=<span class="string">'TestDB_log'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB_log.ldf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">5</span>MB,</span><br><span class="line">filegrowth=<span class="number">2</span>MB</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span></span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 创建数据库</div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">master</span></span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysdatabases <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'TestDB01'</span>) </span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> TestDB01 <span class="comment">--删除就不能恢复了，一般测试阶段数据库内没有数据的时候用。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> TestDB01</span><br><span class="line"><span class="keyword">on</span> primary</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">name</span>=<span class="string">'TestDB01_data'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB01_data.mdf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">5</span>MB,</span><br><span class="line">filegrowth=<span class="number">2</span>MB</span><br><span class="line">)</span><br><span class="line">,</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">name</span>=<span class="string">'TestDB01_data1'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB01_data.ndf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">5</span>MB,</span><br><span class="line">filegrowth=<span class="number">2</span>MB</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">log</span> <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">name</span>=<span class="string">'TestDB01_log'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB01_log.ldf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">2</span>MB,</span><br><span class="line">filegrowth=<span class="number">1</span>MB</span><br><span class="line">)</span><br><span class="line">,</span><br><span class="line">(</span><br><span class="line">     <span class="keyword">name</span>=<span class="string">'TestDB01_log1'</span>,</span><br><span class="line">filename=<span class="string">'F:\DB\TestDB01_log1.ldf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">2</span>MB,</span><br><span class="line">filegrowth=<span class="number">1</span>MB</span><br><span class="line">)</span><br><span class="line"><span class="keyword">go</span></span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 创建前判断，一起创建关联数据库</div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> TestDB</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>= <span class="string">'Students'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Students</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Students</span><br><span class="line">(</span><br><span class="line">    StudentId <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">100000</span>,<span class="number">1</span>),<span class="comment">--学号</span></span><br><span class="line">StudentName <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--姓名</span></span><br><span class="line">Gender <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="literal">null</span>, <span class="comment">--性别</span></span><br><span class="line">Birthday datetime <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--出生日期</span></span><br><span class="line">StudentIdNo <span class="built_in">numeric</span>(<span class="number">18</span>,<span class="number">0</span>) <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--身份证号</span></span><br><span class="line">Age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--年龄。其实可以通过身份证号来动态获取</span></span><br><span class="line">PhoneNumber <span class="built_in">varchar</span>(<span class="number">50</span>),<span class="comment">--电话号码</span></span><br><span class="line">StudentAddress <span class="built_in">varchar</span>(<span class="number">500</span>),<span class="comment">--地址</span></span><br><span class="line">ClassId <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span><span class="comment">--班级外键</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建班级表</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'StudentClass'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> StudentClass</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> StudentClass</span><br><span class="line">(</span><br><span class="line">    ClassId <span class="built_in">int</span> primary <span class="keyword">key</span>,<span class="comment">--班级编号</span></span><br><span class="line">ClassName <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span><span class="comment">--班级名称</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建成绩表</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'ScoreList'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> ScoreList</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> ScoreList</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">Id</span> <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>) primary <span class="keyword">key</span>,</span><br><span class="line">StudentId <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--学号外键</span></span><br><span class="line">CSharp <span class="built_in">int</span> <span class="literal">null</span>,</span><br><span class="line">SQLServer <span class="built_in">int</span> <span class="literal">null</span>,</span><br><span class="line">UpdateTime datetime <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--更新时间</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建管理员表</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'Admins'</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Admins</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Admins</span><br><span class="line">(</span><br><span class="line">    LoginId <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">1000</span>,<span class="number">1</span>) primary <span class="keyword">key</span>,</span><br><span class="line">LoginPwd <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,<span class="comment">--登录密码</span></span><br><span class="line">AdminName <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--添加相关约束</span></span><br><span class="line"><span class="comment">--创建主键约束</span></span><br><span class="line"><span class="keyword">use</span> TestDB</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'pk_StudentId'</span>)</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Students <span class="keyword">drop</span> <span class="keyword">constraint</span> pk_StudentId</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Students <span class="keyword">add</span> <span class="keyword">constraint</span> pk_StudentId primary <span class="keyword">key</span>(StudentId)</span><br><span class="line"></span><br><span class="line"><span class="comment">--添加相关约束</span></span><br><span class="line"><span class="comment">--创建唯一约束</span></span><br><span class="line"><span class="keyword">use</span> TestDB</span><br><span class="line"><span class="keyword">go</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exists</span>(<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'uq_StudentsIdNo'</span>)</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Students <span class="keyword">drop</span> <span class="keyword">constraint</span> uq_StudentsIdNo</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> Students <span class="keyword">add</span> <span class="keyword">constraint</span> uq_StudentsIdNo <span class="keyword">unique</span>(StudentIdNo)</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 数据表的一些操作</div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQLServer 数据库一些基本操作的脚本。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="SQL" scheme="https://www.andyvj.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>C#引用类型作为值参数和引用参数</title>
    <link href="https://www.andyvj.com/2020/06/01/200601N01/"/>
    <id>https://www.andyvj.com/2020/06/01/200601N01/</id>
    <published>2020-05-31T22:41:09.000Z</published>
    <updated>2020-06-08T04:09:41.482Z</updated>
    
    <content type="html"><![CDATA[<ol><li>引用类型作为值类型传递，形参和实参其实是<strong>两个指针</strong>，只不过指向的是同意块内存。新<code>new</code>一个对象是，它们两的联系就被切断了，指向了不同的内存块。</li><li>引用类型作为引用参数，此时的形参其实是实参的一个<strong>别名</strong>，它们两个其实是一个<strong>指针</strong>，新<code>new</code>一个对象是，指向的还是同一内存块，因为它们本身就是同一个指针。</li></ol><p><strong>两种情况的最后指向是不一样的。</strong></p><p><span style="color:red">以下情况是, 在方法内创建一个新对象并赋值给形参。</span></p><a id="more"></a><h2 id="引用类型作为值参数"><a href="#引用类型作为值参数" class="headerlink" title="引用类型作为值参数"></a>引用类型作为值参数</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RefParameter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> test = <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RefparameterTest</span>(<span class="params"> MyClass mc</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            mc.test = <span class="number">50</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">"修改值之后：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">            Console.WriteLine(<span class="string">"新创建之后：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyClass mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">            Console.WriteLine(<span class="string">"原始值：&#123;0&#125;\n======="</span>, mc.test);</span><br><span class="line">            RefparameterTest( mc);</span><br><span class="line">            Console.WriteLine(<span class="string">"=======\n最后值：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">原始值：20</span><br><span class="line">=======</span><br><span class="line">修改值之后：50</span><br><span class="line">新创建之后：20</span><br><span class="line">=======</span><br><span class="line">最后值：50   // 被修改</span><br></pre></td></tr></table></figure></p><h2 id="引用类型作为引用参数"><a href="#引用类型作为引用参数" class="headerlink" title="引用类型作为引用参数"></a>引用类型作为引用参数</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RefParameter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> test = <span class="number">20</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RefparameterTest</span>(<span class="params"><span class="keyword">ref</span> MyClass mc</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            mc.test = <span class="number">50</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">"修改值之后：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">            Console.WriteLine(<span class="string">"新创建之后：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyClass mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">            Console.WriteLine(<span class="string">"原始值：&#123;0&#125;\n======="</span>, mc.test);</span><br><span class="line">            RefparameterTest(<span class="keyword">ref</span> mc);</span><br><span class="line">            Console.WriteLine(<span class="string">"=======\n最后值：&#123;0&#125;"</span>, mc.test);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">原始值：20</span><br><span class="line">=======</span><br><span class="line">修改值之后：50</span><br><span class="line">新创建之后：20</span><br><span class="line">=======</span><br><span class="line">最后值：20 // 还是原来</span><br></pre></td></tr></table></figure><hr><p><span style="color:red">如果不在方法内部翻遍引用形参的指向，他们操纵的内存区域是一样的，结果也是一样的。</span></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RefTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Myclass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> val = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Mymethod</span>(<span class="params">Myclass a,  <span class="keyword">int</span> b</span>)  <span class="comment">// 看这里</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a.val += <span class="number">5</span>;</span><br><span class="line">            b += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Myclass a = <span class="keyword">new</span> Myclass();</span><br><span class="line">            <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">$"调用前：a = <span class="subst">&#123;a.val&#125;</span>, b = <span class="subst">&#123;b&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">            Mymethod(a,  b);  <span class="comment">// 看这里</span></span><br><span class="line">            Console.WriteLine(<span class="string">$"调用后：a = <span class="subst">&#123;a.val&#125;</span>, b = <span class="subst">&#123;b&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用前：a = <span class="number">10</span>, b = <span class="number">20</span></span><br><span class="line">调用后：a = <span class="number">15</span>, b = <span class="number">20</span>  <span class="comment">// 可见 对象a的数值成员值改变了，值变量b没有改变。</span></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RefTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Myclass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> val = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Mymethod</span>(<span class="params"><span class="keyword">ref</span> Myclass a,  <span class="keyword">ref</span> <span class="keyword">int</span> b</span>)  <span class="comment">// 看这里</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a.val += <span class="number">5</span>;</span><br><span class="line">            b += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Myclass a = <span class="keyword">new</span> Myclass();</span><br><span class="line">            <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">$"调用前：a = <span class="subst">&#123;a.val&#125;</span>, b = <span class="subst">&#123;b&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">            Mymethod(<span class="keyword">ref</span> a,  <span class="keyword">ref</span> b);  <span class="comment">// 看这里</span></span><br><span class="line">            Console.WriteLine(<span class="string">$"调用后：a = <span class="subst">&#123;a.val&#125;</span>, b = <span class="subst">&#123;b&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用前：a = <span class="number">10</span>, b = <span class="number">20</span></span><br><span class="line">调用后：a = <span class="number">15</span>, b = <span class="number">25</span>   <span class="comment">// 可见 都改变了。</span></span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br> 《C#图解教程》 -&gt; P66<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;引用类型作为值类型传递，形参和实参其实是&lt;strong&gt;两个指针&lt;/strong&gt;，只不过指向的是同意块内存。新&lt;code&gt;new&lt;/code&gt;一个对象是，它们两的联系就被切断了，指向了不同的内存块。&lt;/li&gt;
&lt;li&gt;引用类型作为引用参数，此时的形参其实是实参的一个&lt;strong&gt;别名&lt;/strong&gt;，它们两个其实是一个&lt;strong&gt;指针&lt;/strong&gt;，新&lt;code&gt;new&lt;/code&gt;一个对象是，指向的还是同一内存块，因为它们本身就是同一个指针。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;两种情况的最后指向是不一样的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color:red&quot;&gt;以下情况是, 在方法内创建一个新对象并赋值给形参。&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>我们如何做成功一件事情</title>
    <link href="https://www.andyvj.com/2020/05/29/200529N01/"/>
    <id>https://www.andyvj.com/2020/05/29/200529N01/</id>
    <published>2020-05-29T09:56:53.000Z</published>
    <updated>2020-06-03T16:02:15.721Z</updated>
    
    <content type="html"><![CDATA[<p>成功是每个人都渴望的，我们决定去做一件事情，怎样才能做成功呢？可能我们每个人都会有自己的想法，因为每个人踩过的坑都不一样；也许失败真乃是成功之母；还得要我们去总结思考。都说年轻失败不可怕，但摔跤真的会痛啊，伙计们。</p><a id="more"></a><p>年轻的时候我们去做一件事情，可能仅仅因为我们想做这件事情，凭兴趣也好其他原因也罢，就是单纯想做。这个时候失败的可能性比较大，但因为年轻无所畏惧。人终究还是要走向成熟。</p><p>决定一件事的成功与否，肯定有很多因素决定。事情是客观存在的，不会因为你的某一项凸出能力就会给你带来成功，她由多方面因素决定。</p><p>当你决定去做一件事情，这个决定本身够不够成熟，是否是拍脑袋决定的还是经过你深思熟虑的。你的优势在哪里，劣势在哪里？你有哪些资源？你将要付出什么样的代价？是否有吃苦的决心坚强的意志力？可能会遇到的困难和情况有哪些？你是否能抵抗的住？是否有各种预案？……</p><p>做一件事情还是需要一个团队去做，深知一个人的精力时间能力是远远不够分的；要分工合作。团队成员一定要选好，一定要选好，一定要选好，这个可能是最重要的一环，决定着这件事情能否成功。并不一定要能力最强，但要最合适的。至于怎样去选，怎样才算合适，我也不知道…可能最重要的一点，沟通要顺畅，交流要正常，大家的思想和想法要能在同一水平，目标一致。</p><p>一个团队的产生，自然需要一个主导，主导者还是需要一定的领导力，管理能力，激励团员能力，自我驱动能力吧。最开始这也许不是最重要的？五五分的合伙生意不要做。</p><hr><p><span style="color:red"></span></p><ol><li>团队分工合作，等级分明，沟通顺畅，目标一致，团结；每人都有某一方面独到的能力；五五开合伙生意不要做；</li><li>意志坚定；</li><li>钱；</li><li>运气；</li><li>做自己擅长和感兴趣的事；</li><li>多见见世面，这样更有自信，眼界更广，考虑问题更全面。</li></ol><p></p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;成功是每个人都渴望的，我们决定去做一件事情，怎样才能做成功呢？可能我们每个人都会有自己的想法，因为每个人踩过的坑都不一样；也许失败真乃是成功之母；还得要我们去总结思考。都说年轻失败不可怕，但摔跤真的会痛啊，伙计们。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>三菱ST：星-三角启动</title>
    <link href="https://www.andyvj.com/2020/05/19/200519N01/"/>
    <id>https://www.andyvj.com/2020/05/19/200519N01/</id>
    <published>2020-05-19T02:46:07.000Z</published>
    <updated>2020-05-19T03:12:16.626Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>三相异步电动机的Y-△（星-三角）启动控制程序。</p></blockquote><p><img src="http://image.huvjie.com/200519N01_img01.jpg" alt="星-三角电机的接法"></p><div style="font-size:13px;color:gray;text-align:center">▲ 星-三角电机端子的接法</div><h2 id="器件选型"><a href="#器件选型" class="headerlink" title="器件选型"></a>器件选型</h2><p>三相异步电机、接触器、继电器、FX2N-32MR等。</p><h2 id="接线图设计"><a href="#接线图设计" class="headerlink" title="接线图设计"></a>接线图设计</h2><p><img src="http://image.huvjie.com/200519N01_img03.jpg" alt="接线图"></p><h2 id="I-O分配"><a href="#I-O分配" class="headerlink" title="I/O分配"></a>I/O分配</h2><p><img src="http://image.huvjie.com/200519N01_img02.jpg" alt="IO分配"></p><div style="font-size:13px;color:gray;text-align:center">▲ I/O 分配表</div><h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Y0 := (Y0 AND X1) OR X0;(*X1为急停开关，常闭*)</span><br><span class="line"></span><br><span class="line">IF Y0 THEN</span><br><span class="line">OUT_T(TRUE, TC0, 50);</span><br><span class="line">Y1 := NOT TS0 AND NOT Y2;</span><br><span class="line">OUT_T(TS0, TC1, 10);</span><br><span class="line">Y2 := TS1 AND NOT Y1;</span><br><span class="line">END_IF;</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ ST 代码</div><p><img src="http://image.huvjie.com/200519N01_img04.jpg" alt="梯形图"></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考： </span></p><ol><li>向晓汉 -&gt; P84<br></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;三相异步电动机的Y-△（星-三角）启动控制程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/200519N01_img01.jpg&quot; alt=&quot;星-三角电机的接法&quot;&gt;&lt;/p&gt;
&lt;d
      
    
    </summary>
    
      <category term="电子电气" scheme="https://www.andyvj.com/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E6%B0%94/"/>
    
    
      <category term="三菱PLC" scheme="https://www.andyvj.com/tags/%E4%B8%89%E8%8F%B1PLC/"/>
    
  </entry>
  
  <entry>
    <title>三菱ST：计数装箱</title>
    <link href="https://www.andyvj.com/2020/05/19/200519N02/"/>
    <id>https://www.andyvj.com/2020/05/19/200519N02/</id>
    <published>2020-05-18T16:08:30.000Z</published>
    <updated>2020-05-29T09:51:19.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有一个光电传感器检测工件，每检测到1只工件，计数一次，当计数到3只时，发出一个装箱信号。</p></blockquote><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=753240515&bvid=BV1rk4y167cd&cid=192889416&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OUT_C(LDP(TRUE, X0), CC0, 3); (*C0计数器计数三次, X0 上升沿触发LDP*)</span><br><span class="line">OUT(CS0, Y0);(*C0三次计数满后触发Y0*)</span><br><span class="line">OUT_T(CS0, TC0, 20);(*C0 计数满后，触发倒计时 2 秒*)</span><br><span class="line">RST(TS0, CN0);(*T0 定时到后，复位计数器C0*)</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ ST 代码</div><p><img src="http://image.huvjie.com/200519N02_img01.jpg" alt="梯形图"></p><p><div style="font-size:13px;color:gray;text-align:center">▲ T 形图</div></p><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="">link-01</a><br>2.<a href="">link-02</a><br>3.<a href="">link-03</a><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有一个光电传感器检测工件，每检测到1只工件，计数一次，当计数到3只时，发出一个装箱信号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=753240515&amp;bvid=BV1rk4y167cd&amp;cid=192889416&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; style=&quot;position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;&quot;&gt; &lt;/iframe&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="电子电气" scheme="https://www.andyvj.com/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E6%B0%94/"/>
    
    
      <category term="三菱PLC" scheme="https://www.andyvj.com/tags/%E4%B8%89%E8%8F%B1PLC/"/>
    
  </entry>
  
  <entry>
    <title>有时候是真的失望</title>
    <link href="https://www.andyvj.com/2020/05/18/200518N01/"/>
    <id>https://www.andyvj.com/2020/05/18/200518N01/</id>
    <published>2020-05-18T09:34:10.000Z</published>
    <updated>2020-05-18T15:38:48.576Z</updated>
    
    <content type="html"><![CDATA[<p>有时候是真的失望，失望到骨子里的那种。大义凛然，指点江山，侃侃而谈，谁是无二的国家标准？</p><a id="more"></a><p>孤独是一个人永远的主旋律，这和你身边有谁，和谁在一起没有任何关系。太平洋的风浪永远不会平息。</p><p>难平的寂寞永远在心中，云彩和夕阳永远在故乡的上空。那些踏过的路早已经不复存在，走过的地还在记忆中。</p><p>路的尽头是路，心的尽头是什么？</p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候是真的失望，失望到骨子里的那种。大义凛然，指点江山，侃侃而谈，谁是无二的国家标准？&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>《最天使》</title>
    <link href="https://www.andyvj.com/2020/05/14/200514N01/"/>
    <id>https://www.andyvj.com/2020/05/14/200514N01/</id>
    <published>2020-05-14T03:04:52.000Z</published>
    <updated>2020-05-14T03:14:29.183Z</updated>
    
    <content type="html"><![CDATA[<p>翻唱一段《最天使》。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=370642051&bvid=BV1DZ4y1s7yp&cid=190646274&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><a id="more"></a><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;翻唱一段《最天使》。&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=370642051&amp;bvid=BV1DZ4y1s7yp&amp;cid=190646274&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; style=&quot;position: absolute; width: 100%; 
height: 100%; left: 0; top: 0;&quot;&gt; &lt;/iframe&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="音乐" scheme="https://www.andyvj.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>我们终究要走向何方</title>
    <link href="https://www.andyvj.com/2020/05/13/200513N01/"/>
    <id>https://www.andyvj.com/2020/05/13/200513N01/</id>
    <published>2020-05-13T06:53:42.000Z</published>
    <updated>2020-05-13T07:40:23.846Z</updated>
    
    <content type="html"><![CDATA[<p>在这期间，老婆和我都没有工作，都没有收入，焦虑和不安总是萦绕而挥之不去。投出去的简历大都石沉大海，杳无音讯；房租房贷那可是虎视眈眈毫无仁慈可言。人生的每一步，我们终究要走向何方？</p><a id="more"></a><p>三十而立，谈何容易。自己所在的机械行业，像死胡同一样，凝望深渊，让人望而却步。要说发展前途，没有；要说钱，没有。是继续向前，坐而等死；还是破釜沉舟，拼死一搏。我是不是要去改个行？对未来做一个长期的规划。</p><p>也许，我们所有的理想最终还是要归到柴米油盐，终结到生活，这也就是普通人。理想是好，一味地追求，那是对身边人的不负责任。我们不该只为自己活着。</p><p>我去改行做一个互联网的产品经理如何，这条路可行吗，我有机会吗？</p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这期间，老婆和我都没有工作，都没有收入，焦虑和不安总是萦绕而挥之不去。投出去的简历大都石沉大海，杳无音讯；房租房贷那可是虎视眈眈毫无仁慈可言。人生的每一步，我们终究要走向何方？&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
</feed>
