<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡搅蛮缠</title>
  
  <subtitle>胡文杰的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.andyvj.com/"/>
  <updated>2020-08-26T12:50:34.392Z</updated>
  <id>https://www.andyvj.com/</id>
  
  <author>
    <name>AndyVJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C# enum 枚举类的问题</title>
    <link href="https://www.andyvj.com/2020/08/22/200822N02/"/>
    <id>https://www.andyvj.com/2020/08/22/200822N02/</id>
    <published>2020-08-22T12:00:01.000Z</published>
    <updated>2020-08-26T12:50:34.392Z</updated>
    
    <content type="html"><![CDATA[<p>C# enum 枚举类的问题。<br><a id="more"></a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> TrafficLight</span><br><span class="line">&#123;</span><br><span class="line">    Green = <span class="number">10</span>,</span><br><span class="line">    Yellow = <span class="number">15</span>,</span><br><span class="line">    Red = <span class="number">15</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        TrafficLight t1 = TrafficLight.Red;</span><br><span class="line">        Console.WriteLine((TrafficLight)<span class="number">15</span>); <span class="comment">// 输出的是第一个能匹配的值</span></span><br><span class="line">        Console.WriteLine(t1);  <span class="comment">// 输出的是第一个能匹配的值，尽管前面赋值的是 Red，但输出的还是 Yellow。</span></span><br><span class="line">        Console.Read();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yellow</span><br><span class="line">Yellow</span><br></pre></td></tr></table></figure><p>可见，枚举类虽然不能有重复的名称，但可以有重复的值（上例中赋值了两个15）。</p><p>上面的测试可知：<strong>输出的是第一个能匹配的值，尽管前面赋值的是<code>Red</code>，但输出的还是 <code>Yellow</code>。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C# enum 枚举类的问题。&lt;br&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net 的扩展类的基本使用</title>
    <link href="https://www.andyvj.com/2020/08/22/200822N01/"/>
    <id>https://www.andyvj.com/2020/08/22/200822N01/</id>
    <published>2020-08-22T12:00:00.000Z</published>
    <updated>2020-08-22T00:38:28.521Z</updated>
    
    <content type="html"><![CDATA[<p>C#.Net 的扩展类的基本使用。可以用来扩展<code>密封类</code>或者外部导入的<code>dll</code>。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        MyData md = <span class="keyword">new</span> MyData(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">"总合：&#123;0&#125;"</span>, md.Sum());</span><br><span class="line">        Console.WriteLine(<span class="string">"平均值:&#123;0&#125;"</span>, md.Average());  <span class="comment">//直接像实例一样的调用</span></span><br><span class="line"></span><br><span class="line">        Console.Read();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 【1】.必须是一个静态类</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ExtendMyData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// [2] 必须是一个共有的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">Average</span>(<span class="params"><span class="keyword">this</span> MyData md</span>) <span class="comment">// [3] this 关键字 和 类型</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> md.Sum() / <span class="number">2.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">MyData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyData</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">        <span class="keyword">this</span>.b = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Sum</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总合：<span class="number">3</span></span><br><span class="line">平均值:<span class="number">1.5</span></span><br></pre></td></tr></table></figure><p>扩展类的使用主要有 3 个步骤，见代码内的注释说明。</p><p>可见，扩展的是基类，使用的时候也是实例化基类，然后进行直接的实例化形式的调用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C#.Net 的扩展类的基本使用。可以用来扩展&lt;code&gt;密封类&lt;/code&gt;或者外部导入的&lt;code&gt;dll&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# .NET 索引器的基本使用</title>
    <link href="https://www.andyvj.com/2020/08/18/200818N01/"/>
    <id>https://www.andyvj.com/2020/08/18/200818N01/</id>
    <published>2020-08-18T13:03:00.000Z</published>
    <updated>2020-08-18T13:03:14.448Z</updated>
    
    <content type="html"><![CDATA[<p>索引器和属性差不多，属性是一对一，而索引器是一对多而已。<br><a id="more"></a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        MyClass mc = <span class="keyword">new</span> MyClass();</span><br><span class="line">        mc[<span class="number">0</span>] = <span class="string">"胡文杰"</span>;</span><br><span class="line">        mc[<span class="number">1</span>] = <span class="string">"杨佳"</span>;</span><br><span class="line">        Console.WriteLine(mc[<span class="number">0</span>]);</span><br><span class="line">        Console.WriteLine(mc[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        Console.Read();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span>[] name = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="comment">// 关键：用 this 代替，类型也可以用 string</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> <span class="keyword">this</span>[<span class="keyword">int</span> index] &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= <span class="number">0</span> &amp;&amp; index &lt; name.Length) &#123;</span><br><span class="line">                <span class="keyword">return</span> name[index];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> name[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;=<span class="number">0</span> &amp;&amp; index &lt; name.Length) &#123;</span><br><span class="line">                name[index] = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">胡文杰</span><br><span class="line">杨佳</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;索引器和属性差不多，属性是一对一，而索引器是一对多而已。&lt;br&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Json.NET 简单的序列化和反序列化</title>
    <link href="https://www.andyvj.com/2020/08/17/200817N01/"/>
    <id>https://www.andyvj.com/2020/08/17/200817N01/</id>
    <published>2020-08-17T09:14:00.000Z</published>
    <updated>2020-08-17T13:09:27.089Z</updated>
    
    <content type="html"><![CDATA[<p>先弄个实体类：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> Gender &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>用<code>JsonConvert.SerializeObject</code>来进行序列化。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Student stu = <span class="keyword">new</span> Student &#123;</span><br><span class="line">    Name = <span class="string">"Andy"</span>,</span><br><span class="line">    Gender = <span class="string">"Three"</span>,</span><br><span class="line">    Age = <span class="number">50</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 序列化</span></span><br><span class="line"><span class="keyword">string</span> jsonStr = JsonConvert.SerializeObject(stu, Formatting.Indented);</span><br><span class="line">Console.WriteLine(jsonStr);</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"Name"</span>: <span class="string">"Andy"</span>,</span><br><span class="line">  <span class="string">"Gender"</span>: <span class="string">"Three"</span>,</span><br><span class="line">  <span class="string">"Age"</span>: <span class="number">50</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以把序列化的字符串保存到<code>json</code>文件中：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写入文件</span></span><br><span class="line">FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./stu.json"</span>, FileMode.Create);</span><br><span class="line">StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">sw.Write(jsonStr);</span><br><span class="line">sw.Close();</span><br><span class="line">fs.Close();</span><br></pre></td></tr></table></figure><p><img src="http://image.huvjie.com/200817N01_img01.jpg" alt="▲保存到json文件"></p><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>反序列化用<code>JsonConvert.DeserializeObject&lt;Student&gt;</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Student stu1 = JsonConvert.DeserializeObject&lt;Student&gt;(jsonStr);</span><br><span class="line">Console.WriteLine(stu1.Name);</span><br><span class="line">Console.WriteLine(stu1.Gender);</span><br><span class="line">Console.WriteLine(stu1.Age);</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Andy</span><br><span class="line">Three</span><br><span class="line"><span class="number">50</span></span><br></pre></td></tr></table></figure><p>更详细的运用可以看看这篇<a href="https://www.lagou.com/lgeduarticle/54110.html" target="_blank" rel="noopener">文章</a>。</p><hr><p>天上的白云漂浮，时而聚，时而散，多么自由。我要是有这样的状态就好了；这是不是文艺范挂在嘴边的“闲看云卷云舒”？</p><p>每个人都在给你提要求，而鲜有人给你帮助。生活太累，太难，太无望。那些文艺范挂在嘴边的“未来可期”，到我这也成“未来不可期”了。</p><p>“天下熙熙皆为利来，天下攘攘皆为利往”，人在世就图碎银几两，此说真没错也。这个世界不计其数的矛盾围绕着“钱”,“利”而生，谁能逃脱，谁能潇洒独善其身？“人活着开心最重要啦”，港剧中反复出现的台词；如果吃碗面就能开心，我愿意每天都吃面。</p><p>愿你我都能做感兴趣的事，都能让开心占大部分生活就好。</p><hr><p><strong>参考：</strong></p><div style="font-size:12px">Json.NET常用方法汇总:<a href="https://www.lagou.com/lgeduarticle/54110.html" target="_blank" rel="noopener">https://www.lagou.com/lgeduarticle/54110.html</a><br></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先弄个实体类：&lt;br&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C语言指针常见的错误</title>
    <link href="https://www.andyvj.com/2020/08/15/200815N02/"/>
    <id>https://www.andyvj.com/2020/08/15/200815N02/</id>
    <published>2020-08-15T12:22:44.000Z</published>
    <updated>2020-08-15T12:24:00.534Z</updated>
    
    <content type="html"><![CDATA[<p>C语言指针常见错误，主要有两种情况：  </p><p>1).指针未初始化;<br>2).避免使用<code>scanf</code>给指针赋值;<br>3).赋值指针为<code>NULL</code>。</p><a id="more"></a><h1 id="指针未初始化"><a href="#指针未初始化" class="headerlink" title="指针未初始化"></a>指针未初始化</h1><p>这种情况：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>, *p;</span><br><span class="line"></span><br><span class="line">*p = i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*i=%d\n"</span>, *p);</span><br></pre></td></tr></table></figure></p><p>指针变量<code>p</code>是没有初始化的，就是你还没有给他里面赋值地址进去。这种为初始化的情况在高版本的 VS 中是直接编译不过去的;会报错：<code>C4700    使用了未初始化的局部变量“p”</code>。</p><h1 id="避免-scanf赋值指针"><a href="#避免-scanf赋值指针" class="headerlink" title="避免 scanf赋值指针"></a>避免 <code>scanf</code>赋值指针</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>, *p;</span><br><span class="line">p = &amp;i;  <span class="comment">// 初始化 p，指向 i</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, p);</span><br></pre></td></tr></table></figure><p>这种情况会很容易把原来的<code>i</code>值，或者指向其他内存位置的值改掉导致软件崩溃，需要谨慎。</p><h1 id="赋值指针为NULL"><a href="#赋值指针为NULL" class="headerlink" title="赋值指针为NULL"></a>赋值指针为<code>NULL</code></h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>, *p = <span class="literal">NULL</span>;</span><br><span class="line">*p = i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, *p);</span><br></pre></td></tr></table></figure><p>这种情况能编译通过，运行时会报<strong>段错误</strong>：<code>引发了异常: 写入访问权限冲突。p 是 nullptr</code>。需要特别注意。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言指针常见错误，主要有两种情况：  &lt;/p&gt;
&lt;p&gt;1).指针未初始化;&lt;br&gt;2).避免使用&lt;code&gt;scanf&lt;/code&gt;给指针赋值;&lt;br&gt;3).赋值指针为&lt;code&gt;NULL&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C/C++" scheme="https://www.andyvj.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C#调用C/C++非托管程序</title>
    <link href="https://www.andyvj.com/2020/08/14/200814N01/"/>
    <id>https://www.andyvj.com/2020/08/14/200814N01/</id>
    <published>2020-08-14T12:44:04.000Z</published>
    <updated>2020-08-14T12:45:14.995Z</updated>
    
    <content type="html"><![CDATA[<p>尝试用 C# 和 C/C++ 混合编程玩下，主要看看如何传参。</p><a id="more"></a><h1 id="传基本的数据类型"><a href="#传基本的数据类型" class="headerlink" title="传基本的数据类型"></a>传基本的数据类型</h1><p>像<code>int</code>，<code>double</code>这类的基本类型直接传参好像问题不大。</p><p>C++：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> __declspec(dllexport)  <span class="function"><span class="keyword">double</span> <span class="title">cppFun</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>C#：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">CppFunction</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">DllImport(@<span class="meta-string">"E:\CPP\lian_xi\CS\61_CsCpp混合编程\Cpp代码\CppCode\Debug\CppCode.dll"</span>,</span></span><br><span class="line"><span class="meta">        CharSet = CharSet.Unicode,</span></span><br><span class="line"><span class="meta">        CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">cppFun</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">double</span> b</span>)</span>;<span class="comment">//好像必须要静态 static</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">double</span> result = CppFunction.cppFun(<span class="number">10</span>, <span class="number">0.15</span>);</span><br><span class="line">        Console.WriteLine(result);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.15  // 输出基本问题</span><br></pre></td></tr></table></figure><h1 id="传带指针的数据类型"><a href="#传带指针的数据类型" class="headerlink" title="传带指针的数据类型"></a>传带指针的数据类型</h1><p><img src="http://image.huvjie.com/200814N01_img01.jpg" alt="▲ 先打开不安全代码权限"></p><div style="font-size:13px;color:gray;text-align:center">▲ 先打开不安全代码权限 </div><h2 id="交换两个数值"><a href="#交换两个数值" class="headerlink" title="交换两个数值"></a>交换两个数值</h2><p>C++：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> __declspec(dllexport)  <span class="function"><span class="keyword">void</span>  <span class="title">cppFun</span><span class="params">(<span class="keyword">int</span> *p1, <span class="keyword">int</span>  *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>C#：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">CppFunction</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">DllImport(@<span class="meta-string">"E:\CPP\lian_xi\CS\61_CsCpp混合编程\Cpp代码\CppCode\Debug\CppCode.dll"</span>,</span></span><br><span class="line"><span class="meta">        CharSet = CharSet.Unicode,</span></span><br><span class="line"><span class="meta">        CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">unsafe</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">cppFun</span>(<span class="params"><span class="keyword">int</span>* a, <span class="keyword">int</span>* b</span>)</span>;<span class="comment">//好像必须要静态 static</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">unsafe</span> &#123; CppFunction.cppFun(&amp;a, &amp;b); &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">"&#123;0&#125; &#123;1&#125;"</span>, a, b);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20</span> <span class="number">10</span>  <span class="comment">//可见交换是成功的</span></span><br></pre></td></tr></table></figure></p><p>可以在不打开<code>不安全代码</code>是用 <code>ref</code> 参数来实现：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">cppFun</span>(<span class="params"><span class="keyword">ref</span> <span class="keyword">int</span> a, <span class="keyword">ref</span> <span class="keyword">int</span> b</span>)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CppFunction.cppFun(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br></pre></td></tr></table></figure><p>这样也是能够实现。</p><h2 id="传递字符串参数"><a href="#传递字符串参数" class="headerlink" title="传递字符串参数"></a>传递字符串参数</h2><p>传个<code>char *</code>试一下：</p><p>C++：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span> __declspec(dllexport)  <span class="function"><span class="keyword">void</span>  <span class="title">cppFun</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>C#：<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">CppFunction</span></span><br><span class="line">   &#123;   <span class="comment">// CharSet = CharSet.Ansi  字符编码要用 ASCII</span></span><br><span class="line">       [<span class="meta">DllImport(@<span class="meta-string">"E:\CPP\lian_xi\CS\61_CsCpp混合编程\Cpp代码\CppCode\Debug\CppCode.dll"</span>,</span></span><br><span class="line"><span class="meta">           CharSet = CharSet.Ansi,</span></span><br><span class="line"><span class="meta">           CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">cppFun</span>(<span class="params"><span class="keyword">string</span> s</span>)</span>;<span class="comment">//好像必须要静态 static</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">string</span> s = <span class="string">"哎哟，不错哦!"</span>;</span><br><span class="line">           CppFunction.cppFun(s);</span><br><span class="line"></span><br><span class="line">           Console.ReadKey();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>注意字符编码<code>CharSet = CharSet.Ansi</code>，要<code>用 ANSI 修饰</code>。</p><p>输出：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哎哟，不错哦!  <span class="comment">// 输出正确</span></span><br></pre></td></tr></table></figure></p><p>各种数据类型是如何<a href="https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-data-with-platform-invoke" target="_blank" rel="noopener">对应</a>的：</p><p><img src="http://image.huvjie.com/200814N01_img02.jpg" alt="▲ MSDN上对应的数据类型表"></p><div style="font-size:13px;color:gray;text-align:center">▲ MSDN上对应的数据类型表</div><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-data-with-platform-invoke" title="MSDN" target="_blank" rel="noopener">MSDN</a> 数据类型对应。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尝试用 C# 和 C/C++ 混合编程玩下，主要看看如何传参。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#.Net判断窗体是否创建并激活</title>
    <link href="https://www.andyvj.com/2020/08/12/200812N01/"/>
    <id>https://www.andyvj.com/2020/08/12/200812N01/</id>
    <published>2020-08-12T12:00:04.000Z</published>
    <updated>2020-08-12T12:03:14.681Z</updated>
    
    <content type="html"><![CDATA[<p>C#.Net 判断窗体是否创建，如果已创建，激活窗体。</p><a id="more"></a><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Form2 frm2;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (frm2 == <span class="literal">null</span>) &#123;</span><br><span class="line">        frm2 = <span class="keyword">new</span> Form2();</span><br><span class="line">        frm2.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        frm2.Show();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (frm2.IsDisposed) &#123; <span class="comment">// 判断窗体是否关闭 关键代码</span></span><br><span class="line">            frm2 = <span class="keyword">new</span> Form2();</span><br><span class="line">            frm2.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">            frm2.Show();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            frm2.WindowState = FormWindowState.Normal; <span class="comment">// 窗体默认大小</span></span><br><span class="line">            frm2.Activate();  <span class="comment">// 激活窗体</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> isFormOpen = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span>( Form frm <span class="keyword">in</span> Application.OpenForms) &#123; <span class="comment">// 关键代码</span></span><br><span class="line">        <span class="keyword">if</span> (frm <span class="keyword">is</span> Form2) &#123;</span><br><span class="line">            <span class="comment">// 如果此窗口已打开，则激活；</span></span><br><span class="line">            frm.Activate();</span><br><span class="line">            frm.WindowState = FormWindowState.Normal;</span><br><span class="line">            isFormOpen = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!isFormOpen) &#123;</span><br><span class="line">        Form2 frm2 = <span class="keyword">new</span> Form2();</span><br><span class="line">        frm2.Show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><hr><br><span style="color:gray;font-size:12px"><br>参考：<br>1.<a href="https://www.cnblogs.com/zhzhx/p/3392762.html" target="_blank" rel="noopener">link-01</a>。<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C#.Net 判断窗体是否创建，如果已创建，激活窗体。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C语言简单练习题｜循环穷举</title>
    <link href="https://www.andyvj.com/2020/08/05/200805N01/"/>
    <id>https://www.andyvj.com/2020/08/05/200805N01/</id>
    <published>2020-08-05T14:34:11.000Z</published>
    <updated>2020-08-05T14:36:58.347Z</updated>
    
    <content type="html"><![CDATA[<p> 做几道简单的C语言题。</p> <a id="more"></a><h1 id="1"><a href="#1" class="headerlink" title="(1)"></a>(1)</h1><blockquote><p>求出 1! + 2! + 3! +…+n!;</p></blockquote> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nF</span> <span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">plus_nF</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, plus_nF(<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*把N个n的阶乘加起来*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">plus_nF</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++ ) &#123;</span><br><span class="line">        result = result + nF(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*求N阶乘函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nF</span> <span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        r = r * i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 输出：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4037913</span><br></pre></td></tr></table></figure></p><h1 id="2"><a href="#2" class="headerlink" title="(2)"></a>(2)</h1><blockquote><p>求出用 50 元，20 元， 10 元换算成 100 元的有几种方式？</p></blockquote><p> 用 <code>for</code>循环穷举法：</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span> / <span class="number">50</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">100</span> / <span class="number">20</span>; j++) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="number">100</span> / <span class="number">10</span>; k++) &#123;</span><br><span class="line">              <span class="keyword">if</span> ( i * <span class="number">50</span> + j * <span class="number">20</span> + k * <span class="number">10</span> == <span class="number">100</span> ) &#123;</span><br><span class="line">                  <span class="built_in">printf</span> (<span class="string">"%d张50元｜%d张20元｜%d张10元。\n"</span>, i, j, k);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p> 输出：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0张50元｜0张20元｜10张10元。</span><br><span class="line">0张50元｜1张20元｜8张10元。</span><br><span class="line">0张50元｜2张20元｜6张10元。</span><br><span class="line">0张50元｜3张20元｜4张10元。</span><br><span class="line">0张50元｜4张20元｜2张10元。</span><br><span class="line">0张50元｜5张20元｜0张10元。</span><br><span class="line">1张50元｜0张20元｜5张10元。</span><br><span class="line">1张50元｜1张20元｜3张10元。</span><br><span class="line">1张50元｜2张20元｜1张10元。</span><br><span class="line">2张50元｜0张20元｜0张10元。</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="(3)"></a>(3)</h1><blockquote><p>百钱买百鸡，公鸡 5 元一只，母鸡 3 元一只，小鸡 1 元 3 只。百钱买百鸡的有哪些情况？</p></blockquote><p> 依然穷举法。</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span> / <span class="number">5</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; (<span class="keyword">int</span>) ( <span class="number">100</span> / <span class="number">3</span>); j ++) &#123;</span><br><span class="line">          <span class="keyword">if</span> ( (<span class="number">100</span> - i - j) % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i * <span class="number">5</span> + j * <span class="number">3</span> +  (<span class="number">100</span> - i - j) / <span class="number">3</span> == <span class="number">100</span> )</span><br><span class="line">              <span class="built_in">printf</span>(<span class="string">"公鸡%d只｜母鸡%d只｜小鸡%d只\n"</span>, i, j, <span class="number">100</span> - i - j);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p> 输出：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">公鸡0只｜母鸡25只｜小鸡75只</span><br><span class="line">公鸡4只｜母鸡18只｜小鸡78只</span><br><span class="line">公鸡8只｜母鸡11只｜小鸡81只</span><br><span class="line">公鸡12只｜母鸡4只｜小鸡84只</span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="(4)"></a>(4)</h1><blockquote><p>求出 1，2，3，4四个数能组成哪些互不相同的三位数？</p></blockquote><p> 依然穷举法。</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>, d = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">4</span>] = &#123;a, b, c, d&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != j &amp;&amp; i != k &amp;&amp; j != k) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d%d%d\t"</span>, arr[i], arr[j], arr[k]);</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span> (count % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 输出：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">123     124     132     134     142</span><br><span class="line">143     213     214     231     234</span><br><span class="line">241     243     312     314     321</span><br><span class="line">324     341     342     412     413</span><br><span class="line">421     423     431     432</span><br></pre></td></tr></table></figure><hr><p> 题目来自《手把手教你学C语言》。</p><hr><p><span style="color:gray;font-size:12px"><br>参考：<br>1.《手把手教你学C语言》<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 做几道简单的C语言题。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C/C++" scheme="https://www.andyvj.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C#读取XML文件</title>
    <link href="https://www.andyvj.com/2020/06/18/200618N01/"/>
    <id>https://www.andyvj.com/2020/06/18/200618N01/</id>
    <published>2020-06-18T02:43:34.000Z</published>
    <updated>2020-06-18T02:51:09.257Z</updated>
    
    <content type="html"><![CDATA[<p>首先添加头文件<code>using System.Xml;</code></p><p>然后，主要是几个步骤：</p><ol><li>创建 XML 文档操作对象；</li><li>加载 XML 文档到文档对象中；</li><li>获取 XML 文档根目录；</li><li>遍历匹配节点信息，将对象信息放置 <code>list</code> 集合中。</li></ol><a id="more"></a><p><code>Student.cs</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">XMLOperateSelfExercise</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> StuName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> StuAge &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Gender &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> ClassName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Form1.cs</code>:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加操作 XML 的头文件</span></span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">XMLOperateSelfExercise</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.dataGridView1.RowHeadersVisible = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载XML文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnLoadXML_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// [1] 创建 XML 文档操作对象</span></span><br><span class="line">            XmlDocument objDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            <span class="comment">// [2] 加载 XML 文档到文档对象中</span></span><br><span class="line">            objDoc.Load(<span class="string">@"./stuInfo.xml"</span>);</span><br><span class="line">            <span class="comment">// [3] 获取 XML 文档根目录</span></span><br><span class="line">            XmlNode rootNode = objDoc.DocumentElement;</span><br><span class="line">            List&lt;Student&gt; stuNodeInfo = <span class="keyword">new</span> List&lt;Student&gt;();<span class="comment">// 创建集合对象，用来存放对象信息</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (XmlNode item <span class="keyword">in</span> rootNode.ChildNodes) &#123;</span><br><span class="line">                <span class="keyword">if</span> (item.Name == <span class="string">"Student"</span>) &#123;</span><br><span class="line">                    Student objStu = <span class="keyword">new</span> Student();</span><br><span class="line">                    <span class="keyword">foreach</span> (XmlNode stuInnerNode <span class="keyword">in</span> item) &#123;</span><br><span class="line">                        <span class="keyword">switch</span> (stuInnerNode.Name) &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="string">"StuName"</span>:</span><br><span class="line">                                objStu.StuName = stuInnerNode.InnerText;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="string">"StuAge"</span>:</span><br><span class="line">                                objStu.StuAge = Convert.ToInt32(stuInnerNode.InnerText);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="string">"Gender"</span>:</span><br><span class="line">                                objStu.Gender = stuInnerNode.InnerText;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="string">"ClassName"</span>:</span><br><span class="line">                                objStu.ClassName = stuInnerNode.InnerText;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    stuNodeInfo.Add(objStu);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.dataGridView1.DataSource = stuNodeInfo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载版本信息</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnVersion_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 创建 XML 读取器</span></span><br><span class="line">            XmlTextReader xmlTReader = <span class="keyword">new</span> XmlTextReader(<span class="string">@"./StuInfo.xml"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> versionInfo = <span class="keyword">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 循环查询</span></span><br><span class="line">            <span class="keyword">while</span>(xmlTReader.Read()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (xmlTReader.Name == <span class="string">"Version"</span>) &#123;</span><br><span class="line">                    versionInfo = <span class="string">"版本："</span> + xmlTReader.GetAttribute(<span class="string">"vNo"</span>) + <span class="string">"发布时间："</span> + xmlTReader.GetAttribute(<span class="string">"pTime"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MessageBox.Show(versionInfo, <span class="string">"版本信息"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>StuInfo.xml</code>:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Students</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuName</span>&gt;</span>令狐冲<span class="tag">&lt;/<span class="name">StuName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuAge</span>&gt;</span>19<span class="tag">&lt;/<span class="name">StuAge</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ClassName</span>&gt;</span>1班<span class="tag">&lt;/<span class="name">ClassName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuName</span>&gt;</span>岳灵珊<span class="tag">&lt;/<span class="name">StuName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuAge</span>&gt;</span>16<span class="tag">&lt;/<span class="name">StuAge</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>女<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ClassName</span>&gt;</span>2班<span class="tag">&lt;/<span class="name">ClassName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuName</span>&gt;</span>岳不群<span class="tag">&lt;/<span class="name">StuName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuAge</span>&gt;</span>40<span class="tag">&lt;/<span class="name">StuAge</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ClassName</span>&gt;</span>3班<span class="tag">&lt;/<span class="name">ClassName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuName</span>&gt;</span>乔峰<span class="tag">&lt;/<span class="name">StuName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuAge</span>&gt;</span>23<span class="tag">&lt;/<span class="name">StuAge</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ClassName</span>&gt;</span>4班<span class="tag">&lt;/<span class="name">ClassName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuName</span>&gt;</span>韦小宝<span class="tag">&lt;/<span class="name">StuName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StuAge</span>&gt;</span>20<span class="tag">&lt;/<span class="name">StuAge</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Gender</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Gender</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ClassName</span>&gt;</span>5班<span class="tag">&lt;/<span class="name">ClassName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">DataInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Version</span> <span class="attr">vNo</span>=<span class="string">"1.2"</span> <span class="attr">pTime</span>=<span class="string">"2018-10-22"</span>&gt;</span>数据版本信息<span class="tag">&lt;/<span class="name">Version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">DataInfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Students</span>&gt;</span></span><br></pre></td></tr></table></figure><p>输出效果：</p><p><img src="http://image.huvjie.com/200618N01_img01.gif" alt="xml读取"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先添加头文件&lt;code&gt;using System.Xml;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后，主要是几个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 XML 文档操作对象；&lt;/li&gt;
&lt;li&gt;加载 XML 文档到文档对象中；&lt;/li&gt;
&lt;li&gt;获取 XML 文档根目录；&lt;/li&gt;
&lt;li&gt;遍历匹配节点信息，将对象信息放置 &lt;code&gt;list&lt;/code&gt; 集合中。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#序列化和返序列化保存和读取对象信息</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N05/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N05/</id>
    <published>2020-06-17T11:51:03.000Z</published>
    <updated>2020-06-17T12:00:40.827Z</updated>
    
    <content type="html"><![CDATA[<p>直接用明文文本的方式保存对象信息不是非常科学，现在用二进制序列化的方式来保存。</p><p>这里要先增加命名空间：<code>using System.Runtime.Serialization.Formatters.Binary;</code>，还要给实体类增加序列化标识特性。</p><a id="more"></a><p>通过分层设计来实现：</p><h1 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h1><p><code>Student.cs</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SaveClassInfoToFile</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Serializable</span>]  <span class="comment">// 增加序列化特性</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Gender &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Brithday &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p><code>StudentService.cs</code>:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.Serialization.Formatters.Binary;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SaveClassInfoToFile</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StudentService</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Student stu;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SerializeObj</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// [1]创建文件流</span></span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"stuInfo.stu"</span>, FileMode.Create);</span><br><span class="line">            <span class="comment">// [2]创建二进制格式</span></span><br><span class="line">            BinaryFormatter binaryFormatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">            <span class="comment">// [3]调用序列化方法</span></span><br><span class="line">            binaryFormatter.Serialize(fs, stu);</span><br><span class="line">            <span class="comment">// [4]关闭文件流</span></span><br><span class="line">            fs.Close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返序列化</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Student <span class="title">DeserializeObj</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 和序列化的步骤类似</span></span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"stuInfo.stu"</span>, FileMode.Open);</span><br><span class="line">            BinaryFormatter formatter = <span class="keyword">new</span> BinaryFormatter();</span><br><span class="line">            Student student = formatter.Deserialize(fs) <span class="keyword">as</span> Student;</span><br><span class="line">            fs.Close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> student;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p><code>Form.cs</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SaveClassInfoToFile</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 序列化保存对象信息</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button4_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Student stu = <span class="keyword">new</span> Student() &#123;</span><br><span class="line">                Name = <span class="keyword">this</span>.txtName.Text.Trim(),</span><br><span class="line">                Age = <span class="keyword">int</span>.Parse(<span class="keyword">this</span>.txtAge.Text.Trim()),</span><br><span class="line">                Gender = <span class="keyword">this</span>.txtGender.Text.Trim(),</span><br><span class="line">                Brithday = <span class="keyword">this</span>.txtBrith.Text.Trim()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            StudentService stuService = <span class="keyword">new</span> StudentService() &#123; stu = stu&#125;;</span><br><span class="line">            stuService.SerializeObj();  <span class="comment">// 调用序列化方法</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返序列化还原对象信息</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            StudentService studentService = <span class="keyword">new</span> StudentService();</span><br><span class="line">            Student stu = studentService.DeserializeObj();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 把数据读出来</span></span><br><span class="line">            <span class="keyword">this</span>.txtAge.Text = stu.Age.ToString();</span><br><span class="line">            <span class="keyword">this</span>.txtGender.Text = stu.Gender;</span><br><span class="line">            <span class="keyword">this</span>.txtName.Text = stu.Name;</span><br><span class="line">            <span class="keyword">this</span>.txtBrith.Text = stu.Brithday;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h1><p><img src="http://image.huvjie.com/200617N05_img01.gif" alt="序列化和返序列化"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接用明文文本的方式保存对象信息不是非常科学，现在用二进制序列化的方式来保存。&lt;/p&gt;
&lt;p&gt;这里要先增加命名空间：&lt;code&gt;using System.Runtime.Serialization.Formatters.Binary;&lt;/code&gt;，还要给实体类增加序列化标识特性。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#使用文本保存对象信息</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N04/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N04/</id>
    <published>2020-06-17T08:31:54.000Z</published>
    <updated>2020-06-17T11:27:22.519Z</updated>
    
    <content type="html"><![CDATA[<p>可以对象的信息保存到文本中，一行一行的保存，然后读取的时候一行一行的读取。缺点：如果行数错乱了，那读出来也是错乱的。这里只是一种思路。</p><a id="more"></a><p>只做练习，很多异常情况没有处理。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SaveClassInfoToFile</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 保存至文本</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./student.info"</span>, FileMode.Create);</span><br><span class="line">            StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line"></span><br><span class="line">            Student stu = <span class="keyword">new</span> Student() &#123;</span><br><span class="line">                name = <span class="keyword">this</span>.txtName.Text.Trim(),</span><br><span class="line">                age = <span class="keyword">int</span>.Parse(<span class="keyword">this</span>.txtAge.Text.Trim()),</span><br><span class="line">                gender = <span class="keyword">this</span>.txtGender.Text.Trim(),</span><br><span class="line">                brithday = <span class="keyword">this</span>.txtBrith.Text.Trim()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line">            <span class="comment">// 一行一行的写</span></span><br><span class="line">            sw.WriteLine(stu.name);</span><br><span class="line">            sw.WriteLine(stu.age);</span><br><span class="line">            sw.WriteLine(stu.gender);</span><br><span class="line">            sw.WriteLine(stu.brithday);</span><br><span class="line"></span><br><span class="line">            sw.Close();</span><br><span class="line">            fs.Close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//System.Diagnostics.Process.Start("notepad", "./student.info");</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./student.info"</span>, FileMode.Open);</span><br><span class="line">            StreamReader sr = <span class="keyword">new</span> StreamReader(fs);</span><br><span class="line">            Student stu = <span class="keyword">new</span> Student() &#123;</span><br><span class="line">                name = sr.ReadLine().Trim().ToString(),</span><br><span class="line">                age = <span class="keyword">int</span>.Parse(sr.ReadLine().Trim()),</span><br><span class="line">                gender = sr.ReadLine().Trim().ToString(),</span><br><span class="line">                brithday = sr.ReadLine().Trim().ToString()</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            sr.Close();</span><br><span class="line">            fs.Close();</span><br><span class="line">            <span class="comment">// 一行一行的读</span></span><br><span class="line">            <span class="keyword">this</span>.txtAge.Text = stu.age.ToString();</span><br><span class="line">            <span class="keyword">this</span>.txtGender.Text = stu.gender;</span><br><span class="line">            <span class="keyword">this</span>.txtName.Text = stu.name;</span><br><span class="line">            <span class="keyword">this</span>.txtBrith.Text = stu.brithday;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Student.cs</code>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SaveClassInfoToFile</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> gender;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> brithday;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="font-size:13px;color:gray;text-align:center">▲ 这里改成属性会比较好。</div><p>运行效果：</p><p><img src="http://image.huvjie.com/200617N04_img01.gif" alt="保存至对象"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以对象的信息保存到文本中，一行一行的保存，然后读取的时候一行一行的读取。缺点：如果行数错乱了，那读出来也是错乱的。这里只是一种思路。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#文件和文件夹的基本操作</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N03/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N03/</id>
    <published>2020-06-17T07:58:56.000Z</published>
    <updated>2020-06-17T08:04:14.828Z</updated>
    
    <content type="html"><![CDATA[<p>文件流，文件夹的基本操作。有一些异常的判断没有加，实际中可以加一些异常的判断。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.IO; <span class="comment">// [1] 引入文件操作命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FilesOperate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnWriteFile_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//[1]创建文件流</span></span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./huvjie.info"</span>, FileMode.Create);<span class="comment">// 创建，有则覆盖</span></span><br><span class="line">            <span class="comment">//[2]创建写入器</span></span><br><span class="line">            StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">            <span class="comment">//[3]以流的方式写入数据</span></span><br><span class="line">            sw.Write(<span class="keyword">this</span>.txtContents.Text.Trim());</span><br><span class="line">            <span class="comment">//[4]关闭写入器</span></span><br><span class="line">            sw.Close();</span><br><span class="line">            <span class="comment">//[5]关闭文件流</span></span><br><span class="line">            fs.Close();</span><br><span class="line"></span><br><span class="line">            txtContents.Clear();</span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./huvjie.info"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnReadFile_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// [1]创建文件流</span></span><br><span class="line">                FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./huvjie.info"</span>, FileMode.Open);<span class="comment">// 打开的方式</span></span><br><span class="line">                <span class="comment">// [2]创建读取器</span></span><br><span class="line">                StreamReader sr = <span class="keyword">new</span> StreamReader(fs);</span><br><span class="line">                <span class="comment">// [3]以流的方式读取数据</span></span><br><span class="line">                txtContents.Text = sr.ReadToEnd();</span><br><span class="line">                <span class="comment">// [4]关闭读取器</span></span><br><span class="line">                sr.Close();</span><br><span class="line">                <span class="comment">// [5]关闭文件流</span></span><br><span class="line">                fs.Close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">                MessageBox.Show(ex.Message, <span class="string">"提示"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 增加一个时间，模拟一下日志的记录，操作步骤和写入文件一样</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(<span class="string">@"./log.log"</span>, FileMode.Append);<span class="comment">// 这里是追加,无文件会创建文件</span></span><br><span class="line">            StreamWriter sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">            sw.Write(<span class="string">"操作成功!"</span> + DateTime.Now.ToString() + <span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">            sw.Close();</span><br><span class="line">            fs.Close();</span><br><span class="line">            <span class="comment">//System.Diagnostics.Process[] pr = System.Diagnostics.Process.GetProcessesByName("notepad");</span></span><br><span class="line">            <span class="comment">//if (pr.Length != 0) &#123;</span></span><br><span class="line">            <span class="comment">//    pr[0].Kill();</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./log.log"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 删除文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnDelFile_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            File.Delete(<span class="string">@"./log.log"</span>);</span><br><span class="line">            File.Delete(<span class="string">@"./huvjie.info"</span>);</span><br><span class="line">            File.Delete(<span class="string">@"./log_copy.log"</span>);</span><br><span class="line">            File.Delete(<span class="string">@"./huvjie_copy.info"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 复制文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断下要复制过去的路径下有不有存在的文件，如果有复制会出现问题，这里把它删掉了。</span></span><br><span class="line">            <span class="keyword">if</span> (File.Exists(<span class="string">@"./log_copy.log"</span>) || File.Exists(<span class="string">@"./huvjie_copy.info"</span>)) &#123;</span><br><span class="line">                File.Delete(<span class="string">@"./log_copy.log"</span>);</span><br><span class="line">                File.Delete(<span class="string">@"./huvjie_copy.info"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            File.Copy(<span class="string">@"./log.log"</span>, <span class="string">@"./log_copy.log"</span>);</span><br><span class="line">            File.Copy(<span class="string">@"./huvjie.info"</span>, <span class="string">@"./huvjie_copy.info"</span>);</span><br><span class="line"></span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./log_copy.log"</span>);</span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./huvjie_copy.info"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 移动文件和复制文件差不多 </span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnMoveFile_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断下要复制过去的路径下有不有存在的文件，如果有移动会出现问题，这里把它删掉了。</span></span><br><span class="line">            <span class="keyword">if</span> (File.Exists(<span class="string">@"./log_copy.log"</span>) || File.Exists(<span class="string">@"./huvjie_copy.info"</span>)) &#123;</span><br><span class="line">                File.Delete(<span class="string">@"./log_copy.log"</span>);</span><br><span class="line">                File.Delete(<span class="string">@"./huvjie_copy.info"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            File.Move(<span class="string">@"./log.log"</span>, <span class="string">@"./0/log_copy.log"</span>);</span><br><span class="line">            File.Move(<span class="string">@"./huvjie.info"</span>, <span class="string">@"./0/huvjie_copy.info"</span>);</span><br><span class="line"></span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./0/log_copy.log"</span>);</span><br><span class="line">            System.Diagnostics.Process.Start(<span class="string">"notepad"</span>, <span class="string">@"./0/huvjie_copy.info"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//显示当前目录下的文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnGetAllDir_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//string[] files = Directory.GetDirectories(@".");</span></span><br><span class="line">            <span class="keyword">string</span>[] files = Directory.GetFiles(<span class="string">@"."</span>);</span><br><span class="line">            <span class="keyword">this</span>.txtContents.Clear();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">string</span> item <span class="keyword">in</span> files) &#123;</span><br><span class="line">                txtContents.Text = item + <span class="string">"\r\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这个和上面差不多</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click_1</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] files = Directory.GetDirectories(<span class="string">@"."</span>);</span><br><span class="line">            <span class="comment">//string[] files = Directory.GetFiles(@"./");</span></span><br><span class="line">            <span class="keyword">this</span>.txtContents.Clear();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">string</span> item <span class="keyword">in</span> files) &#123;</span><br><span class="line">                txtContents.Text = item + <span class="string">"\r\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建一个文件夹</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Directory.CreateDirectory(<span class="string">@"./文件夹"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除指定路径下所有目录和文件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnDelAllDirOrFiles_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DirectoryInfo dirinfo = <span class="keyword">new</span> DirectoryInfo(<span class="string">@".\0"</span>);</span><br><span class="line">            dirinfo.Delete(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Directory.Delete(""); // 这个只能删除为空的目录</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="http://image.huvjie.com/200617N03_img01.gif" alt="文件操作"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件流，文件夹的基本操作。有一些异常的判断没有加，实际中可以加一些异常的判断。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#运用BackgroundWorker空间实现多线程</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N02/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N02/</id>
    <published>2020-06-17T03:59:12.000Z</published>
    <updated>2020-06-17T04:13:22.678Z</updated>
    
    <content type="html"><![CDATA[<p>可见<code>BackGroundWorker</code>有三个事件，事件间通过<code>EventArgs</code>实现参数传递。有用到<code>CancellationPending</code>属性判断取消。<code>EvnentArgs</code> 有很多属性：<code>Cancel</code>、<code>Argument</code>、<code>Result</code>、<code>ProgressPercentage</code>、<code>UserState</code>属性等。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BackGroundWorkDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.backgroundWorker1.WorkerReportsProgress = <span class="literal">true</span>;  <span class="comment">// 这两个属性也可以去控件的属性栏里面改</span></span><br><span class="line">            <span class="keyword">this</span>.backgroundWorker1.WorkerSupportsCancellation = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">this</span>.StartPosition = FormStartPosition.CenterScreen;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Backgroundworker的三个事件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// [1]开始后台要执行的任务，可见参数都是通过 EventArgs 参数传递的。</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_DoWork</span>(<span class="params"><span class="keyword">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            BackgroundWorker bgw = sender <span class="keyword">as</span> BackgroundWorker;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (bgw.CancellationPending) &#123;<span class="comment">// 如果取消操作</span></span><br><span class="line">                    e.Cancel = <span class="literal">true</span>; <span class="comment">// 把取消结果传出去，传给 RunWorkerComplete事件中。</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result += i;<span class="comment">// 累加</span></span><br><span class="line">                bgw.ReportProgress(i, <span class="string">"已经完成了"</span> + i.ToString() + <span class="string">"%"</span>); <span class="comment">// 报告进度，第二个参数是： UserState。传给 ProgressChanged 事件。</span></span><br><span class="line">                System.Threading.Thread.Sleep((<span class="keyword">int</span>)e.Argument);<span class="comment">//根据外部传入参数休眠，模拟计算耗时。</span></span><br><span class="line">                e.Result = result; <span class="comment">// 把计算结果传出去</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [2]/汇报后台工作进展</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_ProgressChanged</span>(<span class="params"><span class="keyword">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Value = e.ProgressPercentage;<span class="comment">// 显示百分比</span></span><br><span class="line">            <span class="keyword">this</span>.lblProgressPercent.Text = e.UserState.ToString();<span class="comment">// 显示进度条上面的百分信息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [3]后台任务完成</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker1_RunWorkerCompleted</span>(<span class="params"><span class="keyword">object</span> sender, RunWorkerCompletedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Cancelled) &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = <span class="string">"用户取消操作"</span>;</span><br><span class="line">                btnBegin.Enabled = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (e.Error != <span class="literal">null</span>) &#123;</span><br><span class="line">                toolStripStatusLabel1.Text = e.Error.Message;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.lblResult.Text = e.Result.ToString(); <span class="comment">// 显示结果</span></span><br><span class="line">            <span class="keyword">this</span>.btnBegin.Enabled = <span class="literal">true</span>;</span><br><span class="line">            toolStripStatusLabel1.Text = <span class="string">"计算完成"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启任务</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnBegin_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblResult.Text = <span class="string">"???"</span>;</span><br><span class="line">            lblResult.Refresh();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 启动后台程序(参数argument传给休眠时间)</span></span><br><span class="line">            backgroundWorker1.RunWorkerAsync(<span class="number">20</span>);</span><br><span class="line">            btnBegin.Enabled = <span class="literal">false</span>;</span><br><span class="line">            toolStripStatusLabel1.Text = <span class="string">"稍等，正在计算…"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 取消</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCancel_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            backgroundWorker1.CancelAsync();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnClose_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果：</p><p><img src="http://image.huvjie.com/200617N02_img01.gif" alt="进度条"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可见&lt;code&gt;BackGroundWorker&lt;/code&gt;有三个事件，事件间通过&lt;code&gt;EventArgs&lt;/code&gt;实现参数传递。有用到&lt;code&gt;CancellationPending&lt;/code&gt;属性判断取消。&lt;code&gt;EvnentArgs&lt;/code&gt; 有很多属性：&lt;code&gt;Cancel&lt;/code&gt;、&lt;code&gt;Argument&lt;/code&gt;、&lt;code&gt;Result&lt;/code&gt;、&lt;code&gt;ProgressPercentage&lt;/code&gt;、&lt;code&gt;UserState&lt;/code&gt;属性等。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>SoftIntV-F001</title>
    <link href="https://www.andyvj.com/2020/06/17/200617N01/"/>
    <id>https://www.andyvj.com/2020/06/17/200617N01/</id>
    <published>2020-06-17T01:33:07.000Z</published>
    <updated>2020-06-17T01:41:29.822Z</updated>
    
    <content type="html"><![CDATA[<p>上周六面试了蜀丰科技一个助理软件工程师的职位，没有项目经验，又是转行的的，真不好搞啊。</p><p>临走的时候，面试官赵工说，“下周一或周二和老板说一下再给你打电话”，估计是场面话。</p><p>周一我电话追问了下他们人事，说帮我问下后给我电话。见周二没回复，我就微信上再次问了下。然后，这人事把我微信给删了。真他妈脑瓜子嗡嗡的啊~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周六面试了蜀丰科技一个助理软件工程师的职位，没有项目经验，又是转行的的，真不好搞啊。&lt;/p&gt;
&lt;p&gt;临走的时候，面试官赵工说，“下周一或周二和老板说一下再给你打电话”，估计是场面话。&lt;/p&gt;
&lt;p&gt;周一我电话追问了下他们人事，说帮我问下后给我电话。见周二没回复，我就微信上
      
    
    </summary>
    
      <category term="其他" scheme="https://www.andyvj.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="点滴" scheme="https://www.andyvj.com/tags/%E7%82%B9%E6%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>C#线程安全</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N06/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N06/</id>
    <published>2020-06-16T12:27:32.000Z</published>
    <updated>2020-06-16T13:14:55.402Z</updated>
    
    <content type="html"><![CDATA[<p>多个线程对同一资源的争夺，有可能出现线程不安全的现象。用<code>lock</code>这种最简单的方式实现下。</p><a id="more"></a><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p>直观的看下这种情况：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ThreadSafetyDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.CurrentThread.Name = <span class="string">"====主线程===="</span>;</span><br><span class="line">            Program prg = <span class="keyword">new</span> Program();</span><br><span class="line"></span><br><span class="line">            Thread newThread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(prg.DoSomeWork));</span><br><span class="line">            newThread.Name = <span class="string">"**新线程:"</span>;</span><br><span class="line">            newThread.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            newThread.Start(); <span class="comment">// 开始新线程</span></span><br><span class="line"></span><br><span class="line">            prg.DoSomeWork();  <span class="comment">// 开始主线程</span></span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 放在外面作为成员变量，这样连个线程操纵的时候才能看出不一样。</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> counter = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">                counter += i;</span><br><span class="line">                Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">====主线程====1</span><br><span class="line">====主线程====4</span><br><span class="line">====主线程====7</span><br><span class="line">====主线程====11</span><br><span class="line">====主线程====16</span><br><span class="line">====主线程====22</span><br><span class="line">====主线程====29</span><br><span class="line">**新线程:2</span><br><span class="line">**新线程:39</span><br><span class="line">**新线程:42</span><br><span class="line">**新线程:46</span><br><span class="line">**新线程:51</span><br><span class="line">**新线程:57</span><br><span class="line">**新线程:64</span><br><span class="line">**新线程:72</span><br><span class="line">**新线程:81</span><br><span class="line">**新线程:91</span><br><span class="line">====主线程====37</span><br><span class="line">====主线程====100</span><br><span class="line">====主线程====110</span><br></pre></td></tr></table></figure><p>每次的结果其实都不一样，这就是线程的不安全，多个线程操纵了同意资源。</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p>保证线程安全，加一个<code>lock</code>块。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lock</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">            counter += i;</span><br><span class="line">            Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就没问题，保证只有一个线程调用。</p><h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p>更优雅的方式写法：</p><p>增加命名空间<code>using System.Runtime.CompilerServices;</code>。然后在函数前增加一个这样的标签就可以——<code>[MethodImpl(MethodImplOptions.Synchronized)]</code>。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">MethodImpl(MethodImplOptions.Synchronized)</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DoSomeWork</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line">        counter += i;</span><br><span class="line">        Console.WriteLine(<span class="string">"&#123;0&#125;&#123;1&#125;"</span>, Thread.CurrentThread.Name, counter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子也可以，也是同样的效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多个线程对同一资源的争夺，有可能出现线程不安全的现象。用&lt;code&gt;lock&lt;/code&gt;这种最简单的方式实现下。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#进程读取方法</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N05/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N05/</id>
    <published>2020-06-16T11:01:55.000Z</published>
    <updated>2020-06-18T03:05:37.626Z</updated>
    
    <content type="html"><![CDATA[<p>首相要加入<code>using System.Diagnostics;</code>命名空间。 </p><p> <code>GetProcesses()</code>、<code>Modules</code>属性。一些进程的属性信息：</p><ol><li>Id   // 进程唯一标识符 (Id)</li><li>Handle //关联进程的本机句柄 (Handle)</li><li>HandleCount //打开句柄数 (HandleCount)</li><li>BasePriority //关联进程的基本优先级</li><li>StartTime  //进程启动时间</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;<span class="comment">//包含进程相关</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ProccessEx</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Process[] processes = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnGetProcessess_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            processes = Process.GetProcesses();<span class="comment">// 获取本地计算机上的进程</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.lbProcess.Items.Clear();</span><br><span class="line">            <span class="keyword">foreach</span> (Process item <span class="keyword">in</span> processes) &#123;</span><br><span class="line">                <span class="keyword">this</span>.lbProcess.Items.Add(item.ProcessName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">lbProcess_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (lbProcess.Items.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                lbModels.Items.Clear();</span><br><span class="line">            &#125;</span><br><span class="line">            Process currentProcess = processes[lbProcess.SelectedIndex]; <span class="comment">// SelectedIndex 属性</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ProcessModuleCollection modules = currentProcess.Modules; <span class="comment">// Mpdules 属性</span></span><br><span class="line">                <span class="keyword">foreach</span> (ProcessModule item <span class="keyword">in</span> modules) &#123;  <span class="comment">// 注意是 ProcessModule 类型</span></span><br><span class="line">                    lbModels.Items.Add(item.FileName);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 显示当前进程的基本信息</span></span><br><span class="line">                <span class="keyword">string</span> info = <span class="string">"进程唯一标识符 (Id):"</span> + currentProcess.Id + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"关联进程的本机句柄 (Handle):"</span> + currentProcess.Handle + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"打开句柄数 (HandleCount):"</span> + currentProcess.HandleCount + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"关联进程的基本优先级:"</span> + currentProcess.BasePriority + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">                info += <span class="string">"进程启动时间："</span> + currentProcess.StartTime + <span class="string">"\r\n\r\n"</span>;</span><br><span class="line"></span><br><span class="line">                txtProcessInfo.Text = info;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnKill_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (lbProcess.Items.Count == <span class="number">0</span> || lbProcess.SelectedIndex == <span class="number">-1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            Process currentProccess = processes[lbProcess.SelectedIndex];<span class="comment">// 获取当前鼠标选择的进程</span></span><br><span class="line">            currentProccess.Kill();<span class="comment">// 杀掉进程</span></span><br><span class="line">            currentProccess.Close();<span class="comment">// 释放进程资源</span></span><br><span class="line"></span><br><span class="line">            lbProcess.Items.RemoveAt(lbProcess.SelectedIndex);</span><br><span class="line"></span><br><span class="line">            lbModels.Items.Clear();</span><br><span class="line">            txtProcessInfo.Clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 用360浏览器打开我的博客</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnOpenIE_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 没注册就使用绝对路径</span></span><br><span class="line">            <span class="comment">// 打开我的博客</span></span><br><span class="line">            Process.Start(<span class="string">@"C:\Users\Administrator\AppData\Roaming\360se6\Application\360se.exe"</span>, <span class="string">"blog.huvjie.com"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打开新进程，如：notepad</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="sender"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="e"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnStartnew_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Process.Start(txtProcessFileName.Text.Trim());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出效果：</p><p><img src="http://image.huvjie.com/200616N05_img01.gif" alt="进程相关"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首相要加入&lt;code&gt;using System.Diagnostics;&lt;/code&gt;命名空间。 &lt;/p&gt;
&lt;p&gt; &lt;code&gt;GetProcesses()&lt;/code&gt;、&lt;code&gt;Modules&lt;/code&gt;属性。一些进程的属性信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Id   // 进程唯一标识符 (Id)&lt;/li&gt;
&lt;li&gt;Handle //关联进程的本机句柄 (Handle)&lt;/li&gt;
&lt;li&gt;HandleCount //打开句柄数 (HandleCount)&lt;/li&gt;
&lt;li&gt;BasePriority //关联进程的基本优先级&lt;/li&gt;
&lt;li&gt;StartTime  //进程启动时间&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#跨线程访问数据库</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N04/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N04/</id>
    <published>2020-06-16T08:12:40.000Z</published>
    <updated>2020-06-16T08:20:27.052Z</updated>
    
    <content type="html"><![CDATA[<p>跨线程的小运用。<code>DataSet</code> 和 <code>DataGradeView</code> <code>DataTable</code> 的数据填充。</p><p><img src="http://image.huvjie.com/200616N04_img01.gif" alt="效果"></p><div style="font-size:13px;color:gray;text-align:center">▲ 实现效果，同时还可以拖动窗口。</div><a id="more"></a><p><hr><br><span style="color:gray;font-size:12px"><br>Note：<br>一些和数据库的交互操作都封装在 SQLHelper 类中，练习时候自行添加。<br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跨线程的小运用。&lt;code&gt;DataSet&lt;/code&gt; 和 &lt;code&gt;DataGradeView&lt;/code&gt; &lt;code&gt;DataTable&lt;/code&gt; 的数据填充。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.huvjie.com/200616N04_img01.gif&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;font-size:13px;color:gray;text-align:center&quot;&gt;▲ 实现效果，同时还可以拖动窗口。&lt;/div&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#跨线程访问控件</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N03/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N03/</id>
    <published>2020-06-16T06:13:00.000Z</published>
    <updated>2020-06-16T06:16:54.635Z</updated>
    
    <content type="html"><![CDATA[<p>跨线程访问控件，主要用到控件的属性判断<code>InvokeRequired</code>是否为<code>true</code>，为<code>true</code>则为其他线程创建。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line">namespace 跨线程控件访问</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            StartPosition = FormStartPosition.CenterParent;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thread1 = <span class="keyword">new</span> Thread(() =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (lbl1.InvokeRequired) &#123; <span class="comment">//判断是否调动Invoke方法, 如果为 true 则是其他方法创建。</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">                        <span class="comment">//Invoke（）方法的第一个参数是返回值为void的委托,第二个是给委托对应方法传递的参数</span></span><br><span class="line">                        lbl1.Invoke(<span class="keyword">new</span> Action&lt;<span class="keyword">string</span>&gt;(s =&gt; lbl1.Text = i.ToString()), i.ToString());</span><br><span class="line">                        Thread.Sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            thread1.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thread1.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thread2 = <span class="keyword">new</span> Thread(() =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (lbl2.InvokeRequired) &#123; <span class="comment">//判断是否调动Invoke方法, 如果为 true 则是其他方法创建。</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; i++) &#123;</span><br><span class="line">                        <span class="comment">//Invoke（）方法的第一个参数是返回值为void的委托,第二个是给委托对应方法传递的参数</span></span><br><span class="line">                        lbl1.Invoke(<span class="keyword">new</span> Action&lt;<span class="keyword">string</span>&gt;(s =&gt; lbl2.Text = i.ToString()), i.ToString());</span><br><span class="line">                        Thread.Sleep(<span class="number">50</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            thread2.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thread2.Start();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><p><img src="http://image.huvjie.com/200616N03_img01.gif" alt="运行效果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跨线程访问控件，主要用到控件的属性判断&lt;code&gt;InvokeRequired&lt;/code&gt;是否为&lt;code&gt;true&lt;/code&gt;，为&lt;code&gt;true&lt;/code&gt;则为其他线程创建。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#异步回调函数基础</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N02/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N02/</id>
    <published>2020-06-16T04:58:06.000Z</published>
    <updated>2020-06-16T05:39:09.836Z</updated>
    
    <content type="html"><![CDATA[<p>回调函数的基本用法。</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AsyncBasic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">new</span> Program().ExcuteCal();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt; Cal = <span class="literal">null</span>;  <span class="comment">// [1] 声明委托变量。 都要用声明为成员变量</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Program</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cal = <span class="keyword">new</span> Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt;(ExcuteTask1);   <span class="comment">// 初始化委托。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// [4] 同时执行多个任务</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ExcuteCal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">                Cal.BeginInvoke(i * <span class="number">10</span>, i * <span class="number">100</span>, MyCallBack, i);</span><br><span class="line">                <span class="comment">//最后一个参数 i 给回调函数的字段AsyncState赋值，如果数据很多可以定义成类或结构</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask1</span>(<span class="params"><span class="keyword">int</span> num, <span class="keyword">int</span> ms</span>) <span class="comment">// [2] 根据委托实现方法。</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.Sleep(ms);</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//[5] 回调函数</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MyCallBack</span>(<span class="params">IAsyncResult result</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> res = Cal.EndInvoke(result);</span><br><span class="line">            Console.WriteLine(<span class="string">"第&#123;0&#125;个计算结果是&#123;1&#125;"</span>, result.AsyncState.ToString(), res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序有些地方可以用 lamdba 表达式简化下。</p><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">第1个计算结果是100</span><br><span class="line">第2个计算结果是400</span><br><span class="line">第3个计算结果是900</span><br><span class="line">第4个计算结果是1600</span><br><span class="line">第5个计算结果是2500</span><br><span class="line">第6个计算结果是3600</span><br><span class="line">第7个计算结果是4900</span><br><span class="line">第8个计算结果是6400</span><br><span class="line">第9个计算结果是8100</span><br><span class="line">第10个计算结果是10000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;回调函数的基本用法。&lt;/p&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#异步基础</title>
    <link href="https://www.andyvj.com/2020/06/16/200616N01/"/>
    <id>https://www.andyvj.com/2020/06/16/200616N01/</id>
    <published>2020-06-16T01:57:33.000Z</published>
    <updated>2020-06-16T04:32:23.176Z</updated>
    
    <content type="html"><![CDATA[<p>一般顺序：</p><ol><li>定义一个委托。</li><li>根据委托实现方法。</li><li>异步调用。</li></ol><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AsyncBasic</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">new</span> Program().ExcuteCal();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ExcuteCal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Cal = ExcuteTask1;  <span class="comment">// [1] 声明委托变量。</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// [3] 异步调用</span></span><br><span class="line">            IAsyncResult result = Cal.BeginInvoke(<span class="number">100</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">"正在计算…"</span>); </span><br><span class="line">            Console.WriteLine(ExcuteTask2(<span class="number">20</span>));</span><br><span class="line">            <span class="keyword">int</span> s = Cal.EndInvoke(result);   </span><br><span class="line">            <span class="comment">//委托类型的EndInvoke（）方法：借助于IAsyncResult接口对象，不断查询异步调用是否结束。</span></span><br><span class="line">            <span class="comment">//该方法知道被异步调用的方法所有参数，所有，异步调用完毕后，取出异步调用结果作为返回值。</span></span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask1</span>(<span class="params"><span class="keyword">int</span> num</span>) <span class="comment">// [2] 根据委托实现方法。</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">ExcuteTask2</span>(<span class="params"><span class="keyword">int</span> num</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> num * num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正在计算…</span><br><span class="line">400</span><br><span class="line">10000</span><br></pre></td></tr></table></figure><p>可见，异步调用的时候可以做其他的事情。</p><p>委托类型的<code>Begininvoke（&lt;输入和输出变量&gt;,AsyncCallbac callback,object asyncState）</code>方法：异步调用的核心<br>第一个参数，表示委托对应的方法实参。<br>第二个参数<code>callback</code>，回调函数，表示异步调用结束时自动调用的函数。<br>第三个参数<code>asyncState</code>，用于向回调函数提供相关参数信息<br>返回值：<code>IAsyncResult</code> –&gt;异步操作状态接口，封装了异步执行的中的参数  </p><!--<hr/><span style="color:gray;font-size:12px">参考： 1.[link-01]()2.[link-02]()3.[link-03]()</span>-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义一个委托。&lt;/li&gt;
&lt;li&gt;根据委托实现方法。&lt;/li&gt;
&lt;li&gt;异步调用。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程爱好" scheme="https://www.andyvj.com/categories/%E7%BC%96%E7%A8%8B%E7%88%B1%E5%A5%BD/"/>
    
    
      <category term="C#" scheme="https://www.andyvj.com/tags/C/"/>
    
  </entry>
  
</feed>
